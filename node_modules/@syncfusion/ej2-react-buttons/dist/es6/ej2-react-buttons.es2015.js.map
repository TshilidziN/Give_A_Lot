{"version":3,"file":"ej2-react-buttons.es2015.js","sources":["../src/es6/button/button.component.js","../src/es6/check-box/checkbox.component.js","../src/es6/radio-button/radiobutton.component.js","../src/es6/switch/switch.component.js","../src/es6/chips/chips-directive.js","../src/es6/chips/chiplist.component.js"],"sourcesContent":["import * as React from 'react';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * `ButtonComponent` represents the react Button Component.\n * ```ts\n * <ButtonComponent></ButtonComponent>\n * ```\n */\nexport class ButtonComponent extends Button {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('button', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(ButtonComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the react CheckBox Component.\n * ```ts\n * <CheckBoxComponent label='Default'></CheckBoxComponent>\n * ```\n */\nexport class CheckBoxComponent extends CheckBox {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(CheckBoxComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { RadioButton } from '@syncfusion/ej2-buttons';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the react RadioButton Component.\n * ```ts\n * <RadioButtonComponent label='Default'></RadioButtonComponent>\n * ```\n */\nexport class RadioButtonComponent extends RadioButton {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(RadioButtonComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { Switch } from '@syncfusion/ej2-buttons';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the react Switch Component.\n * ```ts\n * <SwitchComponent></SwitchComponent>\n * ```\n */\nexport class SwitchComponent extends Switch {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(SwitchComponent, [ComponentBase, React.Component]);\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `ChipDirective` directive represent a chip of the React ChipList.\n * ```html\n * <ChipListComponent>\n *   <ChipsDirective>\n *    <ChipDirective text='chip1'></ChipDirective>\n *    <ChipDirective text='chip2'></ChipDirective>\n *   </ChipsDirective>\n * </ChipListComponent>\n * ```\n */\nexport class ChipDirective extends ComplexBase {\n}\nChipDirective.moduleName = 'chip';\nexport class ChipsDirective extends ComplexBase {\n}\nChipsDirective.propertyName = 'chips';\nChipsDirective.moduleName = 'chips';\n","import * as React from 'react';\nimport { ChipList } from '@syncfusion/ej2-buttons';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the Essential JS 2 React ChipList Component.\n * ```ts\n * <ChipListComponent></ChipListComponent>\n * ```\n */\nexport class ChipListComponent extends ChipList {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.directivekeys = { 'chips': 'chip' };\n        this.immediateRender = false;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(ChipListComponent, [ComponentBase, React.Component]);\n"],"names":["React.createElement","React.Component","React.Fragment"],"mappings":"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"}