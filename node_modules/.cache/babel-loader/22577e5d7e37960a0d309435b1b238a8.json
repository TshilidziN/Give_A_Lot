{"ast":null,"code":"import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\n\nvar MaskedDateTime = function () {\n  function MaskedDateTime(parent) {\n    this.mask = '';\n    this.defaultConstant = {\n      day: 'day',\n      month: 'month',\n      year: 'year',\n      hour: 'hour',\n      minute: 'minute',\n      second: 'second',\n      dayOfTheWeek: 'day of the week'\n    };\n    this.hiddenMask = '';\n    this.validCharacters = 'dMyhmHfasz';\n    this.isDayPart = false;\n    this.isMonthPart = false;\n    this.isYearPart = false;\n    this.isHourPart = false;\n    this.isMinutePart = false;\n    this.isSecondsPart = false;\n    this.isMilliSecondsPart = false;\n    this.monthCharacter = '';\n    this.periodCharacter = '';\n    this.isHiddenMask = false;\n    this.isComplete = false;\n    this.isNavigate = false;\n    this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n    this.isDeletion = false;\n    this.isShortYear = false;\n    this.isDeleteKey = false;\n    this.parent = parent;\n    this.dateformat = this.getCulturedFormat();\n    this.value = this.parent.value != null ? this.parent.value : new Date();\n    this.value.setMonth(0);\n    this.value.setHours(0);\n    this.value.setMinutes(0);\n    this.value.setSeconds(0);\n    this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  MaskedDateTime.prototype.getModuleName = function () {\n    return 'MaskedDateTime';\n  };\n\n  MaskedDateTime.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('createMask', this.createMask, this);\n    this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n    this.parent.on('inputHandler', this.maskInputHandler, this);\n    this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n    this.parent.on('clearHandler', this.clearHandler, this);\n  };\n\n  MaskedDateTime.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('createMask', this.createMask);\n    this.parent.off('setMaskSelection', this.validCharacterCheck);\n    this.parent.off('inputHandler', this.maskInputHandler);\n    this.parent.off('keyDownHandler', this.maskKeydownHandler);\n    this.parent.off('clearHandler', this.clearHandler);\n  };\n\n  MaskedDateTime.prototype.createMask = function (dateformat) {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.dateformat = this.getCulturedFormat();\n    if (this.parent.maskPlaceholder.day) this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n    if (this.parent.maskPlaceholder.month) this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n    if (this.parent.maskPlaceholder.year) this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n    if (this.parent.maskPlaceholder.hour) this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n    if (this.parent.maskPlaceholder.minute) this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n    if (this.parent.maskPlaceholder.second) this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n    if (this.parent.maskPlaceholder.dayOfTheWeek) this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n    this.getCUltureMaskFormat();\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.mask = this.previousValue = inputValue;\n    this.parent.maskedDateValue = this.mask;\n\n    if (this.parent.value) {\n      this.setDynamicValue();\n    }\n  };\n\n  MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n    this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n    this.objectString = Object.keys(this.defaultConstant);\n\n    for (var i = 0; i < this.objectString.length; i++) {\n      this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n    }\n  };\n\n  MaskedDateTime.prototype.validCharacterCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n\n    for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n      if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n        this.setSelection(this.hiddenMask[i]);\n        return;\n      }\n\n      if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n        this.setSelection(this.hiddenMask[j]);\n        return;\n      }\n    }\n  };\n\n  MaskedDateTime.prototype.setDynamicValue = function () {\n    this.value = this.parent.value;\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n    this.updateValue(); // this.parent.inputElement.selectionStart = start;\n    // this.validCharacterCheck();\n  };\n\n  MaskedDateTime.prototype.setSelection = function (validChar) {\n    var start = -1;\n    var end = 0;\n\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (this.hiddenMask[i] === validChar) {\n        end = i + 1;\n\n        if (start === -1) {\n          start = i;\n        }\n      }\n    }\n\n    if (start < 0) {\n      start = 0;\n    }\n\n    this.parent.inputElement.setSelectionRange(start, end);\n  };\n\n  MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n    if (args.e.key === 'Delete') {\n      this.isDeleteKey = true;\n      return;\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB || args.e.key === END || args.e.key === HOME)) {\n      var start = this.parent.inputElement.selectionStart;\n      var end = this.parent.inputElement.selectionEnd;\n      var length_1 = this.parent.inputElement.value.length;\n\n      if (start == 0 && end == length_1 && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n        var index = args.e.action === SHIFTTAB ? end : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n      }\n\n      if (args.e.key === END || args.e.key === HOME) {\n        var range = args.e.key === END ? length_1 : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n      }\n\n      this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n      var start = this.parent.inputElement.selectionStart;\n      this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n      var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = true;\n      this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = false;\n      this.previousHiddenMask = this.hiddenMask;\n      this.previousValue = inputValue;\n      this.parent.inputElement.value = inputValue;\n      this.parent.inputElement.selectionStart = start;\n      this.validCharacterCheck();\n    }\n  };\n\n  MaskedDateTime.prototype.differenceCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var inputValue = this.parent.inputElement.value;\n    var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n    var newVal = inputValue.substring(0, start);\n    var newDateValue = this.value;\n    var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n    if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n      for (var i = newVal.length; i < previousVal.length; i++) {\n        if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n          this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n        }\n      }\n\n      if (this.isDeletion) {\n        return;\n      }\n    }\n\n    switch (this.previousHiddenMask[start - 1]) {\n      case 'd':\n        var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(date)) {\n          return;\n        }\n\n        for (var i = 0; date > maxDate; i++) {\n          date = parseInt(date.toString().slice(1), 10);\n        }\n\n        if (date >= 1) {\n          newDateValue.setDate(date);\n          this.isNavigate = date.toString().length === 2;\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n\n          if (newDateValue.getMonth() !== this.value.getMonth()) {\n            return;\n          }\n\n          this.isDayPart = true;\n        } else {\n          this.isDayPart = false;\n        }\n\n        break;\n\n      case 'M':\n        var month = void 0;\n\n        if (newDateValue.getMonth().toString().length < 2) {\n          month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        } else {\n          month = parseInt(newVal[start - 1], 10);\n        }\n\n        if (!isNaN(month)) {\n          while (month > 12) {\n            month = parseInt(month.toString().slice(1), 10);\n          }\n\n          if (month >= 1) {\n            newDateValue.setMonth(month - 1);\n            this.isNavigate = month.toString().length === 2;\n\n            if (newDateValue.getMonth() !== month - 1) {\n              newDateValue.setDate(1);\n              newDateValue.setMonth(month - 1);\n            }\n\n            if (this.isDayPart) {\n              var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n              var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n              if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                newDateValue.setDate(currentMaxDate);\n              }\n            }\n\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            this.isMonthPart = true;\n          } else {\n            newDateValue.setMonth(0);\n            this.isMonthPart = false;\n          }\n        } else {\n          // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n          var monthString = this.getCulturedValue('months[stand-alone].wide');\n          var monthValue = Object.keys(monthString);\n          this.monthCharacter += newVal[start - 1].toLowerCase();\n\n          while (this.monthCharacter.length > 0) {\n            var i = 1;\n\n            for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n              var months = monthValue_1[_i];\n\n              if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                newDateValue.setMonth(i - 1);\n                this.isMonthPart = true;\n                this.value = newDateValue;\n                return;\n              }\n\n              i++;\n            }\n\n            this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n          }\n        }\n\n        break;\n\n      case 'y':\n        var year = (this.isYearPart && newDateValue.getFullYear().toString().length < 4 && !this.isShortYear ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.isShortYear = false;\n\n        if (isNaN(year)) {\n          return;\n        }\n\n        while (year > 9999) {\n          year = parseInt(year.toString().slice(1), 10);\n        }\n\n        if (year < 1) {\n          this.isYearPart = false;\n        } else {\n          newDateValue.setFullYear(year);\n\n          if (year.toString().length === 4) {\n            this.isNavigate = true;\n          }\n\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n          this.isYearPart = true;\n        }\n\n        break;\n\n      case 'h':\n        this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        while (this.hour > 12) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + this.hour % 12);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        break;\n\n      case 'H':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        for (var i = 0; this.hour > 23; i++) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(this.hour);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        break;\n\n      case 'm':\n        var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(minutes)) {\n          return;\n        }\n\n        for (var i = 0; minutes > 59; i++) {\n          minutes = parseInt(minutes.toString().slice(1), 10);\n        }\n\n        newDateValue.setMinutes(minutes);\n        this.isNavigate = minutes.toString().length === 2;\n        this.isMinutePart = true;\n        break;\n\n      case 's':\n        var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(seconds)) {\n          return;\n        }\n\n        for (var i = 0; seconds > 59; i++) {\n          seconds = parseInt(seconds.toString().slice(1), 10);\n        }\n\n        newDateValue.setSeconds(seconds);\n        this.isNavigate = seconds.toString().length === 2;\n        this.isSecondsPart = true;\n        break;\n\n      case 'a':\n        this.periodCharacter += newVal[start - 1].toLowerCase(); // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n\n        var periodString = this.getCulturedValue('dayPeriods.format.wide');\n        var periodkeys = Object.keys(periodString); //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n\n        for (var i = 0; this.periodCharacter.length > 0; i++) {\n          if (periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12 || periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12) {\n            newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n            this.value = newDateValue;\n          }\n\n          this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length); // Object.values()\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.value = newDateValue;\n  };\n\n  MaskedDateTime.prototype.formatCheck = function () {\n    var proxy = this;\n\n    function formatValueSpecifier(formattext) {\n      var isSymbol;\n      var result;\n      var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n      var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n      var daysWide = proxy.getCulturedValue('days[stand-alone].wide');\n      var dayKeyWide = Object.keys(daysWide);\n      var daysNarrow = proxy.getCulturedValue('days[stand-alone].narrow');\n      var dayKeyNarrow = Object.keys(daysNarrow);\n      var monthAbbreviated = proxy.getCulturedValue('months[stand-alone].abbreviated');\n      var monthWide = proxy.getCulturedValue('months[stand-alone].wide');\n      var periodString = proxy.getCulturedValue('dayPeriods.format.wide');\n      var periodkeys = Object.keys(periodString);\n      var milliseconds;\n      var dateOptions;\n\n      switch (formattext) {\n        case 'ddd':\n        case 'dddd':\n        case 'd':\n          result = proxy.isDayPart ? proxy.value.getDate().toString() : proxy.defaultConstant['day'].toString();\n          break;\n\n        case 'dd':\n          result = proxy.isDayPart ? proxy.roundOff(proxy.value.getDate(), 2) : proxy.defaultConstant['day'].toString();\n          break;\n\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'M':\n          result = proxy.isMonthPart ? (proxy.value.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MM':\n          result = proxy.isMonthPart ? proxy.roundOff(proxy.value.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMM':\n          result = proxy.isMonthPart ? monthAbbreviated[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMMM':\n          result = proxy.isMonthPart ? monthWide[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'yy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n\n          if (proxy.isYearPart) {\n            proxy.isNavigate = proxy.isShortYear = (proxy.value.getFullYear() % 100).toString().length === 2;\n          }\n\n          break;\n\n        case 'y':\n        case 'yyyy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n          break;\n\n        case 'h':\n          result = proxy.isHourPart ? (proxy.value.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'hh':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'H':\n          result = proxy.isHourPart ? proxy.value.getHours().toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'HH':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'm':\n          result = proxy.isMinutePart ? proxy.value.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n          break;\n\n        case 'mm':\n          result = proxy.isMinutePart ? proxy.roundOff(proxy.value.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n          break;\n\n        case 's':\n          result = proxy.isSecondsPart ? proxy.value.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n          break;\n\n        case 'ss':\n          result = proxy.isSecondsPart ? proxy.roundOff(proxy.value.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n          break;\n\n        case 'f':\n          result = Math.floor(proxy.value.getMilliseconds() / 100).toString();\n          break;\n\n        case 'ff':\n          milliseconds = proxy.value.getMilliseconds();\n\n          if (proxy.value.getMilliseconds() > 99) {\n            milliseconds = Math.floor(proxy.value.getMilliseconds() / 10);\n          }\n\n          result = proxy.roundOff(milliseconds, 2);\n          break;\n\n        case 'fff':\n          result = proxy.roundOff(proxy.value.getMilliseconds(), 3);\n          break;\n\n        case 'a':\n        case 'aa':\n          result = proxy.value.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n          break;\n\n        case 'z':\n        case 'zz':\n        case 'zzz':\n        case 'zzzz':\n          dateOptions = {\n            format: formattext,\n            type: 'dateTime',\n            skeleton: 'yMd',\n            calendar: proxy.parent.calendarMode\n          };\n          result = proxy.parent.globalize.formatDate(proxy.value, dateOptions);\n          break;\n      }\n\n      result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n\n      if (proxy.isHiddenMask) {\n        var hiddenChar = '';\n\n        for (var i = 0; i < result.length; i++) {\n          hiddenChar += formattext[0];\n        }\n\n        return hiddenChar;\n      } else {\n        return result;\n      }\n    }\n\n    return formatValueSpecifier;\n  };\n\n  MaskedDateTime.prototype.maskInputHandler = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var selectionChar = this.previousHiddenMask[start - 1];\n    var inputValue;\n    this.differenceCheck();\n    inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.inputElement.value = inputValue;\n    this.parent.inputElement.selectionStart = start;\n    this.validCharacterCheck();\n\n    if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n      var isbackward = this.isNavigate ? false : true;\n      this.isNavigate = this.isDeletion = false;\n      this.navigateSelection(isbackward);\n    }\n\n    this.isDeleteKey = false; // this.setSelection(selectionChar);\n    // this.navigateSelection(inputValue);\n  };\n\n  MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n    var start = this.parent.inputElement.selectionStart;\n    var end = this.parent.inputElement.selectionEnd;\n    var formatIndex = isbackward ? start - 1 : end + 1;\n\n    while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n      if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n        this.setSelection(this.hiddenMask[formatIndex]);\n        break;\n      }\n\n      formatIndex = formatIndex + (isbackward ? -1 : 1);\n    }\n  };\n\n  MaskedDateTime.prototype.roundOff = function (val, count) {\n    var valueText = val.toString();\n    var length = count - valueText.length;\n    var result = '';\n\n    for (var i = 0; i < length; i++) {\n      result += '0';\n    }\n\n    return result + valueText;\n  };\n\n  MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n    switch (format) {\n      case 'd':\n        this.isDayPart = isSegment;\n        break;\n\n      case 'M':\n        this.isMonthPart = isSegment;\n\n        if (!isSegment) {\n          this.value.setMonth(0);\n          this.monthCharacter = '';\n        }\n\n        break;\n\n      case 'y':\n        this.isYearPart = isSegment;\n        break;\n\n      case 'H':\n      case 'h':\n        this.isHourPart = isSegment;\n\n        if (!isSegment) {\n          this.periodCharacter = '';\n        }\n\n        break;\n\n      case 'm':\n        this.isMinutePart = isSegment;\n        break;\n\n      case 's':\n        this.isSecondsPart = isSegment;\n        break;\n\n      default:\n        return false;\n    }\n\n    return true;\n  };\n\n  MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    } else {\n      return;\n    }\n\n    var newDateValue = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n    this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n    var incrementValue = isDecrement ? -1 : 1;\n\n    switch (formatText) {\n      case 'd':\n        newDateValue.setDate(newDateValue.getDate() + incrementValue);\n        break;\n\n      case 'M':\n        var newMonth = newDateValue.getMonth() + incrementValue;\n        newDateValue.setDate(1);\n        newDateValue.setMonth(newMonth);\n\n        if (this.isDayPart) {\n          var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n          var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n          if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n            newDateValue.setDate(currentMaxDate);\n          } else {\n            newDateValue.setDate(this.previousDate.getDate());\n          }\n        } else {\n          newDateValue.setDate(this.previousDate.getDate());\n        }\n\n        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n        break;\n\n      case 'y':\n        newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n        break;\n\n      case 'H':\n      case 'h':\n        newDateValue.setHours(newDateValue.getHours() + incrementValue);\n        break;\n\n      case 'm':\n        newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n        break;\n\n      case 's':\n        newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n        break;\n\n      case 'a':\n        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n        break;\n\n      default:\n        break;\n    }\n\n    this.value = newDateValue.getFullYear() > 0 ? newDateValue : this.value;\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      this.handleDeletion(this.hiddenMask[start], true);\n    }\n  };\n\n  MaskedDateTime.prototype.getCulturedValue = function (format) {\n    var locale = this.parent.locale;\n    var result;\n\n    if (locale === 'en' || locale === 'en-US') {\n      result = getValue(format, getDefaultDateObject());\n    } else {\n      result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.getCulturedFormat = function () {\n    var formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n    if (this.parent.moduleName == 'datepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.format && this.parent.formatString) {\n        formatString = this.parent.formatString;\n      }\n    }\n\n    if (this.parent.moduleName == 'datetimepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.dateTimeFormat) {\n        formatString = this.parent.dateTimeFormat;\n      }\n    }\n\n    if (this.parent.moduleName == 'timepicker') {\n      formatString = this.parent.cldrTimeFormat();\n    }\n\n    return formatString;\n  };\n\n  MaskedDateTime.prototype.clearHandler = function () {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.updateValue();\n  };\n\n  MaskedDateTime.prototype.updateValue = function () {\n    this.monthCharacter = this.periodCharacter = '';\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.updateInputValue(inputValue); //this.parent.inputElement.value = inputValue;\n  };\n\n  MaskedDateTime.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return MaskedDateTime;\n}();\n\nexport { MaskedDateTime };","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/node_modules/@syncfusion/ej2-calendars/src/maskbase/masked-date-time.js"],"names":["L10n","getValue","getDefaultDateObject","cldrData","ARROWLEFT","ARROWRIGHT","ARROWUP","ARROWDOWN","TAB","SHIFTTAB","END","HOME","MaskedDateTime","parent","mask","defaultConstant","day","month","year","hour","minute","second","dayOfTheWeek","hiddenMask","validCharacters","isDayPart","isMonthPart","isYearPart","isHourPart","isMinutePart","isSecondsPart","isMilliSecondsPart","monthCharacter","periodCharacter","isHiddenMask","isComplete","isNavigate","formatRegex","isDeletion","isShortYear","isDeleteKey","dateformat","getCulturedFormat","value","Date","setMonth","setHours","setMinutes","setSeconds","previousDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","removeEventListener","addEventListener","prototype","getModuleName","isDestroyed","on","createMask","validCharacterCheck","maskInputHandler","maskKeydownHandler","clearHandler","off","maskPlaceholder","toString","getCUltureMaskFormat","inputValue","replace","formatCheck","previousHiddenMask","previousValue","maskedDateValue","setDynamicValue","l10n","moduleName","locale","objectString","Object","keys","i","length","getConstant","start","inputElement","selectionStart","j","indexOf","setSelection","updateValue","validChar","end","setSelectionRange","args","e","key","altKey","ctrlKey","action","selectionEnd","length_1","index","range","navigateSelection","dateAlteration","differenceCheck","previousVal","substring","newVal","newDateValue","maxDate","handleDeletion","date","parseInt","isNaN","slice","setDate","previousMaxDate","currentMaxDate","monthString","getCulturedValue","monthValue","toLowerCase","_i","monthValue_1","months","setFullYear","Math","floor","minutes","seconds","periodString","periodkeys","proxy","formatValueSpecifier","formattext","isSymbol","result","daysAbbreviated","dayKeyAbbreviated","daysWide","dayKeyWide","daysNarrow","dayKeyNarrow","monthAbbreviated","monthWide","milliseconds","dateOptions","roundOff","getDay","getMilliseconds","format","type","skeleton","calendar","calendarMode","globalize","formatDate","undefined","hiddenChar","selectionChar","isbackward","formatIndex","val","count","valueText","isSegment","isDecrement","formatText","incrementValue","newMonth","formatString","dateTimeFormat","cldrTimeFormat","updateInputValue","destroy"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,oBAAzB,EAA+CC,QAA/C,QAA+D,sBAA/D;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,IAAI,GAAG,MAAX;;AACA,IAAIC,cAAc,GAAkB,YAAY;AAC5C,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,eAAL,GAAuB;AACnBC,MAAAA,GAAG,EAAE,KADc;AAEnBC,MAAAA,KAAK,EAAE,OAFY;AAGnBC,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,IAAI,EAAE,MAJa;AAKnBC,MAAAA,MAAM,EAAE,QALW;AAMnBC,MAAAA,MAAM,EAAE,QANW;AAOnBC,MAAAA,YAAY,EAAE;AAPK,KAAvB;AASA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,eAAL,GAAuB,YAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,4HAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAK3B,MAAL,GAAcA,MAAd;AACA,SAAK4B,UAAL,GAAkB,KAAKC,iBAAL,EAAlB;AACA,SAAKC,KAAL,GAAa,KAAK9B,MAAL,CAAY8B,KAAZ,IAAqB,IAArB,GAA4B,KAAK9B,MAAL,CAAY8B,KAAxC,GAAgD,IAAIC,IAAJ,EAA7D;AACA,SAAKD,KAAL,CAAWE,QAAX,CAAoB,CAApB;AACA,SAAKF,KAAL,CAAWG,QAAX,CAAoB,CAApB;AACA,SAAKH,KAAL,CAAWI,UAAX,CAAsB,CAAtB;AACA,SAAKJ,KAAL,CAAWK,UAAX,CAAsB,CAAtB;AACA,SAAKC,YAAL,GAAoB,IAAIL,IAAJ,CAAS,KAAKD,KAAL,CAAWO,WAAX,EAAT,EAAmC,KAAKP,KAAL,CAAWQ,QAAX,EAAnC,EAA0D,KAAKR,KAAL,CAAWS,OAAX,EAA1D,EAAgF,KAAKT,KAAL,CAAWU,QAAX,EAAhF,EAAuG,KAAKV,KAAL,CAAWW,UAAX,EAAvG,EAAgI,KAAKX,KAAL,CAAWY,UAAX,EAAhI,CAApB;AACA,SAAKC,mBAAL;AACA,SAAKC,gBAAL;AACH;;AACD7C,EAAAA,cAAc,CAAC8C,SAAf,CAAyBC,aAAzB,GAAyC,YAAY;AACjD,WAAO,gBAAP;AACH,GAFD;;AAGA/C,EAAAA,cAAc,CAAC8C,SAAf,CAAyBD,gBAAzB,GAA4C,YAAY;AACpD,QAAI,KAAK5C,MAAL,CAAY+C,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAK/C,MAAL,CAAYgD,EAAZ,CAAe,YAAf,EAA6B,KAAKC,UAAlC,EAA8C,IAA9C;AACA,SAAKjD,MAAL,CAAYgD,EAAZ,CAAe,kBAAf,EAAmC,KAAKE,mBAAxC,EAA6D,IAA7D;AACA,SAAKlD,MAAL,CAAYgD,EAAZ,CAAe,cAAf,EAA+B,KAAKG,gBAApC,EAAsD,IAAtD;AACA,SAAKnD,MAAL,CAAYgD,EAAZ,CAAe,gBAAf,EAAiC,KAAKI,kBAAtC,EAA0D,IAA1D;AACA,SAAKpD,MAAL,CAAYgD,EAAZ,CAAe,cAAf,EAA+B,KAAKK,YAApC,EAAkD,IAAlD;AACH,GATD;;AAUAtD,EAAAA,cAAc,CAAC8C,SAAf,CAAyBF,mBAAzB,GAA+C,YAAY;AACvD,QAAI,KAAK3C,MAAL,CAAY+C,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAK/C,MAAL,CAAYsD,GAAZ,CAAgB,YAAhB,EAA8B,KAAKL,UAAnC;AACA,SAAKjD,MAAL,CAAYsD,GAAZ,CAAgB,kBAAhB,EAAoC,KAAKJ,mBAAzC;AACA,SAAKlD,MAAL,CAAYsD,GAAZ,CAAgB,cAAhB,EAAgC,KAAKH,gBAArC;AACA,SAAKnD,MAAL,CAAYsD,GAAZ,CAAgB,gBAAhB,EAAkC,KAAKF,kBAAvC;AACA,SAAKpD,MAAL,CAAYsD,GAAZ,CAAgB,cAAhB,EAAgC,KAAKD,YAArC;AACH,GATD;;AAUAtD,EAAAA,cAAc,CAAC8C,SAAf,CAAyBI,UAAzB,GAAsC,UAAUrB,UAAV,EAAsB;AACxD,SAAKhB,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;AACA,SAAKW,UAAL,GAAkB,KAAKC,iBAAL,EAAlB;AACA,QAAI,KAAK7B,MAAL,CAAYuD,eAAZ,CAA4BpD,GAAhC,EACI,KAAKD,eAAL,CAAqB,KAArB,IAA8B,KAAKF,MAAL,CAAYuD,eAAZ,CAA4BpD,GAA1D;AACJ,QAAI,KAAKH,MAAL,CAAYuD,eAAZ,CAA4BnD,KAAhC,EACI,KAAKF,eAAL,CAAqB,OAArB,IAAgC,KAAKF,MAAL,CAAYuD,eAAZ,CAA4BnD,KAA5D;AACJ,QAAI,KAAKJ,MAAL,CAAYuD,eAAZ,CAA4BlD,IAAhC,EACI,KAAKH,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAYuD,eAAZ,CAA4BlD,IAA3D;AACJ,QAAI,KAAKL,MAAL,CAAYuD,eAAZ,CAA4BjD,IAAhC,EACI,KAAKJ,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAYuD,eAAZ,CAA4BjD,IAA3D;AACJ,QAAI,KAAKN,MAAL,CAAYuD,eAAZ,CAA4BhD,MAAhC,EACI,KAAKL,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAYuD,eAAZ,CAA4BhD,MAA7D;AACJ,QAAI,KAAKP,MAAL,CAAYuD,eAAZ,CAA4B/C,MAAhC,EACI,KAAKN,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAYuD,eAAZ,CAA4B/C,MAA7D;AACJ,QAAI,KAAKR,MAAL,CAAYuD,eAAZ,CAA4B9C,YAAhC,EACI,KAAKP,eAAL,CAAqB,cAArB,IAAuC,KAAKF,MAAL,CAAYuD,eAAZ,CAA4B9C,YAA5B,CAAyC+C,QAAzC,EAAvC;AACJ,SAAKC,oBAAL;AACA,QAAIC,UAAU,GAAG,KAAK9B,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAjB;AACA,SAAKvC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKkB,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAlB;AACA,SAAKvC,YAAL,GAAoB,KAApB;AACA,SAAKwC,kBAAL,GAA0B,KAAKnD,UAA/B;AACA,SAAKT,IAAL,GAAY,KAAK6D,aAAL,GAAqBJ,UAAjC;AACA,SAAK1D,MAAL,CAAY+D,eAAZ,GAA8B,KAAK9D,IAAnC;;AACA,QAAI,KAAKD,MAAL,CAAY8B,KAAhB,EAAuB;AACnB,WAAKkC,eAAL;AACH;AACJ,GA5BD;;AA6BAjE,EAAAA,cAAc,CAAC8C,SAAf,CAAyBY,oBAAzB,GAAgD,YAAY;AACxD,SAAKQ,IAAL,GAAY,IAAI9E,IAAJ,CAAS,KAAKa,MAAL,CAAYkE,UAArB,EAAiC,KAAKhE,eAAtC,EAAuD,KAAKF,MAAL,CAAYmE,MAAnE,CAAZ;AACA,SAAKC,YAAL,GAAoBC,MAAM,CAACC,IAAP,CAAY,KAAKpE,eAAjB,CAApB;;AACA,SAAK,IAAIqE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,YAAL,CAAkBI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,WAAKrE,eAAL,CAAqB,KAAKkE,YAAL,CAAkBG,CAAlB,EAAqBf,QAArB,EAArB,IAAwD,KAAKS,IAAL,CAAUQ,WAAV,CAAsB,KAAKL,YAAL,CAAkBG,CAAlB,EAAqBf,QAArB,EAAtB,CAAxD;AACH;AACJ,GAND;;AAOAzD,EAAAA,cAAc,CAAC8C,SAAf,CAAyBK,mBAAzB,GAA+C,YAAY;AACvD,QAAIwB,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;;AACA,SAAK,IAAIL,CAAC,GAAGG,KAAR,EAAeG,CAAC,GAAGH,KAAK,GAAG,CAAhC,EAAmCH,CAAC,GAAG,KAAK7D,UAAL,CAAgB8D,MAApB,IAA8BK,CAAC,IAAI,CAAtE,EAAyEN,CAAC,IAAIM,CAAC,EAA/E,EAAmF;AAC/E,UAAIN,CAAC,GAAG,KAAK7D,UAAL,CAAgB8D,MAApB,IAA8B,KAAK7D,eAAL,CAAqBmE,OAArB,CAA6B,KAAKpE,UAAL,CAAgB6D,CAAhB,CAA7B,MAAqD,CAAC,CAAxF,EAA2F;AACvF,aAAKQ,YAAL,CAAkB,KAAKrE,UAAL,CAAgB6D,CAAhB,CAAlB;AACA;AACH;;AACD,UAAIM,CAAC,IAAI,CAAL,IAAU,KAAKlE,eAAL,CAAqBmE,OAArB,CAA6B,KAAKpE,UAAL,CAAgBmE,CAAhB,CAA7B,MAAqD,CAAC,CAApE,EAAuE;AACnE,aAAKE,YAAL,CAAkB,KAAKrE,UAAL,CAAgBmE,CAAhB,CAAlB;AACA;AACH;AACJ;AACJ,GAZD;;AAaA9E,EAAAA,cAAc,CAAC8C,SAAf,CAAyBmB,eAAzB,GAA2C,YAAY;AACnD,SAAKlC,KAAL,GAAa,KAAK9B,MAAL,CAAY8B,KAAzB;AACA,SAAKlB,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,IAAjH;AACA,SAAK+D,WAAL,GAHmD,CAInD;AACA;AACH,GAND;;AAOAjF,EAAAA,cAAc,CAAC8C,SAAf,CAAyBkC,YAAzB,GAAwC,UAAUE,SAAV,EAAqB;AACzD,QAAIP,KAAK,GAAG,CAAC,CAAb;AACA,QAAIQ,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7D,UAAL,CAAgB8D,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAI,KAAK7D,UAAL,CAAgB6D,CAAhB,MAAuBU,SAA3B,EAAsC;AAClCC,QAAAA,GAAG,GAAGX,CAAC,GAAG,CAAV;;AACA,YAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdA,UAAAA,KAAK,GAAGH,CAAR;AACH;AACJ;AACJ;;AACD,QAAIG,KAAK,GAAG,CAAZ,EAAe;AACXA,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,SAAK1E,MAAL,CAAY2E,YAAZ,CAAyBQ,iBAAzB,CAA2CT,KAA3C,EAAkDQ,GAAlD;AACH,GAfD;;AAgBAnF,EAAAA,cAAc,CAAC8C,SAAf,CAAyBO,kBAAzB,GAA8C,UAAUgC,IAAV,EAAgB;AAC1D,QAAIA,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAK3D,WAAL,GAAmB,IAAnB;AACA;AACH;;AACD,QAAK,CAACyD,IAAI,CAACC,CAAL,CAAOE,MAAR,IAAkB,CAACH,IAAI,CAACC,CAAL,CAAOG,OAA3B,KAAwCJ,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe/F,SAAf,IAA4B6F,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe9F,UAA3C,IAAyD4F,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe1F,QAAxE,IAAoFwF,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe3F,GAAnG,IAA0GyF,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkB7F,QAA5H,IACxCwF,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAezF,GADyB,IAClBuF,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAexF,IADrC,CAAJ,EACgD;AAC5C,UAAI4E,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,UAAIM,GAAG,GAAG,KAAKlF,MAAL,CAAY2E,YAAZ,CAAyBe,YAAnC;AACA,UAAIC,QAAQ,GAAG,KAAK3F,MAAL,CAAY2E,YAAZ,CAAyB7C,KAAzB,CAA+B0C,MAA9C;;AACA,UAAKE,KAAK,IAAI,CAAT,IAAcQ,GAAG,IAAIS,QAAtB,KAAoCP,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe3F,GAAf,IAAsByF,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkB7F,QAA5E,CAAJ,EAA2F;AACvF,YAAIgG,KAAK,GAAGR,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkB7F,QAAlB,GAA6BsF,GAA7B,GAAmC,CAA/C;AACA,aAAKlF,MAAL,CAAY2E,YAAZ,CAAyBC,cAAzB,GAA0C,KAAK5E,MAAL,CAAY2E,YAAZ,CAAyBe,YAAzB,GAAwCE,KAAlF;AACH;;AACD,UAAIR,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAezF,GAAf,IAAsBuF,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAexF,IAAzC,EAA+C;AAC3C,YAAI+F,KAAK,GAAGT,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAezF,GAAf,GAAqB8F,QAArB,GAAgC,CAA5C;AACA,aAAK3F,MAAL,CAAY2E,YAAZ,CAAyBC,cAAzB,GAA0C,KAAK5E,MAAL,CAAY2E,YAAZ,CAAyBe,YAAzB,GAAwCG,KAAlF;AACH;;AACD,WAAKC,iBAAL,CAAuBV,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe/F,SAAf,IAA4B6F,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkB7F,QAA9C,IAA0DwF,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAezF,GAAzE,GAA+E,IAA/E,GAAsF,KAA7G;AACH;;AACD,QAAK,CAACuF,IAAI,CAACC,CAAL,CAAOE,MAAR,IAAkB,CAACH,IAAI,CAACC,CAAL,CAAOG,OAA3B,KAAwCJ,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe7F,OAAf,IAA0B2F,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe5F,SAAjF,CAAJ,EAAiG;AAC7F,UAAIgF,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,WAAKmB,cAAL,CAAoBX,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe5F,SAAf,GAA2B,IAA3B,GAAkC,KAAtD;AACA,UAAIgE,UAAU,GAAG,KAAK9B,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAjB;AACA,WAAKvC,YAAL,GAAoB,IAApB;AACA,WAAKX,UAAL,GAAkB,KAAKkB,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAlB;AACA,WAAKvC,YAAL,GAAoB,KAApB;AACA,WAAKwC,kBAAL,GAA0B,KAAKnD,UAA/B;AACA,WAAKoD,aAAL,GAAqBJ,UAArB;AACA,WAAK1D,MAAL,CAAY2E,YAAZ,CAAyB7C,KAAzB,GAAiC4B,UAAjC;AACA,WAAK1D,MAAL,CAAY2E,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,WAAKxB,mBAAL;AACH;AACJ,GAjCD;;AAkCAnD,EAAAA,cAAc,CAAC8C,SAAf,CAAyBmD,eAAzB,GAA2C,YAAY;AACnD,QAAItB,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,QAAIlB,UAAU,GAAG,KAAK1D,MAAL,CAAY2E,YAAZ,CAAyB7C,KAA1C;AACA,QAAImE,WAAW,GAAG,KAAKnC,aAAL,CAAmBoC,SAAnB,CAA6B,CAA7B,EAAgCxB,KAAK,GAAG,KAAKZ,aAAL,CAAmBU,MAA3B,GAAoCd,UAAU,CAACc,MAA/E,CAAlB;AACA,QAAI2B,MAAM,GAAGzC,UAAU,CAACwC,SAAX,CAAqB,CAArB,EAAwBxB,KAAxB,CAAb;AACA,QAAI0B,YAAY,GAAG,KAAKtE,KAAxB;AACA,QAAIuE,OAAO,GAAG,IAAItE,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAAd;;AACA,QAAI0D,WAAW,CAACnB,OAAZ,CAAoBqB,MAApB,MAAgC,CAAhC,KAAsCA,MAAM,CAAC3B,MAAP,KAAkB,CAAlB,IAAuB,KAAKX,kBAAL,CAAwBsC,MAAM,CAAC3B,MAAP,GAAgB,CAAxC,MAA+C,KAAKX,kBAAL,CAAwBsC,MAAM,CAAC3B,MAA/B,CAA5G,CAAJ,EAAyJ;AACrJ,WAAK,IAAID,CAAC,GAAG4B,MAAM,CAAC3B,MAApB,EAA4BD,CAAC,GAAG0B,WAAW,CAACzB,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACrD,YAAI,KAAKV,kBAAL,CAAwBU,CAAxB,MAA+B,EAA/B,IAAqC,KAAK5D,eAAL,CAAqBmE,OAArB,CAA6B,KAAKjB,kBAAL,CAAwBU,CAAxB,CAA7B,KAA4D,CAArG,EAAwG;AACpG,eAAK9C,UAAL,GAAkB,KAAK6E,cAAL,CAAoB,KAAKzC,kBAAL,CAAwBU,CAAxB,CAApB,EAAgD,KAAhD,CAAlB;AACH;AACJ;;AACD,UAAI,KAAK9C,UAAT,EAAqB;AACjB;AACH;AACJ;;AACD,YAAQ,KAAKoC,kBAAL,CAAwBa,KAAK,GAAG,CAAhC,CAAR;AACI,WAAK,GAAL;AACI,YAAI6B,IAAI,GAAG,CAAC,KAAK3F,SAAL,IAAkBwF,YAAY,CAAC7D,OAAb,GAAuBiB,QAAvB,GAAkCgB,MAAlC,GAA2C,CAA7D,GAAiE4B,YAAY,CAAC7D,OAAb,KAAyB,EAA1F,GAA+F,CAAhG,IAAqGiE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxH;;AACA,YAAI+B,KAAK,CAACF,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,aAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBgC,IAAI,GAAGF,OAAvB,EAAgC9B,CAAC,EAAjC,EAAqC;AACjCgC,UAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAAC/C,QAAL,GAAgBkD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAIH,IAAI,IAAI,CAAZ,EAAe;AACXH,UAAAA,YAAY,CAACO,OAAb,CAAqBJ,IAArB;AACA,eAAKhF,UAAL,GAAkBgF,IAAI,CAAC/C,QAAL,GAAgBgB,MAAhB,KAA2B,CAA7C;AACA,eAAKpC,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;;AACA,cAAI6D,YAAY,CAAC9D,QAAb,OAA4B,KAAKR,KAAL,CAAWQ,QAAX,EAAhC,EAAuD;AACnD;AACH;;AACD,eAAK1B,SAAL,GAAiB,IAAjB;AACH,SARD,MASK;AACD,eAAKA,SAAL,GAAiB,KAAjB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,YAAIR,KAAK,GAAG,KAAK,CAAjB;;AACA,YAAIgG,YAAY,CAAC9D,QAAb,GAAwBkB,QAAxB,GAAmCgB,MAAnC,GAA4C,CAAhD,EAAmD;AAC/CpE,UAAAA,KAAK,GAAG,CAAC,KAAKS,WAAL,GAAmB,CAACuF,YAAY,CAAC9D,QAAb,KAA0B,CAA3B,IAAgC,EAAnD,GAAwD,CAAzD,IAA8DkE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA9E;AACH,SAFD,MAGK;AACDtE,UAAAA,KAAK,GAAGoG,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAhB;AACH;;AACD,YAAI,CAAC+B,KAAK,CAACrG,KAAD,CAAV,EAAmB;AACf,iBAAOA,KAAK,GAAG,EAAf,EAAmB;AACfA,YAAAA,KAAK,GAAGoG,QAAQ,CAACpG,KAAK,CAACoD,QAAN,GAAiBkD,KAAjB,CAAuB,CAAvB,CAAD,EAA4B,EAA5B,CAAhB;AACH;;AACD,cAAItG,KAAK,IAAI,CAAb,EAAgB;AACZgG,YAAAA,YAAY,CAACpE,QAAb,CAAsB5B,KAAK,GAAG,CAA9B;AACA,iBAAKmB,UAAL,GAAkBnB,KAAK,CAACoD,QAAN,GAAiBgB,MAAjB,KAA4B,CAA9C;;AACA,gBAAI4B,YAAY,CAAC9D,QAAb,OAA4BlC,KAAK,GAAG,CAAxC,EAA2C;AACvCgG,cAAAA,YAAY,CAACO,OAAb,CAAqB,CAArB;AACAP,cAAAA,YAAY,CAACpE,QAAb,CAAsB5B,KAAK,GAAG,CAA9B;AACH;;AACD,gBAAI,KAAKQ,SAAT,EAAoB;AAChB,kBAAIgG,eAAe,GAAG,IAAI7E,IAAJ,CAAS,KAAKK,YAAL,CAAkBC,WAAlB,EAAT,EAA0C,KAAKD,YAAL,CAAkBE,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,kBAAIsE,cAAc,GAAG,IAAI9E,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,kBAAI,KAAKH,YAAL,CAAkBG,OAAlB,MAA+BqE,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFR,gBAAAA,YAAY,CAACO,OAAb,CAAqBE,cAArB;AACH;AACJ;;AACD,iBAAKzE,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA,iBAAK1B,WAAL,GAAmB,IAAnB;AACH,WAhBD,MAiBK;AACDuF,YAAAA,YAAY,CAACpE,QAAb,CAAsB,CAAtB;AACA,iBAAKnB,WAAL,GAAmB,KAAnB;AACH;AACJ,SAzBD,MA0BK;AAAE;AACH,cAAIiG,WAAW,GAAI,KAAKC,gBAAL,CAAsB,0BAAtB,CAAnB;AACA,cAAIC,UAAU,GAAG3C,MAAM,CAACC,IAAP,CAAYwC,WAAZ,CAAjB;AACA,eAAK3F,cAAL,IAAuBgF,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkBuC,WAAlB,EAAvB;;AACA,iBAAO,KAAK9F,cAAL,CAAoBqD,MAApB,GAA6B,CAApC,EAAuC;AACnC,gBAAID,CAAC,GAAG,CAAR;;AACA,iBAAK,IAAI2C,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGH,UAAhC,EAA4CE,EAAE,GAAGC,YAAY,CAAC3C,MAA9D,EAAsE0C,EAAE,EAAxE,EAA4E;AACxE,kBAAIE,MAAM,GAAGD,YAAY,CAACD,EAAD,CAAzB;;AACA,kBAAIJ,WAAW,CAACvC,CAAD,CAAX,CAAe0C,WAAf,GAA6BnC,OAA7B,CAAqC,KAAK3D,cAA1C,MAA8D,CAAlE,EAAqE;AACjEiF,gBAAAA,YAAY,CAACpE,QAAb,CAAsBuC,CAAC,GAAG,CAA1B;AACA,qBAAK1D,WAAL,GAAmB,IAAnB;AACA,qBAAKiB,KAAL,GAAasE,YAAb;AACA;AACH;;AACD7B,cAAAA,CAAC;AACJ;;AACD,iBAAKpD,cAAL,GAAsB,KAAKA,cAAL,CAAoB+E,SAApB,CAA8B,CAA9B,EAAiC,KAAK/E,cAAL,CAAoBqD,MAArD,CAAtB;AACH;AACJ;;AACD;;AACJ,WAAK,GAAL;AACI,YAAInE,IAAI,GAAG,CAAC,KAAKS,UAAL,IAAoBsF,YAAY,CAAC/D,WAAb,GAA2BmB,QAA3B,GAAsCgB,MAAtC,GAA+C,CAA/C,IAAoD,CAAC,KAAK9C,WAA9E,GAA6F0E,YAAY,CAAC/D,WAAb,KAA6B,EAA1H,GAA+H,CAAhI,IAAqImE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxJ;AACA,aAAKhD,WAAL,GAAmB,KAAnB;;AACA,YAAI+E,KAAK,CAACpG,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,eAAOA,IAAI,GAAG,IAAd,EAAoB;AAChBA,UAAAA,IAAI,GAAGmG,QAAQ,CAACnG,IAAI,CAACmD,QAAL,GAAgBkD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAIrG,IAAI,GAAG,CAAX,EAAc;AACV,eAAKS,UAAL,GAAkB,KAAlB;AACH,SAFD,MAGK;AACDsF,UAAAA,YAAY,CAACiB,WAAb,CAAyBhH,IAAzB;;AACA,cAAIA,IAAI,CAACmD,QAAL,GAAgBgB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,iBAAKjD,UAAL,GAAkB,IAAlB;AACH;;AACD,eAAKa,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA,eAAKzB,UAAL,GAAkB,IAAlB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKR,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmB,CAACqF,YAAY,CAAC5D,QAAb,KAA0B,EAA1B,IAAgC,EAAjC,EAAqCgB,QAArC,GAAgDgB,MAAhD,GAAyD,CAA5E,GAAgF,CAAC4B,YAAY,CAAC5D,QAAb,KAA0B,EAA1B,IAAgC,EAAjC,IAAuC,EAAvH,GAA4H,CAA7H,IAAkIgE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAtJ;;AACA,YAAI+B,KAAK,CAAC,KAAKnG,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,eAAO,KAAKA,IAAL,GAAY,EAAnB,EAAuB;AACnB,eAAKA,IAAL,GAAYkG,QAAQ,CAAC,KAAKlG,IAAL,CAAUkD,QAAV,GAAqBkD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDN,QAAAA,YAAY,CAACnE,QAAb,CAAsBqF,IAAI,CAACC,KAAL,CAAWnB,YAAY,CAAC5D,QAAb,KAA0B,EAArC,IAA2C,EAA3C,GAAiD,KAAKlC,IAAL,GAAY,EAAnF;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAUkD,QAAV,GAAqBgB,MAArB,KAAgC,CAAlD;AACA,aAAKzD,UAAL,GAAkB,IAAlB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKT,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmBqF,YAAY,CAAC5D,QAAb,GAAwBgB,QAAxB,GAAmCgB,MAAnC,GAA4C,CAA/D,GAAmE4B,YAAY,CAAC5D,QAAb,KAA0B,EAA7F,GAAkG,CAAnG,IAAwGgE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA5H;;AACA,YAAI+B,KAAK,CAAC,KAAKnG,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,aAAK,IAAIiE,CAAC,GAAG,CAAb,EAAgB,KAAKjE,IAAL,GAAY,EAA5B,EAAgCiE,CAAC,EAAjC,EAAqC;AACjC,eAAKjE,IAAL,GAAYkG,QAAQ,CAAC,KAAKlG,IAAL,CAAUkD,QAAV,GAAqBkD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDN,QAAAA,YAAY,CAACnE,QAAb,CAAsB,KAAK3B,IAA3B;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAUkD,QAAV,GAAqBgB,MAArB,KAAgC,CAAlD;AACA,aAAKzD,UAAL,GAAkB,IAAlB;AACA;;AACJ,WAAK,GAAL;AACI,YAAIyG,OAAO,GAAG,CAAC,KAAKxG,YAAL,IAAqBoF,YAAY,CAAC3D,UAAb,GAA0Be,QAA1B,GAAqCgB,MAArC,GAA8C,CAAnE,GAAuE4B,YAAY,CAAC3D,UAAb,KAA4B,EAAnG,GAAwG,CAAzG,IAA8G+D,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAApI;;AACA,YAAI+B,KAAK,CAACe,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBiD,OAAO,GAAG,EAA1B,EAA8BjD,CAAC,EAA/B,EAAmC;AAC/BiD,UAAAA,OAAO,GAAGhB,QAAQ,CAACgB,OAAO,CAAChE,QAAR,GAAmBkD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDN,QAAAA,YAAY,CAAClE,UAAb,CAAwBsF,OAAxB;AACA,aAAKjG,UAAL,GAAkBiG,OAAO,CAAChE,QAAR,GAAmBgB,MAAnB,KAA8B,CAAhD;AACA,aAAKxD,YAAL,GAAoB,IAApB;AACA;;AACJ,WAAK,GAAL;AACI,YAAIyG,OAAO,GAAG,CAAC,KAAKxG,aAAL,IAAsBmF,YAAY,CAAC1D,UAAb,GAA0Bc,QAA1B,GAAqCgB,MAArC,GAA8C,CAApE,GAAwE4B,YAAY,CAAC1D,UAAb,KAA4B,EAApG,GAAyG,CAA1G,IAA+G8D,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAArI;;AACA,YAAI+B,KAAK,CAACgB,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBkD,OAAO,GAAG,EAA1B,EAA8BlD,CAAC,EAA/B,EAAmC;AAC/BkD,UAAAA,OAAO,GAAGjB,QAAQ,CAACiB,OAAO,CAACjE,QAAR,GAAmBkD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDN,QAAAA,YAAY,CAACjE,UAAb,CAAwBsF,OAAxB;AACA,aAAKlG,UAAL,GAAkBkG,OAAO,CAACjE,QAAR,GAAmBgB,MAAnB,KAA8B,CAAhD;AACA,aAAKvD,aAAL,GAAqB,IAArB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKG,eAAL,IAAwB+E,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkBuC,WAAlB,EAAxB,CADJ,CAEI;;AACA,YAAIS,YAAY,GAAI,KAAKX,gBAAL,CAAsB,wBAAtB,CAApB;AACA,YAAIY,UAAU,GAAGtD,MAAM,CAACC,IAAP,CAAYoD,YAAZ,CAAjB,CAJJ,CAKI;;AACA,aAAK,IAAInD,CAAC,GAAG,CAAb,EAAgB,KAAKnD,eAAL,CAAqBoD,MAArB,GAA8B,CAA9C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,cAAKmD,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4BV,WAA5B,GAA0CnC,OAA1C,CAAkD,KAAK1D,eAAvD,MAA4E,CAA5E,IAAiFgF,YAAY,CAAC5D,QAAb,MAA2B,EAA7G,IAAqHkF,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4BV,WAA5B,GAA0CnC,OAA1C,CAAkD,KAAK1D,eAAvD,MAA4E,CAA5E,IAAiFgF,YAAY,CAAC5D,QAAb,KAA0B,EAApO,EAAyO;AACrO4D,YAAAA,YAAY,CAACnE,QAAb,CAAsB,CAACmE,YAAY,CAAC5D,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA,iBAAKV,KAAL,GAAasE,YAAb;AACH;;AACD,eAAKhF,eAAL,GAAuB,KAAKA,eAAL,CAAqB8E,SAArB,CAA+B,CAA/B,EAAkC,KAAK9E,eAAL,CAAqBoD,MAAvD,CAAvB,CALkD,CAMlD;AACH;;AACD;;AACJ;AACI;AAjKR;;AAmKA,SAAK1C,KAAL,GAAasE,YAAb;AACH,GArLD;;AAsLArG,EAAAA,cAAc,CAAC8C,SAAf,CAAyBe,WAAzB,GAAuC,YAAY;AAC/C,QAAIgE,KAAK,GAAG,IAAZ;;AACA,aAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AACtC,UAAIC,QAAJ;AACA,UAAIC,MAAJ;AACA,UAAIC,eAAe,GAAGL,KAAK,CAACb,gBAAN,CAAuB,+BAAvB,CAAtB;AACA,UAAImB,iBAAiB,GAAG7D,MAAM,CAACC,IAAP,CAAY2D,eAAZ,CAAxB;AACA,UAAIE,QAAQ,GAAIP,KAAK,CAACb,gBAAN,CAAuB,wBAAvB,CAAhB;AACA,UAAIqB,UAAU,GAAG/D,MAAM,CAACC,IAAP,CAAY6D,QAAZ,CAAjB;AACA,UAAIE,UAAU,GAAIT,KAAK,CAACb,gBAAN,CAAuB,0BAAvB,CAAlB;AACA,UAAIuB,YAAY,GAAGjE,MAAM,CAACC,IAAP,CAAY+D,UAAZ,CAAnB;AACA,UAAIE,gBAAgB,GAAIX,KAAK,CAACb,gBAAN,CAAuB,iCAAvB,CAAxB;AACA,UAAIyB,SAAS,GAAIZ,KAAK,CAACb,gBAAN,CAAuB,0BAAvB,CAAjB;AACA,UAAIW,YAAY,GAAIE,KAAK,CAACb,gBAAN,CAAuB,wBAAvB,CAApB;AACA,UAAIY,UAAU,GAAGtD,MAAM,CAACC,IAAP,CAAYoD,YAAZ,CAAjB;AACA,UAAIe,YAAJ;AACA,UAAIC,WAAJ;;AACA,cAAQZ,UAAR;AACI,aAAK,KAAL;AACA,aAAK,MAAL;AACA,aAAK,GAAL;AACIE,UAAAA,MAAM,GAAGJ,KAAK,CAAChH,SAAN,GAAkBgH,KAAK,CAAC9F,KAAN,CAAYS,OAAZ,GAAsBiB,QAAtB,EAAlB,GAAqDoE,KAAK,CAAC1H,eAAN,CAAsB,KAAtB,EAA6BsD,QAA7B,EAA9D;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAChH,SAAN,GAAkBgH,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYS,OAAZ,EAAf,EAAsC,CAAtC,CAAlB,GAA6DqF,KAAK,CAAC1H,eAAN,CAAsB,KAAtB,EAA6BsD,QAA7B,EAAtE;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAChH,SAAN,IAAmBgH,KAAK,CAAC/G,WAAzB,IAAwC+G,KAAK,CAAC9G,UAA9C,GAA2DmH,eAAe,CAACC,iBAAiB,CAACN,KAAK,CAAC9F,KAAN,CAAY8G,MAAZ,EAAD,CAAlB,CAAf,CAAyDpF,QAAzD,EAA3D,GAAiIoE,KAAK,CAAC1H,eAAN,CAAsB,cAAtB,EAAsCsD,QAAtC,EAA1I;AACA;;AACJ,aAAK,MAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAChH,SAAN,IAAmBgH,KAAK,CAAC/G,WAAzB,IAAwC+G,KAAK,CAAC9G,UAA9C,GAA2DqH,QAAQ,CAACC,UAAU,CAACR,KAAK,CAAC9F,KAAN,CAAY8G,MAAZ,EAAD,CAAX,CAAR,CAA2CpF,QAA3C,EAA3D,GAAmHoE,KAAK,CAAC1H,eAAN,CAAsB,cAAtB,EAAsCsD,QAAtC,EAA5H;AACA;;AACJ,aAAK,OAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAChH,SAAN,IAAmBgH,KAAK,CAAC/G,WAAzB,IAAwC+G,KAAK,CAAC9G,UAA9C,GAA2DuH,UAAU,CAACC,YAAY,CAACV,KAAK,CAAC9F,KAAN,CAAY8G,MAAZ,EAAD,CAAb,CAAV,CAA+CpF,QAA/C,EAA3D,GAAuHoE,KAAK,CAAC1H,eAAN,CAAsB,cAAtB,EAAsCsD,QAAtC,EAAhI;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC/G,WAAN,GAAoB,CAAC+G,KAAK,CAAC9F,KAAN,CAAYQ,QAAZ,KAAyB,CAA1B,EAA6BkB,QAA7B,EAApB,GAA8DoE,KAAK,CAAC1H,eAAN,CAAsB,OAAtB,EAA+BsD,QAA/B,EAAvE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC/G,WAAN,GAAoB+G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYQ,QAAZ,KAAyB,CAAxC,EAA2C,CAA3C,CAApB,GAAoEsF,KAAK,CAAC1H,eAAN,CAAsB,OAAtB,EAA+BsD,QAA/B,EAA7E;AACA;;AACJ,aAAK,KAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC/G,WAAN,GAAoB0H,gBAAgB,CAACX,KAAK,CAAC9F,KAAN,CAAYQ,QAAZ,KAAyB,CAA1B,CAApC,GAAmEsF,KAAK,CAAC1H,eAAN,CAAsB,OAAtB,EAA+BsD,QAA/B,EAA5E;AACA;;AACJ,aAAK,MAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC/G,WAAN,GAAoB2H,SAAS,CAACZ,KAAK,CAAC9F,KAAN,CAAYQ,QAAZ,KAAyB,CAA1B,CAA7B,GAA4DsF,KAAK,CAAC1H,eAAN,CAAsB,OAAtB,EAA+BsD,QAA/B,EAArE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,UAAN,GAAmB8G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYO,WAAZ,KAA4B,GAA3C,EAAgD,CAAhD,CAAnB,GAAwEuF,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAAjF;;AACA,cAAIoE,KAAK,CAAC9G,UAAV,EAAsB;AAClB8G,YAAAA,KAAK,CAACrG,UAAN,GAAmBqG,KAAK,CAAClG,WAAN,GAAoB,CAACkG,KAAK,CAAC9F,KAAN,CAAYO,WAAZ,KAA4B,GAA7B,EAAkCmB,QAAlC,GAA6CgB,MAA7C,KAAwD,CAA/F;AACH;;AACD;;AACJ,aAAK,GAAL;AACA,aAAK,MAAL;AACIwD,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,UAAN,GAAmB8G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYO,WAAZ,EAAf,EAA0C,CAA1C,CAAnB,GAAkEuF,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAA3E;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,UAAN,GAAmB,CAAC6G,KAAK,CAAC9F,KAAN,CAAYU,QAAZ,KAAyB,EAAzB,IAA+B,EAAhC,EAAoCgB,QAApC,EAAnB,GAAoEoE,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAA7E;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,UAAN,GAAmB6G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYU,QAAZ,KAAyB,EAAzB,IAA+B,EAA9C,EAAkD,CAAlD,CAAnB,GAA0EoF,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAAnF;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,UAAN,GAAmB6G,KAAK,CAAC9F,KAAN,CAAYU,QAAZ,GAAuBgB,QAAvB,EAAnB,GAAuDoE,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAAhE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,UAAN,GAAmB6G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYU,QAAZ,EAAf,EAAuC,CAAvC,CAAnB,GAA+DoF,KAAK,CAAC1H,eAAN,CAAsB,MAAtB,EAA8BsD,QAA9B,EAAxE;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC5G,YAAN,GAAqB4G,KAAK,CAAC9F,KAAN,CAAYW,UAAZ,GAAyBe,QAAzB,EAArB,GAA2DoE,KAAK,CAAC1H,eAAN,CAAsB,QAAtB,EAAgCsD,QAAhC,EAApE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC5G,YAAN,GAAqB4G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYW,UAAZ,EAAf,EAAyC,CAAzC,CAArB,GAAmEmF,KAAK,CAAC1H,eAAN,CAAsB,QAAtB,EAAgCsD,QAAhC,EAA5E;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,aAAN,GAAsB2G,KAAK,CAAC9F,KAAN,CAAYY,UAAZ,GAAyBc,QAAzB,EAAtB,GAA4DoE,KAAK,CAAC1H,eAAN,CAAsB,QAAtB,EAAgCsD,QAAhC,EAArE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,aAAN,GAAsB2G,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAYY,UAAZ,EAAf,EAAyC,CAAzC,CAAtB,GAAoEkF,KAAK,CAAC1H,eAAN,CAAsB,QAAtB,EAAgCsD,QAAhC,EAA7E;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGV,IAAI,CAACC,KAAL,CAAWK,KAAK,CAAC9F,KAAN,CAAY+G,eAAZ,KAAgC,GAA3C,EAAgDrF,QAAhD,EAAT;AACA;;AACJ,aAAK,IAAL;AACIiF,UAAAA,YAAY,GAAGb,KAAK,CAAC9F,KAAN,CAAY+G,eAAZ,EAAf;;AACA,cAAIjB,KAAK,CAAC9F,KAAN,CAAY+G,eAAZ,KAAgC,EAApC,EAAwC;AACpCJ,YAAAA,YAAY,GAAGnB,IAAI,CAACC,KAAL,CAAWK,KAAK,CAAC9F,KAAN,CAAY+G,eAAZ,KAAgC,EAA3C,CAAf;AACH;;AACDb,UAAAA,MAAM,GAAGJ,KAAK,CAACe,QAAN,CAAeF,YAAf,EAA6B,CAA7B,CAAT;AACA;;AACJ,aAAK,KAAL;AACIT,UAAAA,MAAM,GAAGJ,KAAK,CAACe,QAAN,CAAef,KAAK,CAAC9F,KAAN,CAAY+G,eAAZ,EAAf,EAA8C,CAA9C,CAAT;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACIb,UAAAA,MAAM,GAAGJ,KAAK,CAAC9F,KAAN,CAAYU,QAAZ,KAAyB,EAAzB,GAA8BkF,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAA1C,GAA4DD,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAjF;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACA,aAAK,MAAL;AACIe,UAAAA,WAAW,GAAG;AACVI,YAAAA,MAAM,EAAEhB,UADE;AAEViB,YAAAA,IAAI,EAAE,UAFI;AAEQC,YAAAA,QAAQ,EAAE,KAFlB;AAEyBC,YAAAA,QAAQ,EAAErB,KAAK,CAAC5H,MAAN,CAAakJ;AAFhD,WAAd;AAIAlB,UAAAA,MAAM,GAAGJ,KAAK,CAAC5H,MAAN,CAAamJ,SAAb,CAAuBC,UAAvB,CAAkCxB,KAAK,CAAC9F,KAAxC,EAA+C4G,WAA/C,CAAT;AACA;AA5FR;;AA8FAV,MAAAA,MAAM,GAAGA,MAAM,KAAKqB,SAAX,GAAuBrB,MAAvB,GAAgCF,UAAU,CAACpB,KAAX,CAAiB,CAAjB,EAAoBoB,UAAU,CAACtD,MAAX,GAAoB,CAAxC,CAAzC;;AACA,UAAIoD,KAAK,CAACvG,YAAV,EAAwB;AACpB,YAAIiI,UAAU,GAAG,EAAjB;;AACA,aAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyD,MAAM,CAACxD,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC+E,UAAAA,UAAU,IAAIxB,UAAU,CAAC,CAAD,CAAxB;AACH;;AACD,eAAOwB,UAAP;AACH,OAND,MAOK;AACD,eAAOtB,MAAP;AACH;AACJ;;AACD,WAAOH,oBAAP;AACH,GA5HD;;AA6HA9H,EAAAA,cAAc,CAAC8C,SAAf,CAAyBM,gBAAzB,GAA4C,YAAY;AACpD,QAAIuB,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,QAAI2E,aAAa,GAAG,KAAK1F,kBAAL,CAAwBa,KAAK,GAAG,CAAhC,CAApB;AACA,QAAIhB,UAAJ;AACA,SAAKsC,eAAL;AACAtC,IAAAA,UAAU,GAAG,KAAK9B,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAb;AACA,SAAKvC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKkB,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAlB;AACA,SAAKvC,YAAL,GAAoB,KAApB;AACA,SAAKwC,kBAAL,GAA0B,KAAKnD,UAA/B;AACA,SAAKoD,aAAL,GAAqBJ,UAArB;AACA,SAAK1D,MAAL,CAAY2E,YAAZ,CAAyB7C,KAAzB,GAAiC4B,UAAjC;AACA,SAAK1D,MAAL,CAAY2E,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,SAAKxB,mBAAL;;AACA,QAAI,CAAC,KAAK3B,UAAL,IAAmB,KAAKE,UAAzB,KAAwC,CAAC,KAAKE,WAAlD,EAA+D;AAC3D,UAAI6H,UAAU,GAAG,KAAKjI,UAAL,GAAkB,KAAlB,GAA0B,IAA3C;AACA,WAAKA,UAAL,GAAkB,KAAKE,UAAL,GAAkB,KAApC;AACA,WAAKqE,iBAAL,CAAuB0D,UAAvB;AACH;;AACD,SAAK7H,WAAL,GAAmB,KAAnB,CAnBoD,CAoBpD;AACA;AACH,GAtBD;;AAuBA5B,EAAAA,cAAc,CAAC8C,SAAf,CAAyBiD,iBAAzB,GAA6C,UAAU0D,UAAV,EAAsB;AAC/D,QAAI9E,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,QAAIM,GAAG,GAAG,KAAKlF,MAAL,CAAY2E,YAAZ,CAAyBe,YAAnC;AACA,QAAI+D,WAAW,GAAGD,UAAU,GAAG9E,KAAK,GAAG,CAAX,GAAeQ,GAAG,GAAG,CAAjD;;AACA,WAAOuE,WAAW,GAAG,KAAK/I,UAAL,CAAgB8D,MAA9B,IAAwCiF,WAAW,IAAI,CAA9D,EAAiE;AAC7D,UAAI,KAAK9I,eAAL,CAAqBmE,OAArB,CAA6B,KAAKpE,UAAL,CAAgB+I,WAAhB,CAA7B,KAA8D,CAAlE,EAAqE;AACjE,aAAK1E,YAAL,CAAkB,KAAKrE,UAAL,CAAgB+I,WAAhB,CAAlB;AACA;AACH;;AACDA,MAAAA,WAAW,GAAGA,WAAW,IAAID,UAAU,GAAG,CAAC,CAAJ,GAAQ,CAAtB,CAAzB;AACH;AACJ,GAXD;;AAYAzJ,EAAAA,cAAc,CAAC8C,SAAf,CAAyB8F,QAAzB,GAAoC,UAAUe,GAAV,EAAeC,KAAf,EAAsB;AACtD,QAAIC,SAAS,GAAGF,GAAG,CAAClG,QAAJ,EAAhB;AACA,QAAIgB,MAAM,GAAGmF,KAAK,GAAGC,SAAS,CAACpF,MAA/B;AACA,QAAIwD,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIzD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7ByD,MAAAA,MAAM,IAAI,GAAV;AACH;;AACD,WAAOA,MAAM,GAAG4B,SAAhB;AACH,GARD;;AASA7J,EAAAA,cAAc,CAAC8C,SAAf,CAAyByD,cAAzB,GAA0C,UAAUwC,MAAV,EAAkBe,SAAlB,EAA6B;AACnE,YAAQf,MAAR;AACI,WAAK,GAAL;AACI,aAAKlI,SAAL,GAAiBiJ,SAAjB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKhJ,WAAL,GAAmBgJ,SAAnB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAK/H,KAAL,CAAWE,QAAX,CAAoB,CAApB;AACA,eAAKb,cAAL,GAAsB,EAAtB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKL,UAAL,GAAkB+I,SAAlB;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI,aAAK9I,UAAL,GAAkB8I,SAAlB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAKzI,eAAL,GAAuB,EAAvB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKJ,YAAL,GAAoB6I,SAApB;AACA;;AACJ,WAAK,GAAL;AACI,aAAK5I,aAAL,GAAqB4I,SAArB;AACA;;AACJ;AACI,eAAO,KAAP;AA5BR;;AA8BA,WAAO,IAAP;AACH,GAhCD;;AAiCA9J,EAAAA,cAAc,CAAC8C,SAAf,CAAyBkD,cAAzB,GAA0C,UAAU+D,WAAV,EAAuB;AAC7D,QAAIpF,KAAK,GAAG,KAAK1E,MAAL,CAAY2E,YAAZ,CAAyBC,cAArC;AACA,QAAImF,UAAU,GAAG,EAAjB;;AACA,QAAI,KAAKpJ,eAAL,CAAqBmE,OAArB,CAA6B,KAAKpE,UAAL,CAAgBgE,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7DqF,MAAAA,UAAU,GAAG,KAAKrJ,UAAL,CAAgBgE,KAAhB,CAAb;AACH,KAFD,MAGK;AACD;AACH;;AACD,QAAI0B,YAAY,GAAG,IAAIrE,IAAJ,CAAS,KAAKD,KAAL,CAAWO,WAAX,EAAT,EAAmC,KAAKP,KAAL,CAAWQ,QAAX,EAAnC,EAA0D,KAAKR,KAAL,CAAWS,OAAX,EAA1D,EAAgF,KAAKT,KAAL,CAAWU,QAAX,EAAhF,EAAuG,KAAKV,KAAL,CAAWW,UAAX,EAAvG,EAAgI,KAAKX,KAAL,CAAWY,UAAX,EAAhI,CAAnB;AACA,SAAKN,YAAL,GAAoB,IAAIL,IAAJ,CAAS,KAAKD,KAAL,CAAWO,WAAX,EAAT,EAAmC,KAAKP,KAAL,CAAWQ,QAAX,EAAnC,EAA0D,KAAKR,KAAL,CAAWS,OAAX,EAA1D,EAAgF,KAAKT,KAAL,CAAWU,QAAX,EAAhF,EAAuG,KAAKV,KAAL,CAAWW,UAAX,EAAvG,EAAgI,KAAKX,KAAL,CAAWY,UAAX,EAAhI,CAApB;AACA,QAAIsH,cAAc,GAAGF,WAAW,GAAG,CAAC,CAAJ,GAAQ,CAAxC;;AACA,YAAQC,UAAR;AACI,WAAK,GAAL;AACI3D,QAAAA,YAAY,CAACO,OAAb,CAAqBP,YAAY,CAAC7D,OAAb,KAAyByH,cAA9C;AACA;;AACJ,WAAK,GAAL;AACI,YAAIC,QAAQ,GAAG7D,YAAY,CAAC9D,QAAb,KAA0B0H,cAAzC;AACA5D,QAAAA,YAAY,CAACO,OAAb,CAAqB,CAArB;AACAP,QAAAA,YAAY,CAACpE,QAAb,CAAsBiI,QAAtB;;AACA,YAAI,KAAKrJ,SAAT,EAAoB;AAChB,cAAIgG,eAAe,GAAG,IAAI7E,IAAJ,CAAS,KAAKK,YAAL,CAAkBC,WAAlB,EAAT,EAA0C,KAAKD,YAAL,CAAkBE,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,cAAIsE,cAAc,GAAG,IAAI9E,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,cAAI,KAAKH,YAAL,CAAkBG,OAAlB,MAA+BqE,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFR,YAAAA,YAAY,CAACO,OAAb,CAAqBE,cAArB;AACH,WAFD,MAGK;AACDT,YAAAA,YAAY,CAACO,OAAb,CAAqB,KAAKvE,YAAL,CAAkBG,OAAlB,EAArB;AACH;AACJ,SATD,MAUK;AACD6D,UAAAA,YAAY,CAACO,OAAb,CAAqB,KAAKvE,YAAL,CAAkBG,OAAlB,EAArB;AACH;;AACD,aAAKH,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA;;AACJ,WAAK,GAAL;AACI6D,QAAAA,YAAY,CAACiB,WAAb,CAAyBjB,YAAY,CAAC/D,WAAb,KAA6B2H,cAAtD;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI5D,QAAAA,YAAY,CAACnE,QAAb,CAAsBmE,YAAY,CAAC5D,QAAb,KAA0BwH,cAAhD;AACA;;AACJ,WAAK,GAAL;AACI5D,QAAAA,YAAY,CAAClE,UAAb,CAAwBkE,YAAY,CAAC3D,UAAb,KAA4BuH,cAApD;AACA;;AACJ,WAAK,GAAL;AACI5D,QAAAA,YAAY,CAACjE,UAAb,CAAwBiE,YAAY,CAAC1D,UAAb,KAA4BsH,cAApD;AACA;;AACJ,WAAK,GAAL;AACI5D,QAAAA,YAAY,CAACnE,QAAb,CAAsB,CAACmE,YAAY,CAAC5D,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA;;AACJ;AACI;AAxCR;;AA0CA,SAAKV,KAAL,GAAasE,YAAY,CAAC/D,WAAb,KAA6B,CAA7B,GAAiC+D,YAAjC,GAAgD,KAAKtE,KAAlE;;AACA,QAAI,KAAKnB,eAAL,CAAqBmE,OAArB,CAA6B,KAAKpE,UAAL,CAAgBgE,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,WAAK4B,cAAL,CAAoB,KAAK5F,UAAL,CAAgBgE,KAAhB,CAApB,EAA4C,IAA5C;AACH;AACJ,GA1DD;;AA2DA3E,EAAAA,cAAc,CAAC8C,SAAf,CAAyBkE,gBAAzB,GAA4C,UAAU+B,MAAV,EAAkB;AAC1D,QAAI3E,MAAM,GAAG,KAAKnE,MAAL,CAAYmE,MAAzB;AACA,QAAI6D,MAAJ;;AACA,QAAI7D,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,OAAlC,EAA2C;AACvC6D,MAAAA,MAAM,GAAG5I,QAAQ,CAAC0J,MAAD,EAASzJ,oBAAoB,EAA7B,CAAjB;AACH,KAFD,MAGK;AACD2I,MAAAA,MAAM,GAAG5I,QAAQ,CAAC,UAAU,EAAV,GAAe+E,MAAf,IAAyB,gCAAgC2E,MAAzD,CAAD,EAAmExJ,QAAnE,CAAjB;AACH;;AACD,WAAO0I,MAAP;AACH,GAVD;;AAWAjI,EAAAA,cAAc,CAAC8C,SAAf,CAAyBhB,iBAAzB,GAA6C,YAAY;AACrD,QAAIqI,YAAY,GAAI,KAAKnD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAnB;;AACA,QAAI,KAAKxD,MAAL,CAAYkE,UAAZ,IAA0B,YAA9B,EAA4C;AACxCgG,MAAAA,YAAY,GAAI,KAAKnD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAf;;AACA,UAAI,KAAKxD,MAAL,CAAY8I,MAAZ,IAAsB,KAAK9I,MAAL,CAAYkK,YAAtC,EAAoD;AAChDA,QAAAA,YAAY,GAAG,KAAKlK,MAAL,CAAYkK,YAA3B;AACH;AACJ;;AACD,QAAI,KAAKlK,MAAL,CAAYkE,UAAZ,IAA0B,gBAA9B,EAAgD;AAC5CgG,MAAAA,YAAY,GAAI,KAAKnD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAf;;AACA,UAAI,KAAKxD,MAAL,CAAYmK,cAAhB,EAAgC;AAC5BD,QAAAA,YAAY,GAAG,KAAKlK,MAAL,CAAYmK,cAA3B;AACH;AACJ;;AACD,QAAI,KAAKnK,MAAL,CAAYkE,UAAZ,IAA0B,YAA9B,EAA4C;AACxCgG,MAAAA,YAAY,GAAG,KAAKlK,MAAL,CAAYoK,cAAZ,EAAf;AACH;;AACD,WAAOF,YAAP;AACH,GAlBD;;AAmBAnK,EAAAA,cAAc,CAAC8C,SAAf,CAAyBQ,YAAzB,GAAwC,YAAY;AAChD,SAAKzC,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;AACA,SAAK+D,WAAL;AACH,GAHD;;AAIAjF,EAAAA,cAAc,CAAC8C,SAAf,CAAyBmC,WAAzB,GAAuC,YAAY;AAC/C,SAAK7D,cAAL,GAAsB,KAAKC,eAAL,GAAuB,EAA7C;AACA,QAAIsC,UAAU,GAAG,KAAK9B,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAjB;AACA,SAAKvC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKkB,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKnC,WAA7B,EAA0C,KAAKoC,WAAL,EAA1C,CAAlB;AACA,SAAKvC,YAAL,GAAoB,KAApB;AACA,SAAKwC,kBAAL,GAA0B,KAAKnD,UAA/B;AACA,SAAKoD,aAAL,GAAqBJ,UAArB;AACA,SAAK1D,MAAL,CAAYqK,gBAAZ,CAA6B3G,UAA7B,EAR+C,CAS/C;AACH,GAVD;;AAWA3D,EAAAA,cAAc,CAAC8C,SAAf,CAAyByH,OAAzB,GAAmC,YAAY;AAC3C,SAAK3H,mBAAL;AACH,GAFD;;AAGA,SAAO5C,cAAP;AACH,CAtpBmC,EAApC;;AAupBA,SAASA,cAAT","sourcesContent":["import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */ (function () {\n    function MaskedDateTime(parent) {\n        this.mask = '';\n        this.defaultConstant = {\n            day: 'day',\n            month: 'month',\n            year: 'year',\n            hour: 'hour',\n            minute: 'minute',\n            second: 'second',\n            dayOfTheWeek: 'day of the week',\n        };\n        this.hiddenMask = '';\n        this.validCharacters = 'dMyhmHfasz';\n        this.isDayPart = false;\n        this.isMonthPart = false;\n        this.isYearPart = false;\n        this.isHourPart = false;\n        this.isMinutePart = false;\n        this.isSecondsPart = false;\n        this.isMilliSecondsPart = false;\n        this.monthCharacter = '';\n        this.periodCharacter = '';\n        this.isHiddenMask = false;\n        this.isComplete = false;\n        this.isNavigate = false;\n        this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n        this.isDeletion = false;\n        this.isShortYear = false;\n        this.isDeleteKey = false;\n        this.parent = parent;\n        this.dateformat = this.getCulturedFormat();\n        this.value = this.parent.value != null ? this.parent.value : new Date();\n        this.value.setMonth(0);\n        this.value.setHours(0);\n        this.value.setMinutes(0);\n        this.value.setSeconds(0);\n        this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    MaskedDateTime.prototype.getModuleName = function () {\n        return 'MaskedDateTime';\n    };\n    MaskedDateTime.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('createMask', this.createMask, this);\n        this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n        this.parent.on('inputHandler', this.maskInputHandler, this);\n        this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n        this.parent.on('clearHandler', this.clearHandler, this);\n    };\n    MaskedDateTime.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('createMask', this.createMask);\n        this.parent.off('setMaskSelection', this.validCharacterCheck);\n        this.parent.off('inputHandler', this.maskInputHandler);\n        this.parent.off('keyDownHandler', this.maskKeydownHandler);\n        this.parent.off('clearHandler', this.clearHandler);\n    };\n    MaskedDateTime.prototype.createMask = function (dateformat) {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.dateformat = this.getCulturedFormat();\n        if (this.parent.maskPlaceholder.day)\n            this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n        if (this.parent.maskPlaceholder.month)\n            this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n        if (this.parent.maskPlaceholder.year)\n            this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n        if (this.parent.maskPlaceholder.hour)\n            this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n        if (this.parent.maskPlaceholder.minute)\n            this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n        if (this.parent.maskPlaceholder.second)\n            this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n        if (this.parent.maskPlaceholder.dayOfTheWeek)\n            this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n        this.getCUltureMaskFormat();\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.mask = this.previousValue = inputValue;\n        this.parent.maskedDateValue = this.mask;\n        if (this.parent.value) {\n            this.setDynamicValue();\n        }\n    };\n    MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n        this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n        this.objectString = Object.keys(this.defaultConstant);\n        for (var i = 0; i < this.objectString.length; i++) {\n            this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n        }\n    };\n    MaskedDateTime.prototype.validCharacterCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n            if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n                this.setSelection(this.hiddenMask[i]);\n                return;\n            }\n            if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n                this.setSelection(this.hiddenMask[j]);\n                return;\n            }\n        }\n    };\n    MaskedDateTime.prototype.setDynamicValue = function () {\n        this.value = this.parent.value;\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n        this.updateValue();\n        // this.parent.inputElement.selectionStart = start;\n        // this.validCharacterCheck();\n    };\n    MaskedDateTime.prototype.setSelection = function (validChar) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (this.hiddenMask[i] === validChar) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        this.parent.inputElement.setSelectionRange(start, end);\n    };\n    MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n        if (args.e.key === 'Delete') {\n            this.isDeleteKey = true;\n            return;\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB ||\n            args.e.key === END || args.e.key === HOME)) {\n            var start = this.parent.inputElement.selectionStart;\n            var end = this.parent.inputElement.selectionEnd;\n            var length_1 = this.parent.inputElement.value.length;\n            if ((start == 0 && end == length_1) && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n                var index = args.e.action === SHIFTTAB ? end : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n            }\n            if (args.e.key === END || args.e.key === HOME) {\n                var range = args.e.key === END ? length_1 : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n            }\n            this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n            var start = this.parent.inputElement.selectionStart;\n            this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n            var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = true;\n            this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = false;\n            this.previousHiddenMask = this.hiddenMask;\n            this.previousValue = inputValue;\n            this.parent.inputElement.value = inputValue;\n            this.parent.inputElement.selectionStart = start;\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.differenceCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var inputValue = this.parent.inputElement.value;\n        var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n        var newVal = inputValue.substring(0, start);\n        var newDateValue = this.value;\n        var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n        if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n            for (var i = newVal.length; i < previousVal.length; i++) {\n                if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n                    this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n                }\n            }\n            if (this.isDeletion) {\n                return;\n            }\n        }\n        switch (this.previousHiddenMask[start - 1]) {\n            case 'd':\n                var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(date)) {\n                    return;\n                }\n                for (var i = 0; date > maxDate; i++) {\n                    date = parseInt(date.toString().slice(1), 10);\n                }\n                if (date >= 1) {\n                    newDateValue.setDate(date);\n                    this.isNavigate = date.toString().length === 2;\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    if (newDateValue.getMonth() !== this.value.getMonth()) {\n                        return;\n                    }\n                    this.isDayPart = true;\n                }\n                else {\n                    this.isDayPart = false;\n                }\n                break;\n            case 'M':\n                var month = void 0;\n                if (newDateValue.getMonth().toString().length < 2) {\n                    month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                }\n                else {\n                    month = parseInt(newVal[start - 1], 10);\n                }\n                if (!isNaN(month)) {\n                    while (month > 12) {\n                        month = parseInt(month.toString().slice(1), 10);\n                    }\n                    if (month >= 1) {\n                        newDateValue.setMonth(month - 1);\n                        this.isNavigate = month.toString().length === 2;\n                        if (newDateValue.getMonth() !== month - 1) {\n                            newDateValue.setDate(1);\n                            newDateValue.setMonth(month - 1);\n                        }\n                        if (this.isDayPart) {\n                            var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                            var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                            if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                                newDateValue.setDate(currentMaxDate);\n                            }\n                        }\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        this.isMonthPart = true;\n                    }\n                    else {\n                        newDateValue.setMonth(0);\n                        this.isMonthPart = false;\n                    }\n                }\n                else { // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n                    var monthString = (this.getCulturedValue('months[stand-alone].wide'));\n                    var monthValue = Object.keys(monthString);\n                    this.monthCharacter += newVal[start - 1].toLowerCase();\n                    while (this.monthCharacter.length > 0) {\n                        var i = 1;\n                        for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                            var months = monthValue_1[_i];\n                            if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                                newDateValue.setMonth(i - 1);\n                                this.isMonthPart = true;\n                                this.value = newDateValue;\n                                return;\n                            }\n                            i++;\n                        }\n                        this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n                    }\n                }\n                break;\n            case 'y':\n                var year = (this.isYearPart && (newDateValue.getFullYear().toString().length < 4 && !this.isShortYear) ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.isShortYear = false;\n                if (isNaN(year)) {\n                    return;\n                }\n                while (year > 9999) {\n                    year = parseInt(year.toString().slice(1), 10);\n                }\n                if (year < 1) {\n                    this.isYearPart = false;\n                }\n                else {\n                    newDateValue.setFullYear(year);\n                    if (year.toString().length === 4) {\n                        this.isNavigate = true;\n                    }\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    this.isYearPart = true;\n                }\n                break;\n            case 'h':\n                this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                while (this.hour > 12) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + (this.hour % 12));\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                break;\n            case 'H':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                for (var i = 0; this.hour > 23; i++) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(this.hour);\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                break;\n            case 'm':\n                var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(minutes)) {\n                    return;\n                }\n                for (var i = 0; minutes > 59; i++) {\n                    minutes = parseInt(minutes.toString().slice(1), 10);\n                }\n                newDateValue.setMinutes(minutes);\n                this.isNavigate = minutes.toString().length === 2;\n                this.isMinutePart = true;\n                break;\n            case 's':\n                var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(seconds)) {\n                    return;\n                }\n                for (var i = 0; seconds > 59; i++) {\n                    seconds = parseInt(seconds.toString().slice(1), 10);\n                }\n                newDateValue.setSeconds(seconds);\n                this.isNavigate = seconds.toString().length === 2;\n                this.isSecondsPart = true;\n                break;\n            case 'a':\n                this.periodCharacter += newVal[start - 1].toLowerCase();\n                // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n                var periodString = (this.getCulturedValue('dayPeriods.format.wide'));\n                var periodkeys = Object.keys(periodString);\n                //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n                for (var i = 0; this.periodCharacter.length > 0; i++) {\n                    if ((periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12) || (periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12)) {\n                        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                        this.value = newDateValue;\n                    }\n                    this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n                    // Object.values()\n                }\n                break;\n            default:\n                break;\n        }\n        this.value = newDateValue;\n    };\n    MaskedDateTime.prototype.formatCheck = function () {\n        var proxy = this;\n        function formatValueSpecifier(formattext) {\n            var isSymbol;\n            var result;\n            var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n            var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n            var daysWide = (proxy.getCulturedValue('days[stand-alone].wide'));\n            var dayKeyWide = Object.keys(daysWide);\n            var daysNarrow = (proxy.getCulturedValue('days[stand-alone].narrow'));\n            var dayKeyNarrow = Object.keys(daysNarrow);\n            var monthAbbreviated = (proxy.getCulturedValue('months[stand-alone].abbreviated'));\n            var monthWide = (proxy.getCulturedValue('months[stand-alone].wide'));\n            var periodString = (proxy.getCulturedValue('dayPeriods.format.wide'));\n            var periodkeys = Object.keys(periodString);\n            var milliseconds;\n            var dateOptions;\n            switch (formattext) {\n                case 'ddd':\n                case 'dddd':\n                case 'd':\n                    result = proxy.isDayPart ? proxy.value.getDate().toString() : proxy.defaultConstant['day'].toString();\n                    break;\n                case 'dd':\n                    result = proxy.isDayPart ? proxy.roundOff(proxy.value.getDate(), 2) : proxy.defaultConstant['day'].toString();\n                    break;\n                case 'E':\n                case 'EE':\n                case 'EEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'M':\n                    result = proxy.isMonthPart ? (proxy.value.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MM':\n                    result = proxy.isMonthPart ? proxy.roundOff(proxy.value.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMM':\n                    result = proxy.isMonthPart ? monthAbbreviated[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMMM':\n                    result = proxy.isMonthPart ? monthWide[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'yy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n                    if (proxy.isYearPart) {\n                        proxy.isNavigate = proxy.isShortYear = (proxy.value.getFullYear() % 100).toString().length === 2;\n                    }\n                    break;\n                case 'y':\n                case 'yyyy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n                    break;\n                case 'h':\n                    result = proxy.isHourPart ? (proxy.value.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'hh':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'H':\n                    result = proxy.isHourPart ? proxy.value.getHours().toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'HH':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'm':\n                    result = proxy.isMinutePart ? proxy.value.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n                    break;\n                case 'mm':\n                    result = proxy.isMinutePart ? proxy.roundOff(proxy.value.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n                    break;\n                case 's':\n                    result = proxy.isSecondsPart ? proxy.value.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n                    break;\n                case 'ss':\n                    result = proxy.isSecondsPart ? proxy.roundOff(proxy.value.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n                    break;\n                case 'f':\n                    result = Math.floor(proxy.value.getMilliseconds() / 100).toString();\n                    break;\n                case 'ff':\n                    milliseconds = proxy.value.getMilliseconds();\n                    if (proxy.value.getMilliseconds() > 99) {\n                        milliseconds = Math.floor(proxy.value.getMilliseconds() / 10);\n                    }\n                    result = proxy.roundOff(milliseconds, 2);\n                    break;\n                case 'fff':\n                    result = proxy.roundOff(proxy.value.getMilliseconds(), 3);\n                    break;\n                case 'a':\n                case 'aa':\n                    result = proxy.value.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n                    break;\n                case 'z':\n                case 'zz':\n                case 'zzz':\n                case 'zzzz':\n                    dateOptions = {\n                        format: formattext,\n                        type: 'dateTime', skeleton: 'yMd', calendar: proxy.parent.calendarMode\n                    };\n                    result = proxy.parent.globalize.formatDate(proxy.value, dateOptions);\n                    break;\n            }\n            result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n            if (proxy.isHiddenMask) {\n                var hiddenChar = '';\n                for (var i = 0; i < result.length; i++) {\n                    hiddenChar += formattext[0];\n                }\n                return hiddenChar;\n            }\n            else {\n                return result;\n            }\n        }\n        return formatValueSpecifier;\n    };\n    MaskedDateTime.prototype.maskInputHandler = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var selectionChar = this.previousHiddenMask[start - 1];\n        var inputValue;\n        this.differenceCheck();\n        inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.inputElement.value = inputValue;\n        this.parent.inputElement.selectionStart = start;\n        this.validCharacterCheck();\n        if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n            var isbackward = this.isNavigate ? false : true;\n            this.isNavigate = this.isDeletion = false;\n            this.navigateSelection(isbackward);\n        }\n        this.isDeleteKey = false;\n        // this.setSelection(selectionChar);\n        // this.navigateSelection(inputValue);\n    };\n    MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n        var start = this.parent.inputElement.selectionStart;\n        var end = this.parent.inputElement.selectionEnd;\n        var formatIndex = isbackward ? start - 1 : end + 1;\n        while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n            if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n                this.setSelection(this.hiddenMask[formatIndex]);\n                break;\n            }\n            formatIndex = formatIndex + (isbackward ? -1 : 1);\n        }\n    };\n    MaskedDateTime.prototype.roundOff = function (val, count) {\n        var valueText = val.toString();\n        var length = count - valueText.length;\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += '0';\n        }\n        return result + valueText;\n    };\n    MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n        switch (format) {\n            case 'd':\n                this.isDayPart = isSegment;\n                break;\n            case 'M':\n                this.isMonthPart = isSegment;\n                if (!isSegment) {\n                    this.value.setMonth(0);\n                    this.monthCharacter = '';\n                }\n                break;\n            case 'y':\n                this.isYearPart = isSegment;\n                break;\n            case 'H':\n            case 'h':\n                this.isHourPart = isSegment;\n                if (!isSegment) {\n                    this.periodCharacter = '';\n                }\n                break;\n            case 'm':\n                this.isMinutePart = isSegment;\n                break;\n            case 's':\n                this.isSecondsPart = isSegment;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    };\n    MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        else {\n            return;\n        }\n        var newDateValue = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n        this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n        var incrementValue = isDecrement ? -1 : 1;\n        switch (formatText) {\n            case 'd':\n                newDateValue.setDate(newDateValue.getDate() + incrementValue);\n                break;\n            case 'M':\n                var newMonth = newDateValue.getMonth() + incrementValue;\n                newDateValue.setDate(1);\n                newDateValue.setMonth(newMonth);\n                if (this.isDayPart) {\n                    var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                    var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                    if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                        newDateValue.setDate(currentMaxDate);\n                    }\n                    else {\n                        newDateValue.setDate(this.previousDate.getDate());\n                    }\n                }\n                else {\n                    newDateValue.setDate(this.previousDate.getDate());\n                }\n                this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                break;\n            case 'y':\n                newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n                break;\n            case 'H':\n            case 'h':\n                newDateValue.setHours(newDateValue.getHours() + incrementValue);\n                break;\n            case 'm':\n                newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n                break;\n            case 's':\n                newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n                break;\n            case 'a':\n                newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                break;\n            default:\n                break;\n        }\n        this.value = newDateValue.getFullYear() > 0 ? newDateValue : this.value;\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            this.handleDeletion(this.hiddenMask[start], true);\n        }\n    };\n    MaskedDateTime.prototype.getCulturedValue = function (format) {\n        var locale = this.parent.locale;\n        var result;\n        if (locale === 'en' || locale === 'en-US') {\n            result = getValue(format, getDefaultDateObject());\n        }\n        else {\n            result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.getCulturedFormat = function () {\n        var formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n        if (this.parent.moduleName == 'datepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.format && this.parent.formatString) {\n                formatString = this.parent.formatString;\n            }\n        }\n        if (this.parent.moduleName == 'datetimepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.dateTimeFormat) {\n                formatString = this.parent.dateTimeFormat;\n            }\n        }\n        if (this.parent.moduleName == 'timepicker') {\n            formatString = this.parent.cldrTimeFormat();\n        }\n        return formatString;\n    };\n    MaskedDateTime.prototype.clearHandler = function () {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.updateValue();\n    };\n    MaskedDateTime.prototype.updateValue = function () {\n        this.monthCharacter = this.periodCharacter = '';\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.updateInputValue(inputValue);\n        //this.parent.inputElement.value = inputValue;\n    };\n    MaskedDateTime.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MaskedDateTime;\n}());\nexport { MaskedDateTime };\n"]},"metadata":{},"sourceType":"module"}