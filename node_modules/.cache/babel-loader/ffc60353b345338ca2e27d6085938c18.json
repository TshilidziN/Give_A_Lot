{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshilidzi-PC\\\\Documents\\\\GitHub\\\\Givee\\\\Give-a-Lot\\\\frontend\\\\givealot\\\\src\\\\views\\\\dashboard\\\\sidebar\\\\Components\\\\Timeline\\\\Timeline.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport \"./Timeline.css\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport OrganisationTimeLineItem from \"../../../../browse/Components/OrganisationTimeLineItem/OrganisationTimeLineItem\";\nimport { ApiContext } from \"../../../../../apiContext/ApiContext\";\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nfunction OrganisationTimeline() {\n  _s2();\n\n  const [serverDomain, setServerDomain] = useState(\"http://localhost:8080\");\n  let [timelineEvents, setTimelineEvents] = useState([]);\n  let [curr_organisation_id, set_curr_organisation_id] = useState(localStorage.getItem('id'));\n  const forceUpdate = useForceUpdate();\n\n  const addTimelineEvent = event => {\n    event.preventDefault();\n    let timelineTitle = document.getElementById(\"timeline-event-title-input\").value;\n    let timelineDate = document.getElementById(\"timeline-event-date-input\").value;\n    let timelineDescription = document.getElementById(\"timeline-event-description-input\").value;\n    const addTimeLineEventRequest = {\n      orgId: localStorage.getItem('id'),\n      eventDate: timelineDate,\n      eventTitle: timelineTitle,\n      eventShortDescription: timelineDescription\n    };\n    console.log(addTimeLineEventRequest);\n    axios.post(serverDomain + '/event/add/timeline/', addTimeLineEventRequest).then(response => {\n      console.log(response);\n\n      if (response) {\n        if (response.data.message.includes(\"success\")) {} else {\n          alert(response.data.message);\n        }\n      }\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n      } else {\n        console.error(error);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetch(serverDomain + \"/event/get/timeline/\" + curr_organisation_id).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok)\n        /* error handling here */\n        {\n          if (response.status === 500) {\n            alert(\"bad parameters, fatal\");\n          } else if (response.status === 401) {\n            alert(\"this token is unauthorized\");\n            /* take them back to login */\n          }\n\n          if (typeof data !== 'undefined') {\n            alert(data.message);\n          }\n        }\n\n      if (data.message === \"success\")\n        /*successfully fetched*/\n        {\n          console.log(data.object);\n          setTimelineEvents(data.object);\n        } else {\n        alert(\"error occured: \" + data.code);\n      }\n    }).catch(error => {\n      alert(\"failed - organisations - sector\");\n    });\n  }, []);\n  let fetched_timeline_events = [];\n\n  if (timelineEvents !== undefined) {\n    for (let i = 0; i < timelineEvents.length; i++) {\n      let timeline_event_date = timelineEvents[i].eventDate;\n      let timeline_event_title = timelineEvents[i].eventTitle;\n      let timeline_event_id = timelineEvents[i].eventId;\n      let timeline_event_description = timelineEvents[i].eventShortDescription;\n      fetched_timeline_events.push( /*#__PURE__*/_jsxDEV(OrganisationTimeLineItem, {\n        id: timeline_event_id,\n        date: timeline_event_date,\n        title: timeline_event_title,\n        description: timeline_event_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trythis\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OrgSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(OrganisationTimeline, \"eZ301ObLPlWwTSxdYRzB5U+6TaE=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = OrganisationTimeline;\nexport default OrganisationTimeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganisationTimeline\");","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/src/views/dashboard/sidebar/Components/Timeline/Timeline.js"],"names":["Box","TextField","Button","axios","React","useContext","useEffect","useState","Timeline","OrganisationTimeLineItem","ApiContext","OrgSidebar","useForceUpdate","value","setValue","OrganisationTimeline","serverDomain","setServerDomain","timelineEvents","setTimelineEvents","curr_organisation_id","set_curr_organisation_id","localStorage","getItem","forceUpdate","addTimelineEvent","event","preventDefault","timelineTitle","document","getElementById","timelineDate","timelineDescription","addTimeLineEventRequest","orgId","eventDate","eventTitle","eventShortDescription","console","log","post","then","response","data","message","includes","alert","catch","error","fetch","json","ok","status","object","code","fetched_timeline_events","undefined","i","length","timeline_event_date","timeline_event_title","timeline_event_id","eventId","timeline_event_description","push"],"mappings":";;;;AAAA,SAAQA,GAAR,EAAaC,SAAb,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,wBAAP,MAAqC,iFAArC;AACA,SAAQC,UAAR,QAAyB,sCAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAGA,SAASC,cAAT,GACA;AAAA;;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC,CADJ,CAC2C;;AACvC,SAAO,MAAMO,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAArB,CAFJ,CAE+C;AAC9C;;GAJQD,c;;AAMT,SAASG,oBAAT,GACA;AAAA;;AACI,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,uBAAD,CAAhD;AACA,MAAI,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAI,CAACa,oBAAD,EAAuBC,wBAAvB,IAAmDd,QAAQ,CAACe,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAA/D;AACA,QAAMC,WAAW,GAAGZ,cAAc,EAAlC;;AAEA,QAAMa,gBAAgB,GAAGC,KAAK,IAC9B;AACIA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,4BAAxB,EAAsDjB,KAA1E;AACA,QAAIkB,YAAY,GAAGF,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDjB,KAAxE;AACA,QAAImB,mBAAmB,GAAGH,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,EAA4DjB,KAAtF;AAEA,UAAMoB,uBAAuB,GAC7B;AACIC,MAAAA,KAAK,EAAGZ,YAAY,CAACC,OAAb,CAAqB,IAArB,CADZ;AAEIY,MAAAA,SAAS,EAAEJ,YAFf;AAGIK,MAAAA,UAAU,EAAGR,aAHjB;AAIIS,MAAAA,qBAAqB,EAAGL;AAJ5B,KADA;AAQAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,uBAAZ;AAEA9B,IAAAA,KAAK,CAACqC,IAAN,CAAWxB,YAAY,GAAG,sBAA1B,EAAkDiB,uBAAlD,EACCQ,IADD,CACMC,QAAQ,IACd;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;;AACA,UAAGA,QAAH,EACA;AACI,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,QAAtB,CAA+B,SAA/B,CAAH,EACA,CAEC,CAHD,MAKA;AACIC,UAAAA,KAAK,CAACJ,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAL;AACH;AACJ;AACJ,KAfD,EAgBCG,KAhBD,CAgBOC,KAAK,IACZ;AACI,UAAGA,KAAK,CAACN,QAAT,EACA;AACIJ,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACN,QAAlB;AACH,OAHD,MAKA;AACIJ,QAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACH;AACJ,KA1BD;AA2BH,GA5CD;;AA8CA1C,EAAAA,SAAS,CAAC,MAAM;AACR2C,IAAAA,KAAK,CAAEjC,YAAY,GAAG,sBAAf,GAAwCI,oBAA1C,CAAL,CACKqB,IADL,CACU,MAAMC,QAAN,IAAiB;AAEnB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,UAAG,CAACR,QAAQ,CAACS,EAAb;AAAiB;AACjB;AACI,cAAGT,QAAQ,CAACU,MAAT,KAAoB,GAAvB,EACA;AACIN,YAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,WAHD,MAIK,IAAGJ,QAAQ,CAACU,MAAT,KAAoB,GAAvB,EACL;AACIN,YAAAA,KAAK,CAAC,4BAAD,CAAL;AAAqC;AACxC;;AAED,cAAG,OAAOH,IAAP,KAAgB,WAAnB,EACA;AACIG,YAAAA,KAAK,CAACH,IAAI,CAACC,OAAN,CAAL;AACH;AACJ;;AAED,UAAGD,IAAI,CAACC,OAAL,KAAiB,SAApB;AAA+B;AAC/B;AACIN,UAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACU,MAAjB;AACAlC,UAAAA,iBAAiB,CAACwB,IAAI,CAACU,MAAN,CAAjB;AACH,SAJD,MAMA;AACIP,QAAAA,KAAK,CAAC,oBAAoBH,IAAI,CAACW,IAA1B,CAAL;AACH;AACJ,KA/BL,EAiCKP,KAjCL,CAiCWC,KAAK,IAAI;AACZF,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACH,KAnCL;AAoCH,GArCI,EAsCJ,EAtCI,CAAT;AAwCA,MAAIS,uBAAuB,GAAG,EAA9B;;AACA,MAAGrC,cAAc,KAAKsC,SAAtB,EACA;AACI,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,cAAc,CAACwC,MAAnC,EAA2CD,CAAC,EAA5C,EACA;AACI,UAAIE,mBAAmB,GAAGzC,cAAc,CAACuC,CAAD,CAAd,CAAkBtB,SAA5C;AACA,UAAIyB,oBAAoB,GAAG1C,cAAc,CAACuC,CAAD,CAAd,CAAkBrB,UAA7C;AACA,UAAIyB,iBAAiB,GAAG3C,cAAc,CAACuC,CAAD,CAAd,CAAkBK,OAA1C;AACA,UAAIC,0BAA0B,GAAG7C,cAAc,CAACuC,CAAD,CAAd,CAAkBpB,qBAAnD;AAEAkB,MAAAA,uBAAuB,CAACS,IAAxB,eACI,QAAC,wBAAD;AAA0B,QAAA,EAAE,EAAEH,iBAA9B;AAC0B,QAAA,IAAI,EAAEF,mBADhC;AAE0B,QAAA,KAAK,EAAEC,oBAFjC;AAG0B,QAAA,WAAW,EAAEG;AAHvC;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH;;IA3KQhD,oB;UAKeH,c;;;KALfG,oB;AA6KT,eAAeA,oBAAf","sourcesContent":["import {Box, TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport \"./Timeline.css\"\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport OrganisationTimeLineItem from \"../../../../browse/Components/OrganisationTimeLineItem/OrganisationTimeLineItem\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\n\r\n\r\nfunction useForceUpdate()\r\n{\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nfunction OrganisationTimeline()\r\n{\r\n    const [serverDomain, setServerDomain] = useState(\"http://localhost:8080\")\r\n    let [timelineEvents, setTimelineEvents] = useState([]);\r\n    let [curr_organisation_id, set_curr_organisation_id] = useState(localStorage.getItem('id'));\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    const addTimelineEvent = event =>\r\n    {\r\n        event.preventDefault();\r\n        let timelineTitle = document.getElementById(\"timeline-event-title-input\").value;\r\n        let timelineDate = document.getElementById(\"timeline-event-date-input\").value;\r\n        let timelineDescription = document.getElementById(\"timeline-event-description-input\").value;\r\n\r\n        const addTimeLineEventRequest =\r\n        {\r\n            orgId : localStorage.getItem('id'),\r\n            eventDate: timelineDate,\r\n            eventTitle : timelineTitle,\r\n            eventShortDescription : timelineDescription\r\n        }\r\n\r\n        console.log(addTimeLineEventRequest)\r\n\r\n        axios.post(serverDomain + '/event/add/timeline/', addTimeLineEventRequest)\r\n        .then(response =>\r\n        {\r\n            console.log(response)\r\n            if(response)\r\n            {\r\n                if(response.data.message.includes(\"success\"))\r\n                {\r\n\r\n                }\r\n                else\r\n                {\r\n                    alert(response.data.message);\r\n                }\r\n            }\r\n        })\r\n        .catch(error =>\r\n        {\r\n            if(error.response)\r\n            {\r\n                console.log(error.response)\r\n            }\r\n            else\r\n            {\r\n                console.error(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n            fetch( serverDomain + \"/event/get/timeline/\" + curr_organisation_id)\r\n                .then(async response =>{\r\n\r\n                    const data = await response.json();\r\n\r\n                    if(!response.ok) /* error handling here */\r\n                    {\r\n                        if(response.status === 500)\r\n                        {\r\n                            alert(\"bad parameters, fatal\");\r\n                        }\r\n                        else if(response.status === 401)\r\n                        {\r\n                            alert(\"this token is unauthorized\"); /* take them back to login */\r\n                        }\r\n\r\n                        if(typeof data !== 'undefined')\r\n                        {\r\n                            alert(data.message);\r\n                        }\r\n                    }\r\n\r\n                    if(data.message === \"success\") /*successfully fetched*/\r\n                    {\r\n                        console.log(data.object);\r\n                        setTimelineEvents(data.object)\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"error occured: \" + data.code);\r\n                    }\r\n                })\r\n\r\n                .catch(error => {\r\n                    alert(\"failed - organisations - sector\")\r\n                });\r\n        }\r\n        ,[])\r\n\r\n    let fetched_timeline_events = [];\r\n    if(timelineEvents !== undefined)\r\n    {\r\n        for (let i = 0; i < timelineEvents.length; i++)\r\n        {\r\n            let timeline_event_date = timelineEvents[i].eventDate;\r\n            let timeline_event_title = timelineEvents[i].eventTitle;\r\n            let timeline_event_id = timelineEvents[i].eventId;\r\n            let timeline_event_description = timelineEvents[i].eventShortDescription;\r\n\r\n            fetched_timeline_events.push(\r\n                <OrganisationTimeLineItem id={timeline_event_id}\r\n                                          date={timeline_event_date}\r\n                                          title={timeline_event_title}\r\n                                          description={timeline_event_description}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"trythis\">\r\n            <div>\r\n                <OrgSidebar />\r\n            </div>\r\n        <div className=\"time\">\r\n            {/*<Box id={\"timeline_container\"} >\r\n                <Box id={\"timeline_add_event_container\"}>\r\n                    <p id={\"timeline_title\"}>TIMELINE - REMEMBER WHAT'S IMPORTANT</p>\r\n                    <p id={\"timeline_slogan\"}>\r\n                        Keep everyone updated, add a timeline event\r\n                        for your organisation.\r\n                    </p>\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        id={\"timeline-event-title-input\"}\r\n                        variant={\"outlined\"}\r\n                        label=\"event title\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        id={\"timeline-event-date-input\"}\r\n                        variant={\"outlined\"}\r\n                        type=\"date\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        variant={\"outlined\"}\r\n                        id={\"timeline-event-description-input\"}\r\n                        label=\"describe the event\"\r\n                        placeholder=\"describe the event in 50 characters\"\r\n                        maxRows={2}\r\n                        multiline\r\n                    />\r\n\r\n                    <Button\r\n                        variant={\"contained\"}\r\n                        color={\"secondary\"}\r\n                        onClick={forceUpdate}\r\n                    >\r\n                        add event\r\n                    </Button>\r\n                </Box>\r\n\r\n                <Box id={\"timeline-event-dashboard-container\"}>\r\n                    <Timeline align=\"alternate\">\r\n                        {fetched_timeline_events}\r\n                    </Timeline>\r\n                </Box>\r\n\r\n            </Box>*/}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganisationTimeline;\r\n"]},"metadata":{},"sourceType":"module"}