{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-scheduler\n * Generated: 2021-06-24\n * Version: 2.7.6\n * License: https://js.devexpress.com/Licensing\n */\nimport { createElement, PureComponent, Fragment, createRef, memo, useRef, useState, useCallback, useEffect } from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, PluginHost, TemplateConnector, Action, createStateHelper, DragDropProvider as DragDropProvider$1, DropTarget, DragSource } from '@devexpress/dx-react-core';\nimport { formatDateTimeGetter, appointments, computed, availableViews, VERTICAL_GROUP_ORIENTATION, HORIZONTAL_GROUP_ORIENTATION, startViewDate, endViewDate, timeCellsData, getTimeTableHeight, calculateWeekDateIntervals, VIEW_TYPES, viewCellsData, monthCellsData, calculateMonthDateIntervals, viewBoundText, POSITION_START, POSITION_END, isTimeTableElementsMetaActual, getGroupsLastRow, calculateRectByDateAndGroupIntervals, getAppointmentStyle, isAllDayElementsMetaActual, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData, VERTICAL_TYPE, getVerticalRectByAppointmentData, allDayCells, calculateAllDayDateIntervals, changeCurrentDate, setCurrentViewName, preCommitChanges, startEditAppointment, stopEditAppointment, changeAppointment, cancelChanges, RECURRENCE_EDIT_SCOPE, changedAppointmentById, addAppointment, cancelAddedAppointment, TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY, getAppointmentResources, OPEN_COMMAND_BUTTON, CLOSE_COMMAND_BUTTON, DELETE_COMMAND_BUTTON, setAppointmentMeta, TOGGLE_APPOINTMENT_FORM_VISIBILITY, callActionIfExists, isAllDayCell, checkMultipleResourceFields, setAppointmentData, autoScroll, cellIndex, cellData, cellType, calculateInsidePart, intervalDuration, calculateAppointmentTimeBoundaries, calculateAppointmentGroups, appointmentDragged, calculateDraftAppointments, RESIZE_TOP, RESIZE_BOTTOM, SCROLL_SPEED_PX, validateResources, addResourcesToAppointments, convertResourcesToPlain, toggleExpandedGroups, HORIZONTAL_VIEW_LEFT_OFFSET, VERTICAL_VIEW_LEFT_OFFSET, isMonthCell, getCurrentTimeIndicatorTop, isCellShaded, isShadedAppointment, expandViewCellsDataWithGroups, getGroupsFromResources, sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource, expandGroups, updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData } from '@devexpress/dx-scheduler-core';\nimport { memoize, createClickHandlers, getMessagesFormatter } from '@devexpress/dx-core';\nimport moment from 'moment';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nvar SchedulerCoreBase = function (_super) {\n  __extends(SchedulerCoreBase, _super);\n\n  function SchedulerCoreBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.formatDateTimeGetter = memoize(function (locale) {\n      return formatDateTimeGetter(locale);\n    });\n    return _this;\n  }\n\n  SchedulerCoreBase.prototype.render = function () {\n    var _a = this.props,\n        data = _a.data,\n        Root = _a.rootComponent,\n        locale = _a.locale,\n        height = _a.height,\n        firstDayOfWeek = _a.firstDayOfWeek;\n    return createElement(Plugin, {\n      name: \"SchedulerCore\"\n    }, createElement(Getter, {\n      name: \"appointments\",\n      value: appointments(data)\n    }), createElement(Getter, {\n      name: \"formatDate\",\n      value: this.formatDateTimeGetter(locale)\n    }), createElement(Getter, {\n      name: \"firstDayOfWeek\",\n      value: firstDayOfWeek\n    }), createElement(Getter, {\n      name: \"locale\",\n      value: locale\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(Root, {\n      height: height\n    }, createElement(TemplatePlaceholder, {\n      name: \"schedulerRoot\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"header\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"body\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"footer\"\n    }))));\n  };\n\n  return SchedulerCoreBase;\n}(PureComponent);\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Scheduler's functionality\r\n * (data visualization and processing) is implemented in several plugins\r\n * specified as child components.\r\n * */\n\n\nvar SchedulerCore = SchedulerCoreBase;\n\nvar SchedulerBase = function (_a) {\n  var data = _a.data,\n      rootComponent = _a.rootComponent,\n      children = _a.children,\n      locale = _a.locale,\n      height = _a.height,\n      firstDayOfWeek = _a.firstDayOfWeek;\n  return createElement(PluginHost, null, createElement(SchedulerCore, {\n    data: data,\n    rootComponent: rootComponent,\n    locale: locale,\n    height: height,\n    firstDayOfWeek: firstDayOfWeek\n  }), children);\n};\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0\n}; // tslint:disable: max-line-length\n\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Schedulerâ€™s functionality\r\n * (data visualization and processing) is implemented in several plugins specified as child components.\r\n * */\n\nvar Scheduler = SchedulerBase;\n\nvar CellPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"cell\",\n    params: params\n  });\n};\n\nvar TimeTableAppointmentLayer = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTableAppointmentLayer\"\n  });\n};\n\nvar startViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return startViewDate(viewCellsData);\n};\n\nvar endViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return endViewDate(viewCellsData);\n};\n\nvar TimeTablePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTable\"\n  });\n};\n\nvar DayScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScale\"\n  });\n};\n\nvar DayScaleEmptyCellPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScaleEmptyCell\"\n  });\n};\n\nvar GroupingPanelPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"groupingPanel\"\n  });\n};\n\nvar BasicViewBase = function (_super) {\n  __extends(BasicViewBase, _super);\n\n  function BasicViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      timeTableElementsMeta: {},\n      scrollingStrategy: {\n        topBoundary: 0,\n        bottomBoundary: 0,\n        leftBoundary: 0,\n        rightBoundary: 0,\n        changeVerticalScroll: function () {\n          return undefined;\n        },\n        changeHorizontalScroll: function () {\n          return undefined;\n        }\n      },\n      previousTimeTableCell: null,\n      // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n      // and, consequently, update timeTableElementsMeta\n      timeTableLayoutKey: 0\n    };\n    _this.scrollingStrategyComputed = memoize(function (viewName, scrollingStrategy) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return scrollingStrategy;\n        }, getters.scrollingStrategy);\n      };\n    });\n    _this.timeTableElementsMetaComputed = memoize(function (viewName, timeTableElementsMeta) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return timeTableElementsMeta;\n        }, getters.timeTableElementsMeta);\n      };\n    });\n    _this.intervalCountComputed = memoize(function (viewName, intervalCount) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return intervalCount;\n        }, getters.intervalCount);\n      };\n    });\n    _this.cellDurationComputed = memoize(function (viewName, cellDuration) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return cellDuration;\n        }, getters.cellDuration);\n      };\n    });\n    _this.excludedDaysComputed = memoize(function (viewName, excludedDays) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return excludedDays;\n        }, getters.excludedDays);\n      };\n    });\n    _this.availableViewsComputed = memoize(function (viewName, viewDisplayName) {\n      return function (_a) {\n        var availableViews$1 = _a.availableViews;\n        return availableViews(availableViews$1, viewName, viewDisplayName);\n      };\n    });\n    _this.currentViewComputed = memoize(function (viewName, viewDisplayName, type) {\n      return function (_a) {\n        var currentView = _a.currentView;\n        return currentView && currentView.name !== viewName ? currentView : {\n          name: viewName,\n          type: type,\n          displayName: viewDisplayName\n        };\n      };\n    });\n\n    _this.endViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, endViewDateBaseComputed, getters.endViewDate);\n    };\n\n    _this.startViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, startViewDateBaseComputed, getters.startViewDate);\n    };\n\n    _this.viewCellsDataComputed = memoize(function (viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed) {\n      return function (getters) {\n        return computed(getters, viewName, viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour), getters.viewCellsData);\n      };\n    });\n    _this.timeTableAppointmentsComputed = memoize(function (viewName, cellDuration, calculateAppointmentsIntervals) {\n      return function (getters) {\n        return computed(getters, viewName, calculateAppointmentsIntervals(cellDuration), getters.timeTableAppointments);\n      };\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        timeTableElementsMeta: cellElementsMeta\n      });\n    });\n\n    _this.setScrollingStrategy = function (scrollingStrategy) {\n      _this.setState({\n        scrollingStrategy: scrollingStrategy\n      });\n    };\n\n    return _this;\n  }\n\n  BasicViewBase.getDerivedStateFromProps = function (props, state) {\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return __assign(__assign({}, state), {\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random()\n      });\n    }\n\n    return null;\n  };\n\n  BasicViewBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        type = _a.type,\n        excludedDays = _a.excludedDays,\n        cellDuration = _a.cellDuration,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour,\n        viewCellsDataComputed = _a.viewCellsDataComputed,\n        calculateAppointmentsIntervals = _a.calculateAppointmentsIntervals,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        DayScale = _a.dayScaleLayoutComponent,\n        TimeTableCell = _a.timeTableCellComponent,\n        TimeTableLayout = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        AppointmentLayer = _a.appointmentLayerComponent,\n        DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n        layoutProps = _a.layoutProps,\n        Layout = _a.layoutComponent;\n    var _b = this.state,\n        timeTableElementsMeta = _b.timeTableElementsMeta,\n        scrollingStrategy = _b.scrollingStrategy,\n        timeTableLayoutKey = _b.timeTableLayoutKey;\n    var viewDisplayName = displayName || viewName;\n    return createElement(Plugin, {\n      name: \"basicView\"\n    }, createElement(Getter, {\n      name: \"availableViews\",\n      computed: this.availableViewsComputed(viewName, viewDisplayName)\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.currentViewComputed(viewName, viewDisplayName, type)\n    }), createElement(Getter, {\n      name: \"intervalCount\",\n      computed: this.intervalCountComputed(viewName, intervalCount)\n    }), createElement(Getter, {\n      name: \"excludedDays\",\n      computed: this.excludedDaysComputed(viewName, excludedDays)\n    }), createElement(Getter, {\n      name: \"viewCellsData\",\n      computed: this.viewCellsDataComputed(viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed)\n    }), createElement(Getter, {\n      name: \"startViewDate\",\n      computed: this.startViewDateComputed\n    }), createElement(Getter, {\n      name: \"endViewDate\",\n      computed: this.endViewDateComputed\n    }), createElement(Getter, {\n      name: \"cellDuration\",\n      computed: this.cellDurationComputed(viewName, cellDuration)\n    }), createElement(Getter, {\n      name: \"timeTableElementsMeta\",\n      computed: this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)\n    }), createElement(Getter, {\n      name: \"scrollingStrategy\",\n      computed: this.scrollingStrategyComputed(viewName, scrollingStrategy)\n    }), createElement(Getter, {\n      name: \"timeTableAppointments\",\n      computed: this.timeTableAppointmentsComputed(viewName, cellDuration, calculateAppointmentsIntervals)\n    }), createElement(Template, {\n      name: \"body\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation,\n          groups = _a.groups;\n      if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n      var isVerticalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === VERTICAL_GROUP_ORIENTATION;\n      return createElement(Layout, __assign({\n        dayScaleComponent: DayScalePlaceholder,\n        timeTableComponent: TimeTablePlaceholder,\n        setScrollingStrategy: _this.setScrollingStrategy,\n        groupingPanelComponent: isVerticalGrouping ? GroupingPanelPlaceholder : undefined,\n        groupingPanelSize: isVerticalGrouping ? groups === null || groups === void 0 ? void 0 : groups.length : 0,\n        dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder\n      }, layoutProps));\n    })), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          viewCellsData = _a.viewCellsData,\n          formatDate = _a.formatDate,\n          groupByDate = _a.groupByDate,\n          groupOrientation = _a.groupOrientation;\n      if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n      var groupByDateEnabled = groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(viewName);\n      var isHorizontalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === HORIZONTAL_GROUP_ORIENTATION;\n      return createElement(DayScale, {\n        cellComponent: dayScaleCellComponent,\n        rowComponent: dayScaleRowComponent,\n        groupingPanelComponent: isHorizontalGrouping ? GroupingPanelPlaceholder : undefined,\n        cellsData: viewCellsData,\n        formatDate: formatDate,\n        groupedByDate: groupByDateEnabled\n      });\n    })), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, {\n          params: params\n        });\n        return createElement(TimeTableCell, __assign({}, params));\n      });\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n            currentView = _a.currentView,\n            viewCellsData = _a.viewCellsData;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        return createElement(Fragment, null, createElement(TimeTableLayout, __assign({\n          cellsData: viewCellsData,\n          rowComponent: timeTableRowComponent,\n          cellComponent: CellPlaceholder,\n          formatDate: formatDate,\n          setCellElementsMeta: _this.updateCellElementsMeta,\n          key: timeTableLayoutKey\n        }, params)), createElement(AppointmentLayer, null, createElement(TimeTableAppointmentLayer, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView;\n\n      if (currentView.name !== viewName || !DayScaleEmptyCell) {\n        return createElement(TemplatePlaceholder, null);\n      }\n\n      return createElement(DayScaleEmptyCell, null);\n    })));\n  };\n\n  return BasicViewBase;\n}(PureComponent);\n\nvar BasicView = BasicViewBase;\n\nvar calculateAppointmentsIntervalsBaseComputed = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n    return calculateWeekDateIntervals(appointments, startViewDate, endViewDate, excludedDays, cellDuration);\n  };\n};\n\nvar timeCellsDataComputed = function (startDayHour, endDayHour) {\n  return function (_a) {\n    var viewCellsData = _a.viewCellsData,\n        cellDuration = _a.cellDuration;\n    return timeCellsData(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar TimeScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeScale\"\n  });\n};\n\nvar VericalViewBase = function (_super) {\n  __extends(VericalViewBase, _super);\n\n  function VericalViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeCellsDataComputed = memoize(function (viewName, startDayHour, endDayHour) {\n      return function (getters) {\n        return computed(getters, viewName, timeCellsDataComputed(startDayHour, endDayHour), getters.timeCellsData);\n      };\n    });\n    return _this;\n  }\n\n  VericalViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        TimeScale = _a.timeScaleLayoutComponent,\n        TimeScaleLabel = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        cellDuration = _a.cellDuration,\n        excludedDays = _a.excludedDays,\n        viewName = _a.name,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour,\n        viewCellsDataComputed = _a.viewCellsDataComputed,\n        type = _a.type;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataComputed,\n      type: type,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      layoutProps: {\n        timeScaleComponent: TimeScalePlaceholder\n      }\n    }), createElement(Getter, {\n      name: \"timeCellsData\",\n      computed: this.timeCellsDataComputed(viewName, startDayHour, endDayHour)\n    }), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            timeCellsData = _a.timeCellsData,\n            groups = _a.groups,\n            formatDate = _a.formatDate,\n            getGroupOrientation = _a.groupOrientation,\n            timeTableElementsMeta = _a.timeTableElementsMeta;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var groupOrientation = getGroupOrientation === null || getGroupOrientation === void 0 ? void 0 : getGroupOrientation(viewName);\n        return createElement(TimeScale, __assign({\n          labelComponent: TimeScaleLabel,\n          tickCellComponent: timeScaleTickCellComponent,\n          rowComponent: timeScaleTicksRowComponent,\n          cellsData: timeCellsData,\n          formatDate: formatDate,\n          groups: groups,\n          groupOrientation: groupOrientation,\n          height: getTimeTableHeight(timeTableElementsMeta)\n        }, params));\n      });\n    }));\n  };\n\n  return VericalViewBase;\n}(PureComponent);\n\nvar VerticalView = VericalViewBase;\n\nvar viewCellsDataBaseComputed = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n        intervalCount = _a.intervalCount;\n    return viewCellsData(currentDate, undefined, intervalCount, [], startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar DayViewBase = function (_super) {\n  __extends(DayViewBase, _super);\n\n  function DayViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n        timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n        timeScaleLabelComponent = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        cellDuration = _a.cellDuration,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"DayView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed,\n      type: VIEW_TYPES.DAY,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n\n  DayViewBase.defaultProps = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1\n  };\n  DayViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return DayViewBase;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\n\n\nvar DayView = DayViewBase;\nvar DAYS_IN_WEEK = 7;\n\nvar viewCellsDataBaseComputed$1 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var firstDayOfWeek = _a.firstDayOfWeek,\n        intervalCount = _a.intervalCount,\n        excludedDays = _a.excludedDays,\n        currentDate = _a.currentDate;\n    return viewCellsData(currentDate, firstDayOfWeek, intervalCount * DAYS_IN_WEEK, excludedDays, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar WeekViewBase = function (_super) {\n  __extends(WeekViewBase, _super);\n\n  function WeekViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WeekViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n        timeScaleLabelComponent = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        cellDuration = _a.cellDuration,\n        excludedDays = _a.excludedDays,\n        viewName = _a.name,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$1,\n      type: VIEW_TYPES.WEEK,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n\n  WeekViewBase.defaultProps = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week'\n  };\n  WeekViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return WeekViewBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/***\r\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\n\n\nvar WeekView = WeekViewBase;\n\nvar viewCellsDataBaseComputed$2 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n        firstDayOfWeek = _a.firstDayOfWeek,\n        intervalCount = _a.intervalCount;\n    return monthCellsData(currentDate, firstDayOfWeek, intervalCount, Date.now());\n  };\n};\n\nvar calculateAppointmentsIntervalsBaseComputed$1 = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n    return calculateMonthDateIntervals(appointments, startViewDate, endViewDate);\n  };\n};\n\nvar MonthViewBase = function (_super) {\n  __extends(MonthViewBase, _super);\n\n  function MonthViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MonthViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName;\n    return createElement(Plugin, {\n      name: \"MonthView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$2,\n      type: VIEW_TYPES.MONTH,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed$1,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent\n    }));\n  };\n\n  MonthViewBase.defaultProps = {\n    intervalCount: 1,\n    name: 'Month'\n  };\n  MonthViewBase.components = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return MonthViewBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/***\r\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\r\n * An appointment's size depends on its duration in days.\r\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\r\n * The time scale and all-day panel are not available in this view.\r\n * */\n\n\nvar MonthView = MonthViewBase;\n\nvar ToolbarBase = function (_super) {\n  __extends(ToolbarBase, _super);\n\n  function ToolbarBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ToolbarBase.prototype.render = function () {\n    var _a = this.props,\n        Root = _a.rootComponent,\n        FlexibleSpaceComponent = _a.flexibleSpaceComponent;\n    return createElement(Plugin, {\n      name: \"Toolbar\"\n    }, createElement(Template, {\n      name: \"header\"\n    }, createElement(Root, null, createElement(TemplatePlaceholder, {\n      name: \"toolbarContent\"\n    })), createElement(TemplatePlaceholder, null)), createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(FlexibleSpaceComponent, null)));\n  };\n\n  ToolbarBase.components = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace'\n  };\n  return ToolbarBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's toolbar. */\n\n\nvar Toolbar = ToolbarBase;\nvar pluginDependencies = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\n\nvar navigate = function (action, currentView, intervalCount) {\n  return function (direction, nextDate) {\n    return action({\n      direction: direction,\n      nextDate: nextDate,\n      amount: intervalCount,\n      step: currentView.type\n    });\n  };\n};\n\nvar DateNavigatorBase = function (_super) {\n  __extends(DateNavigatorBase, _super);\n\n  function DateNavigatorBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      visible: false\n    };\n\n    _this.setRootRef = function (target) {\n      _this.target = target;\n    };\n\n    _this.handleVisibilityToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      });\n    };\n\n    _this.handleHide = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.navigateAction = memoize(function (changeCurrentDate, currentView, intervalCount, navigateAction) {\n      return navigateAction(changeCurrentDate, currentView, intervalCount);\n    });\n    return _this;\n  }\n\n  DateNavigatorBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        Root = _a.rootComponent,\n        Overlay = _a.overlayComponent,\n        OpenButton = _a.openButtonComponent,\n        NavigationButton = _a.navigationButtonComponent,\n        Calendar = _a.calendarComponent,\n        CalendarRow = _a.calendarRowComponent,\n        CalendarCell = _a.calendarCellComponent,\n        CalendarHeaderRow = _a.calendarHeaderRowComponent,\n        CalendarHeaderCell = _a.calendarHeaderCellComponent,\n        CalendarText = _a.calendarTextComponent,\n        CalendarNavigationButton = _a.calendarNavigationButtonComponent,\n        CalendarNavigator = _a.calendarNavigatorComponent;\n    var visible = this.state.visible;\n    return createElement(Plugin, {\n      name: \"DateNavigator\",\n      dependencies: pluginDependencies\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var currentDate = _a.currentDate,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          firstDayOfWeek = _a.firstDayOfWeek,\n          currentView = _a.currentView,\n          intervalCount = _a.intervalCount,\n          formatDate = _a.formatDate;\n      var changeCurrentDate = _b.changeCurrentDate;\n\n      var navigateAction = _this.navigateAction(changeCurrentDate, currentView, intervalCount, navigate);\n\n      var calendarDateChanged = function (nextDate) {\n        navigateAction(undefined, nextDate);\n\n        _this.handleHide();\n      };\n\n      var navigatorText = viewBoundText(startViewDate, endViewDate, currentView.type, currentDate, intervalCount, formatDate);\n      return createElement(Fragment, null, createElement(Root, {\n        navigationButtonComponent: NavigationButton,\n        openButtonComponent: OpenButton,\n        navigatorText: navigatorText,\n        rootRef: _this.setRootRef,\n        onVisibilityToggle: _this.handleVisibilityToggle,\n        onNavigate: navigateAction\n      }), createElement(Overlay, {\n        visible: visible,\n        target: _this.target,\n        onHide: _this.handleHide\n      }, createElement(Calendar, {\n        selectedDate: currentDate,\n        firstDayOfWeek: firstDayOfWeek,\n        getCells: monthCellsData,\n        textComponent: CalendarText,\n        navigationButtonComponent: CalendarNavigationButton,\n        rowComponent: CalendarRow,\n        cellComponent: CalendarCell,\n        headerRowComponent: CalendarHeaderRow,\n        headerCellComponent: CalendarHeaderCell,\n        navigatorComponent: CalendarNavigator,\n        onSelectedDateChange: calendarDateChanged,\n        formatDate: formatDate\n      })));\n    }), createElement(TemplatePlaceholder, null)));\n  };\n\n  DateNavigatorBase.components = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton'\n  };\n  return DateNavigatorBase;\n}(PureComponent);\n/** A plugin that renders the Schedulerâ€™s date navigator. */\n\n\nvar DateNavigator = DateNavigatorBase;\nvar pluginDependencies$1 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\n\nvar ViewSwitcherBase = function (_super) {\n  __extends(ViewSwitcherBase, _super);\n\n  function ViewSwitcherBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ViewSwitcherBase.prototype.render = function () {\n    var Switcher = this.props.switcherComponent;\n    return createElement(Plugin, {\n      name: \"ViewSwitcher\",\n      dependencies: pluginDependencies$1\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var currentView = _a.currentView,\n          availableViews = _a.availableViews;\n      var setCurrentViewName = _b.setCurrentViewName;\n      return createElement(Switcher, {\n        currentView: currentView,\n        availableViews: availableViews,\n        onChange: setCurrentViewName\n      });\n    })));\n  };\n\n  ViewSwitcherBase.components = {\n    switcherComponent: 'Switcher'\n  };\n  return ViewSwitcherBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's view switcher. */\n\n\nvar ViewSwitcher = ViewSwitcherBase;\n\nvar AppointmentPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"appointment\",\n    params: params\n  });\n};\n\nvar renderAppointments = function (rects) {\n  return rects.map(function (_a) {\n    var dataItem = _a.dataItem,\n        rectType = _a.type,\n        fromPrev = _a.fromPrev,\n        toNext = _a.toNext,\n        durationType = _a.durationType,\n        resources = _a.resources,\n        key = _a.key,\n        geometry = __rest(_a, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"key\"]);\n\n    return createElement(AppointmentPlaceholder, {\n      key: key,\n      type: rectType,\n      data: dataItem,\n      fromPrev: fromPrev,\n      toNext: toNext,\n      durationType: durationType,\n      resources: resources,\n      style: getAppointmentStyle(geometry)\n    });\n  });\n};\n\nvar pluginDependencies$2 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}];\n\nvar AppointmentsBase = function (_super) {\n  __extends(AppointmentsBase, _super);\n\n  function AppointmentsBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.updateTimeTableAppointments = memoize(function (timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate, placeAppointmentsNextToEachOther) {\n      if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      var appointmentType = {\n        growDirection: VERTICAL_TYPE,\n        multiline: false\n      };\n      var getRects = getVerticalRectByAppointmentData;\n\n      if (currentView.type === VIEW_TYPES.MONTH) {\n        appointmentType = {\n          growDirection: HORIZONTAL_TYPE,\n          multiline: true\n        };\n        getRects = getHorizontalRectByAppointmentData;\n      }\n\n      return renderAppointments(calculateRectByDateAndGroupIntervals(appointmentType, timeTableAppointments, getRects, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        cellDuration: cellDuration,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther: placeAppointmentsNextToEachOther\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    _this.updateAllDayAppointments = memoize(function (allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, getGroupOrientation, groupByDate) {\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n      if (!isAllDayElementsMetaActual(viewCellsData, allDayElementsMeta, groupOrientation, groupCount)) {\n        return null;\n      }\n\n      return renderAppointments(calculateRectByDateAndGroupIntervals({\n        growDirection: HORIZONTAL_TYPE,\n        multiline: false\n      }, allDayAppointments, getHorizontalRectByAppointmentData, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: allDayElementsMeta\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    return _this;\n  }\n\n  AppointmentsBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        SplitIndicator = _a.splitIndicatorComponent,\n        Appointment = _a.appointmentComponent,\n        AppointmentContent = _a.appointmentContentComponent,\n        Container = _a.containerComponent,\n        recurringIconComponent = _a.recurringIconComponent,\n        placeAppointmentsNextToEachOther = _a.placeAppointmentsNextToEachOther;\n    return createElement(Plugin, {\n      name: \"Appointments\",\n      dependencies: pluginDependencies$2\n    }, createElement(Template, {\n      name: \"timeTableAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var timeTableAppointments = _a.timeTableAppointments,\n          viewCellsData = _a.viewCellsData,\n          timeTableElementsMeta = _a.timeTableElementsMeta,\n          currentView = _a.currentView,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          cellDuration = _a.cellDuration,\n          groupOrientation = _a.groupOrientation,\n          groups = _a.groups,\n          groupByDate = _a.groupByDate;\n      return _this.updateTimeTableAppointments(timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate, placeAppointmentsNextToEachOther);\n    })), createElement(Template, {\n      name: \"allDayAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var allDayAppointments = _a.allDayAppointments,\n          viewCellsData = _a.viewCellsData,\n          allDayElementsMeta = _a.allDayElementsMeta,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          groupOrientation = _a.groupOrientation,\n          currentView = _a.currentView,\n          groups = _a.groups,\n          groupByDate = _a.groupByDate;\n      return _this.updateAllDayAppointments(allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, groupOrientation, groupByDate);\n    })), createElement(Template, {\n      name: \"appointment\"\n    }, function (_a) {\n      var style = _a.style,\n          params = __rest(_a, [\"style\"]);\n\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate;\n        return createElement(Container, {\n          style: style\n        }, createElement(TemplatePlaceholder, {\n          name: \"appointmentTop\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.fromPrev\n          }\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentContent\",\n          params: __assign(__assign({}, params), {\n            formatDate: formatDate\n          })\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentBottom\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.toNext\n          }\n        }));\n      });\n    }), createElement(Template, {\n      name: \"appointmentContent\"\n    }, function (_a) {\n      var onClick = _a.onClick,\n          onDoubleClick = _a.onDoubleClick,\n          formatDate = _a.formatDate,\n          data = _a.data,\n          type = _a.type,\n          fromPrev = _a.fromPrev,\n          toNext = _a.toNext,\n          durationType = _a.durationType,\n          resources = _a.resources,\n          restParams = __rest(_a, [\"onClick\", \"onDoubleClick\", \"formatDate\", \"data\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\"]);\n\n      return createElement(Appointment, __assign({\n        data: data,\n        resources: resources\n      }, createClickHandlers(onClick, onDoubleClick), restParams), fromPrev && createElement(SplitIndicator, {\n        position: POSITION_START,\n        appointmentType: type\n      }), createElement(AppointmentContent, {\n        data: data,\n        type: type,\n        durationType: durationType,\n        recurringIconComponent: recurringIconComponent,\n        formatDate: formatDate,\n        resources: resources\n      }), toNext && createElement(SplitIndicator, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }));\n  };\n\n  AppointmentsBase.components = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  AppointmentsBase.defaultProps = {\n    placeAppointmentsNextToEachOther: false\n  };\n  return AppointmentsBase;\n}(PureComponent);\n/** A plugin that renders appointments. */\n\n\nvar Appointments = AppointmentsBase;\n\nvar isMonthView = function (currentView) {\n  return currentView.type === VIEW_TYPES.MONTH;\n};\n\nvar isVerticalGrouping = function (currentView, groupOrientation) {\n  return (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION;\n};\n\nvar pluginDependencies$3 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar defaultMessages = {\n  allDay: 'All Day'\n};\n\nvar AllDayAppointmentLayerPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayAppointmentLayer\"\n  });\n};\n\nvar AllDayPanelPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanel\",\n    params: params\n  });\n};\n\nvar CellPlaceholder$1 = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanelCell\",\n    params: params\n  });\n};\n\nvar AllDayTitlePlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayTitle\",\n    params: params\n  });\n};\n\nvar AllDayPanelBase = function (_super) {\n  __extends(AllDayPanelBase, _super);\n\n  function AllDayPanelBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      elementsMeta: {},\n      previousCell: null,\n      // The key has to be generated every time the Cell component is updated to rerender the Layout\n      // and, consequently, update allDayElementsMeta\n      layoutKey: 0\n    };\n    _this.allDayCellsDataComputed = memoize(function (_a) {\n      var viewCellsData = _a.viewCellsData;\n      return allDayCells(viewCellsData);\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        elementsMeta: cellElementsMeta\n      });\n    });\n    _this.allDayAppointmentsComputed = memoize(function (_a) {\n      var appointments = _a.appointments,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          excludedDays = _a.excludedDays;\n      var allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n      var allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n      return calculateAllDayDateIntervals(appointments, allDayLeftBound, allDayRightBound, excludedDays);\n    });\n    _this.allDayPanelExistsComputed = memoize(function (_a) {\n      var currentView = _a.currentView;\n      return !isMonthView(currentView);\n    });\n    _this.getMessageFormatter = memoize(function (messages, allDayPanelDefaultMessages) {\n      return getMessagesFormatter(__assign(__assign({}, allDayPanelDefaultMessages), messages));\n    });\n    return _this;\n  }\n\n  AllDayPanelBase.getDerivedStateFromProps = function (props, state) {\n    if (props.cellComponent !== state.previousCell) {\n      return __assign(__assign({}, state), {\n        previousCell: props.cellComponent,\n        layoutKey: Math.random()\n      });\n    }\n\n    return null;\n  };\n\n  AllDayPanelBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        AppointmentLayer = _a.appointmentLayerComponent,\n        Layout = _a.layoutComponent,\n        Cell = _a.cellComponent,\n        rowComponent = _a.rowComponent,\n        TitleCell = _a.titleCellComponent,\n        Container = _a.containerComponent,\n        messages = _a.messages;\n    var _b = this.state,\n        elementsMeta = _b.elementsMeta,\n        layoutKey = _b.layoutKey;\n    var getMessage = this.getMessageFormatter(messages, defaultMessages);\n    return createElement(Plugin, {\n      name: \"AllDayPanel\",\n      dependencies: pluginDependencies$3\n    }, createElement(Getter, {\n      name: \"allDayElementsMeta\",\n      value: elementsMeta\n    }), createElement(Getter, {\n      name: \"allDayCellsData\",\n      computed: this.allDayCellsDataComputed\n    }), createElement(Getter, {\n      name: \"allDayPanelExists\",\n      computed: this.allDayPanelExistsComputed\n    }), createElement(Getter, {\n      name: \"allDayAppointments\",\n      computed: this.allDayAppointmentsComputed\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            groupOrientation = _a.groupOrientation,\n            allDayCellsData = _a.allDayCellsData;\n\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n\n        return createElement(Fragment, null, createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayCellComponent: CellPlaceholder$1,\n            allDayRowComponent: rowComponent,\n            allDayCellsData: allDayCellsData\n          })\n        }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return createElement(TemplatePlaceholder, null);\n      }\n\n      return createElement(AllDayTitlePlaceholder, null);\n    })), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            groupOrientation = _a.groupOrientation;\n\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayTitleComponent: AllDayTitlePlaceholder,\n            showAllDayTitle: true\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return null;\n      }\n\n      return createElement(Container, null, createElement(AllDayPanelPlaceholder, null));\n    })), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          formatDate = _a.formatDate,\n          allDayCellsData = _a.allDayCellsData;\n      if (currentView.type === VIEW_TYPES.MONTH) return null;\n      return createElement(Fragment, null, createElement(Layout, {\n        cellComponent: CellPlaceholder$1,\n        rowComponent: rowComponent,\n        cellsData: allDayCellsData[0],\n        setCellElementsMeta: _this.updateCellElementsMeta,\n        formatDate: formatDate,\n        key: layoutKey\n      }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n    })), createElement(Template, {\n      name: \"allDayTitle\"\n    }, function (params) {\n      return createElement(TitleCell, __assign({\n        getMessage: getMessage\n      }, params));\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(Cell, __assign({}, params));\n    }));\n  };\n\n  AllDayPanelBase.defaultProps = {\n    messages: {}\n  };\n  AllDayPanelBase.components = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container'\n  };\n  return AllDayPanelBase;\n}(PureComponent);\n/** A plugin that renders the All Day Panel. */\n\n\nvar AllDayPanel = AllDayPanelBase;\n\nvar ViewStateBase = function (_super) {\n  __extends(ViewStateBase, _super);\n\n  function ViewStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getCurrentViewComputed = memoize(function (currentViewName) {\n      return function () {\n        return currentViewName ? {\n          name: currentViewName\n        } : undefined;\n      };\n    });\n    _this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName\n    };\n    var stateHelper = createStateHelper(_this, {\n      currentDate: function () {\n        var onCurrentDateChange = _this.props.onCurrentDateChange;\n        return onCurrentDateChange;\n      },\n      currentViewName: function () {\n        var onCurrentViewNameChange = _this.props.onCurrentViewNameChange;\n        return onCurrentViewNameChange;\n      }\n    });\n    _this.changeCurrentDate = stateHelper.applyFieldReducer.bind(stateHelper, 'currentDate', changeCurrentDate);\n    _this.setCurrentViewName = stateHelper.applyFieldReducer.bind(stateHelper, 'currentViewName', setCurrentViewName);\n    return _this;\n  }\n\n  ViewStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.currentDate,\n        currentDate = _a === void 0 ? prevState.currentDate : _a,\n        _b = nextProps.currentViewName,\n        currentViewName = _b === void 0 ? prevState.currentViewName : _b;\n    return {\n      currentDate: currentDate,\n      currentViewName: currentViewName\n    };\n  };\n\n  ViewStateBase.prototype.render = function () {\n    var _a = this.state,\n        currentDate = _a.currentDate,\n        stateCurrentViewName = _a.currentViewName;\n    return createElement(Plugin, {\n      name: \"ViewState\"\n    }, createElement(Getter, {\n      name: \"currentDate\",\n      value: currentDate\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.getCurrentViewComputed(stateCurrentViewName)\n    }), createElement(Action, {\n      name: \"changeCurrentDate\",\n      action: this.changeCurrentDate\n    }), createElement(Action, {\n      name: \"setCurrentViewName\",\n      action: this.setCurrentViewName\n    }));\n  };\n\n  ViewStateBase.defaultProps = {\n    defaultCurrentDate: new Date()\n  };\n  return ViewStateBase;\n}(PureComponent);\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\n\n\nvar ViewState = ViewStateBase;\n\nvar EditingStateBase = function (_super) {\n  __extends(EditingStateBase, _super);\n\n  function EditingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges\n    };\n    var stateHelper = createStateHelper(_this, {\n      editingAppointment: function () {\n        var onEditingAppointmentChange = _this.props.onEditingAppointmentChange;\n        return onEditingAppointmentChange;\n      },\n      addedAppointment: function () {\n        var onAddedAppointmentChange = _this.props.onAddedAppointmentChange;\n        return onAddedAppointmentChange;\n      },\n      appointmentChanges: function () {\n        var onAppointmentChangesChange = _this.props.onAppointmentChangesChange;\n        return onAppointmentChangesChange;\n      }\n    });\n    _this.startEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', startEditAppointment);\n    _this.stopEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', stopEditAppointment);\n    _this.changeAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', changeAppointment);\n    _this.cancelChangedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    _this.commitChangedAppointment = function (type) {\n      if (type === void 0) {\n        type = RECURRENCE_EDIT_SCOPE.CURRENT;\n      }\n\n      var _a = _this.state,\n          appointmentChanges = _a.appointmentChanges,\n          editingAppointment = _a.editingAppointment;\n      var _b = _this.props,\n          onCommitChanges = _b.onCommitChanges,\n          preCommitChanges = _b.preCommitChanges;\n      if (!editingAppointment) return;\n      var changes = !editingAppointment.rRule ? {\n        changed: changedAppointmentById(appointmentChanges, editingAppointment.id)\n      } : preCommitChanges(appointmentChanges, editingAppointment, type);\n      onCommitChanges(changes);\n\n      _this.cancelChangedAppointment();\n\n      _this.stopEditAppointment();\n    };\n\n    _this.addAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', addAppointment);\n    _this.changeAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', changeAppointment);\n    _this.cancelAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n\n    _this.commitAddedAppointment = function () {\n      var onCommitChanges = _this.props.onCommitChanges;\n      var stateAddedAppointment = _this.state.addedAppointment;\n      onCommitChanges({\n        added: stateAddedAppointment\n      });\n    };\n\n    _this.commitDeletedAppointment = function (_a) {\n      var deletedAppointmentData = _a.deletedAppointmentData,\n          _b = _a.type,\n          type = _b === void 0 ? 'current' : _b;\n      var _c = _this.props,\n          onCommitChanges = _c.onCommitChanges,\n          preCommitChanges = _c.preCommitChanges;\n      var changes = deletedAppointmentData.rRule ? preCommitChanges(null, deletedAppointmentData, type) : {\n        deleted: deletedAppointmentData.id\n      };\n      onCommitChanges(changes);\n    };\n\n    return _this;\n  }\n\n  EditingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.editingAppointment,\n        editingAppointment = _a === void 0 ? prevState.editingAppointment : _a,\n        _b = nextProps.appointmentChanges,\n        appointmentChanges = _b === void 0 ? prevState.appointmentChanges : _b,\n        _c = nextProps.addedAppointment,\n        addedAppointment = _c === void 0 ? prevState.addedAppointment : _c;\n    return {\n      editingAppointment: editingAppointment,\n      appointmentChanges: appointmentChanges,\n      addedAppointment: addedAppointment\n    };\n  };\n\n  EditingStateBase.prototype.render = function () {\n    var _a = this.state,\n        addedAppointment = _a.addedAppointment,\n        editingAppointment = _a.editingAppointment,\n        appointmentChanges = _a.appointmentChanges;\n    return createElement(Plugin, {\n      name: \"EditingState\"\n    }, createElement(Getter, {\n      name: \"editingAppointment\",\n      value: editingAppointment\n    }), createElement(Action, {\n      name: \"startEditAppointment\",\n      action: this.startEditAppointment\n    }), createElement(Action, {\n      name: \"stopEditAppointment\",\n      action: this.stopEditAppointment\n    }), createElement(Getter, {\n      name: \"appointmentChanges\",\n      value: appointmentChanges\n    }), createElement(Action, {\n      name: \"changeAppointment\",\n      action: this.changeAppointment\n    }), createElement(Action, {\n      name: \"cancelChangedAppointment\",\n      action: this.cancelChangedAppointment\n    }), createElement(Action, {\n      name: \"commitChangedAppointment\",\n      action: this.commitChangedAppointment\n    }), createElement(Getter, {\n      name: \"addedAppointment\",\n      value: addedAppointment\n    }), createElement(Action, {\n      name: \"addAppointment\",\n      action: this.addAppointment\n    }), createElement(Action, {\n      name: \"changeAddedAppointment\",\n      action: this.changeAddedAppointment\n    }), createElement(Action, {\n      name: \"cancelAddedAppointment\",\n      action: this.cancelAddedAppointment\n    }), createElement(Action, {\n      name: \"commitAddedAppointment\",\n      action: this.commitAddedAppointment\n    }), createElement(Action, {\n      name: \"commitDeletedAppointment\",\n      action: this.commitDeletedAppointment\n    }));\n  };\n\n  EditingStateBase.defaultProps = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChanges\n  };\n  return EditingStateBase;\n}(PureComponent);\n/** A plugin that manages the scheduler appointment editing state. */\n\n\nvar EditingState = EditingStateBase;\nvar pluginDependencies$4 = [{\n  name: 'Appointments'\n}, {\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON\n};\n\nvar AppointmentTooltipBase = function (_super) {\n  __extends(AppointmentTooltipBase, _super);\n\n  function AppointmentTooltipBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentMeta: function () {\n        var onAppointmentMetaChange = _this.props.onAppointmentMetaChange;\n        return onAppointmentMetaChange;\n      }\n    });\n\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentMeta = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n\n    _this.onAppointmentClick = function (_a) {\n      var target = _a.target,\n          data = _a.data;\n\n      _this.setAppointmentMeta({\n        target: target,\n        data: data\n      });\n\n      _this.toggleVisibility();\n    };\n\n    return _this;\n  }\n\n  AppointmentTooltipBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n        visible = _a === void 0 ? prevState.visible : _a,\n        _b = nextProps.appointmentMeta,\n        appointmentMeta = _b === void 0 ? prevState.appointmentMeta : _b;\n    return {\n      appointmentMeta: appointmentMeta,\n      visible: visible\n    };\n  };\n\n  AppointmentTooltipBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        showOpenButton = _a.showOpenButton,\n        showDeleteButton = _a.showDeleteButton,\n        showCloseButton = _a.showCloseButton,\n        Layout = _a.layoutComponent,\n        headerComponent = _a.headerComponent,\n        contentComponent = _a.contentComponent,\n        commandButtonComponent = _a.commandButtonComponent,\n        recurringIconComponent = _a.recurringIconComponent;\n    var _b = this.state,\n        visible = _b.visible,\n        appointmentMeta = _b.appointmentMeta;\n    return createElement(Plugin, {\n      name: \"AppointmentTooltip\",\n      dependencies: pluginDependencies$4\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var formatDate = _a.formatDate,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var finishDeleteAppointment = _b.finishDeleteAppointment,\n          openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n\n      var onDeleteButtonClick = function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n            appointmentData: appointmentMeta.data\n          });\n        } else {\n          _this.toggleVisibility();\n\n          finishDeleteAppointment(appointmentMeta.data);\n        }\n      };\n\n      return createElement(TemplatePlaceholder, {\n        name: \"tooltip\",\n        params: __assign(__assign({\n          commandButtonComponent: commandButtonComponent,\n          recurringIconComponent: recurringIconComponent,\n          showOpenButton: showOpenButton,\n          showDeleteButton: showDeleteButton,\n          showCloseButton: showCloseButton,\n          headerComponent: headerComponent,\n          contentComponent: contentComponent,\n          appointmentMeta: appointmentMeta,\n          appointmentResources: appointmentMeta ? getAppointmentResources(appointmentMeta.data, resources, plainResources) : [],\n          visible: visible,\n          onHide: _this.toggleVisibility,\n          commandButtonIds: commandButtonIds\n        }, finishDeleteAppointment && {\n          onDeleteButtonClick: onDeleteButtonClick\n        }), {\n          formatDate: formatDate\n        })\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(Layout, __assign({}, params));\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplatePlaceholder, {\n        params: __assign(__assign({}, params), {\n          onClick: function (_a) {\n            var target = _a.target,\n                data = _a.data;\n            return _this.onAppointmentClick({\n              target: target,\n              data: data\n            });\n          }\n        })\n      });\n    }));\n  };\n\n  AppointmentTooltipBase.defaultProps = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false\n  };\n  AppointmentTooltipBase.components = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  return AppointmentTooltipBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\n\n\nvar AppointmentTooltip = AppointmentTooltipBase;\n\nvar addDoubleClickToCell = function (title, startDate, endDate, groupingInfo, resources, allDay, openFormHandler, addAppointment, params) {\n  var resourceFields = !!groupingInfo ? groupingInfo.reduce(function (acc, currentGroup) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[currentGroup.fieldName] = currentGroup.id, _a));\n  }, {}) : {};\n  var validResourceFields = resources ? checkMultipleResourceFields(resourceFields, resources) : resourceFields;\n\n  var newAppointmentData = __assign({\n    title: title,\n    startDate: startDate,\n    endDate: endDate,\n    allDay: allDay\n  }, validResourceFields);\n\n  return createElement(TemplatePlaceholder, {\n    params: __assign(__assign({}, params), {\n      onDoubleClick: function () {\n        openFormHandler(newAppointmentData);\n        callActionIfExists(addAppointment, {\n          appointmentData: newAppointmentData\n        });\n      }\n    })\n  });\n};\n\nvar defaultMessages$1 = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every'\n};\n\nvar CommandLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"commandLayout\"\n  });\n};\n\nvar BasicLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"basicLayout\"\n  });\n};\n\nvar RecurrenceLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"recurrenceLayout\"\n  });\n};\n\nvar pluginDependencies$5 = [{\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}, {\n  name: 'AppointmentTooltip',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\n\nvar prepareChanges = function (appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources) {\n  var isNew = !editingAppointment;\n\n  var changedAppointment = __assign(__assign(__assign({}, appointmentData), appointmentChanges), isNew && addedAppointment);\n\n  var appointmentResources = getAppointmentResources(changedAppointment, resources, plainResources);\n  var isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return {\n    changedAppointment: changedAppointment,\n    appointmentResources: appointmentResources,\n    isNew: isNew,\n    isFormEdited: isFormEdited\n  };\n};\n\nvar isFormFullSize = function (isFormVisible, changedAppointmentRRule, previousAppointmentRRule) {\n  return !!changedAppointmentRRule || !isFormVisible && !!previousAppointmentRRule;\n};\n\nvar AppointmentFormBase = function (_super) {\n  __extends(AppointmentFormBase, _super);\n\n  function AppointmentFormBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.container = createRef();\n    _this.commitChanges = memoize(function (finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment) {\n      return function () {\n        _this.toggleVisibility();\n\n        if (isNew) {\n          callActionIfExists(commitAddedAppointment, changedAppointment);\n        } else if (finishCommitAppointment) {\n          finishCommitAppointment();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.cancelChanges = memoize(function (openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges, changedAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n      return function () {\n        if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n          openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n        } else {\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentChanges);\n          } else {\n            callActionIfExists(stopEditAppointment, appointmentChanges);\n            callActionIfExists(cancelChangedAppointment, appointmentChanges);\n          }\n\n          _this.toggleVisibility();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.deleteAppointment = memoize(function (finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew) {\n      return function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n            appointmentData: changedAppointment\n          });\n        } else {\n          callActionIfExists(finishDeleteAppointment, appointmentData);\n\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentData);\n          } else {\n            callActionIfExists(cancelChangedAppointment, appointmentData);\n            callActionIfExists(stopEditAppointment, appointmentData);\n          }\n\n          _this.toggleVisibility();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.changeAppointmentField = memoize(function (isNew, changeAddedAppointment, changeAppointment) {\n      return function (change) {\n        if (change && change.rRule) {\n          _this.setState({\n            previousAppointment: __assign(__assign({}, _this.state.previousAppointment), {\n              rRule: change.rRule\n            })\n          });\n        }\n\n        if (isNew) {\n          callActionIfExists(changeAddedAppointment, {\n            change: change\n          });\n        } else {\n          callActionIfExists(changeAppointment, {\n            change: change\n          });\n        }\n      };\n    });\n    _this.getMessage = memoize(function (menuMessages, messages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    _this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {}\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentData: function () {\n        var onAppointmentDataChange = _this.props.onAppointmentDataChange;\n        return onAppointmentDataChange;\n      }\n    });\n\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentData = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    _this.openFormHandler = function (appointmentData) {\n      _this.setAppointmentData({\n        appointmentData: appointmentData\n      });\n\n      _this.toggleVisibility();\n    };\n\n    return _this;\n  }\n\n  AppointmentFormBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n        visible = _a === void 0 ? prevState.visible : _a,\n        _b = nextProps.appointmentData,\n        appointmentData = _b === void 0 ? prevState.appointmentData : _b;\n    return {\n      appointmentData: appointmentData,\n      visible: visible\n    };\n  };\n\n  AppointmentFormBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        Container = _a.containerComponent,\n        Overlay = _a.overlayComponent,\n        Layout = _a.layoutComponent,\n        CommandLayout = _a.commandLayoutComponent,\n        BasicLayout = _a.basicLayoutComponent,\n        RecurrenceLayout = _a.recurrenceLayoutComponent,\n        commandButtonComponent = _a.commandButtonComponent,\n        textEditorComponent = _a.textEditorComponent,\n        labelComponent = _a.labelComponent,\n        dateEditorComponent = _a.dateEditorComponent,\n        booleanEditorComponent = _a.booleanEditorComponent,\n        selectComponent = _a.selectComponent,\n        radioGroupComponent = _a.radioGroupComponent,\n        weeklyRecurrenceSelectorComponent = _a.weeklyRecurrenceSelectorComponent,\n        resourceEditorComponent = _a.resourceEditorComponent,\n        readOnly = _a.readOnly,\n        messages = _a.messages;\n    var _b = this.state,\n        visible = _b.visible,\n        appointmentData = _b.appointmentData,\n        previousAppointment = _b.previousAppointment;\n    var getMessage = this.getMessage(defaultMessages$1, messages);\n    return createElement(Plugin, {\n      name: \"AppointmentForm\",\n      dependencies: pluginDependencies$5\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n          stopEditAppointment = _b.stopEditAppointment,\n          cancelAddedAppointment = _b.cancelAddedAppointment,\n          cancelChangedAppointment = _b.cancelChangedAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          changedAppointment = _c.changedAppointment,\n          isNew = _c.isNew;\n\n      var fullSize = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n\n      var onHideAction = function () {\n        return visible && _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment)();\n      };\n\n      return createElement(Fragment, null, createElement(Container, {\n        ref: _this.container\n      }), createElement(Overlay, {\n        visible: visible,\n        onHide: onHideAction,\n        fullSize: fullSize,\n        target: _this.container\n      }, createElement(Layout, {\n        basicLayoutComponent: BasicLayoutPlaceholder,\n        commandLayoutComponent: CommandLayoutPlaceholder,\n        recurrenceLayoutComponent: RecurrenceLayoutPlaceholder,\n        isRecurrence: fullSize\n      })), createElement(TemplatePlaceholder, null));\n    })), createElement(Template, {\n      name: \"commandLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var commitAddedAppointment = _b.commitAddedAppointment,\n          finishCommitAppointment = _b.finishCommitAppointment,\n          finishDeleteAppointment = _b.finishDeleteAppointment,\n          stopEditAppointment = _b.stopEditAppointment,\n          cancelAddedAppointment = _b.cancelAddedAppointment,\n          cancelChangedAppointment = _b.cancelChangedAppointment,\n          openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n          openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment,\n          isFormEdited = _c.isFormEdited;\n\n      var isRecurrence = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      return createElement(CommandLayout, {\n        commandButtonComponent: commandButtonComponent,\n        onCommitButtonClick: _this.commitChanges(finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment),\n        onCancelButtonClick: _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment),\n        onDeleteButtonClick: _this.deleteAppointment(finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        fullSize: isRecurrence,\n        disableSaveButton: !isFormEdited,\n        hideDeleteButton: isNew\n      });\n    })), createElement(Template, {\n      name: \"basicLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          locale = _a.locale,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var changeAppointment = _b.changeAppointment,\n          changeAddedAppointment = _b.changeAddedAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment,\n          appointmentResources = _c.appointmentResources;\n\n      return createElement(BasicLayout, {\n        locale: locale,\n        appointmentData: visible ? changedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        booleanEditorComponent: booleanEditorComponent,\n        selectComponent: selectComponent,\n        labelComponent: labelComponent,\n        resourceEditorComponent: resourceEditorComponent,\n        fullSize: !changedAppointment.rRule,\n        resources: resources,\n        appointmentResources: appointmentResources\n      });\n    })), createElement(Template, {\n      name: \"recurrenceLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          formatDate = _a.formatDate,\n          locale = _a.locale,\n          firstDayOfWeek = _a.firstDayOfWeek;\n      var changeAddedAppointment = _b.changeAddedAppointment,\n          changeAppointment = _b.changeAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, undefined, undefined),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment;\n\n      var isRecurrenceLayoutVisible = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var correctedAppointment = !changedAppointment.rRule ? __assign(__assign({}, changedAppointment), {\n        rRule: previousAppointment.rRule\n      }) : changedAppointment;\n      return createElement(RecurrenceLayout, {\n        locale: locale,\n        appointmentData: visible ? correctedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        formatDate: formatDate,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        radioGroupComponent: radioGroupComponent,\n        weeklyRecurrenceSelectorComponent: weeklyRecurrenceSelectorComponent,\n        labelComponent: labelComponent,\n        selectComponent: selectComponent,\n        visible: isRecurrenceLayoutVisible,\n        firstDayOfWeek: firstDayOfWeek\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onOpenButtonClick: function () {\n              _this.openFormHandler(params.appointmentMeta.data);\n\n              callActionIfExists(startEditAppointment, params.appointmentMeta.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onDoubleClick: function () {\n              _this.openFormHandler(params.data);\n\n              callActionIfExists(startEditAppointment, params.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, isAllDayCell(params.startDate, params.endDate), _this.openFormHandler, addAppointment, params);\n      });\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, true, _this.openFormHandler, addAppointment, params);\n      });\n    }));\n  };\n\n  AppointmentFormBase.defaultProps = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: function () {\n      return undefined;\n    },\n    onAppointmentDataChange: function () {\n      return undefined;\n    }\n  };\n  AppointmentFormBase.components = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container'\n  };\n  return AppointmentFormBase;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\n\n\nvar AppointmentForm = AppointmentFormBase;\n\nvar renderAppointmentItems = function (items, Wrapper, draftData) {\n  return items.length > 0 ? createElement(Wrapper, null, items.map(function (draftAppointment, index) {\n    return createElement(TemplatePlaceholder, {\n      name: \"draftAppointment\",\n      key: index.toString(),\n      params: {\n        data: draftData,\n        draftAppointment: draftAppointment\n      }\n    });\n  })) : null;\n};\n\nvar pluginDependencies$6 = [{\n  name: 'EditingState'\n}, {\n  name: 'Appointments'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'AllDayPanel',\n  optional: true\n}];\n\nvar DragDropProviderBase = function (_super) {\n  __extends(DragDropProviderBase, _super);\n\n  function DragDropProviderBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeTableDraftAppointments = [];\n    _this.allDayDraftAppointments = [];\n    _this.offsetTimeTop = null;\n    _this.appointmentStartTime = null;\n    _this.appointmentEndTime = null;\n    _this.appointmentGroupingInfo = {};\n    _this.state = {\n      startTime: null,\n      endTime: null,\n      appointmentGroupingInfo: null,\n      payload: null,\n      isOutside: false,\n      allowDrag: function () {\n        return true;\n      },\n      allowResize: function () {\n        return true;\n      },\n      appointmentContentTemplateKey: 0,\n      appointmentTopTemplateKey: 0,\n      appointmentBottomTemplateKey: 0\n    };\n\n    _this.handleDrop = function (_a) {\n      var finishCommitAppointment = _a.finishCommitAppointment;\n      return function () {\n        finishCommitAppointment();\n\n        _this.resetCache();\n      };\n    };\n\n    _this.handleLeave = function () {\n      _this.setState({\n        isOutside: true\n      });\n    };\n\n    return _this;\n  }\n\n  DragDropProviderBase.getDerivedStateFromProps = function (props, state) {\n    var isAllowDragSame = props.allowDrag === state.allowDrag;\n    var isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return __assign(__assign({}, state), {\n      appointmentContentTemplateKey: isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey: isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey: isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize\n    });\n  };\n\n  DragDropProviderBase.prototype.onPayloadChange = function (actions) {\n    var _this = this;\n\n    return function (args) {\n      return _this.handlePayloadChange(args, actions);\n    };\n  };\n\n  DragDropProviderBase.prototype.calculateNextBoundaries = function (getters, actions, scrollSpeed) {\n    var _this = this;\n\n    return function (args) {\n      return _this.calculateBoundaries(args, getters, actions, scrollSpeed);\n    };\n  };\n\n  DragDropProviderBase.prototype.resetCache = function () {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false\n    });\n  };\n\n  DragDropProviderBase.prototype.applyChanges = function (startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: __assign(__assign({\n        startDate: startTime,\n        endDate: endTime\n      }, payload.allDay && {\n        allDay: undefined\n      }), this.appointmentGroupingInfo)\n    });\n    this.setState({\n      startTime: startTime,\n      endTime: endTime,\n      payload: payload,\n      isOutside: false,\n      appointmentGroupingInfo: appointmentGroupingInfo\n    });\n  };\n\n  DragDropProviderBase.prototype.handlePayloadChange = function (_a, _b) {\n    var payload = _a.payload;\n    var finishCommitAppointment = _b.finishCommitAppointment;\n    var isOutside = this.state.isOutside;\n    if (payload || !isOutside) return;\n    finishCommitAppointment();\n    this.resetCache();\n  };\n\n  DragDropProviderBase.prototype.calculateBoundaries = function (_a, _b, _c, scrollSpeed) {\n    var payload = _a.payload,\n        clientOffset = _a.clientOffset;\n    var viewCellsData = _b.viewCellsData,\n        allDayCellsData = _b.allDayCellsData,\n        startViewDate = _b.startViewDate,\n        endViewDate = _b.endViewDate,\n        excludedDays = _b.excludedDays,\n        currentView = _b.currentView,\n        timeTableElementsMeta = _b.timeTableElementsMeta,\n        allDayElementsMeta = _b.allDayElementsMeta,\n        scrollingStrategy = _b.scrollingStrategy,\n        grouping = _b.grouping,\n        resources = _b.resources,\n        groups = _b.groups,\n        getGroupOrientation = _b.groupOrientation,\n        groupByDate = _b.groupByDate;\n    var changeAppointment = _c.changeAppointment,\n        startEditAppointment = _c.startEditAppointment;\n\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    var tableCellElementsMeta = timeTableElementsMeta;\n    var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION; // AllDayPanel doesn't always exist\n\n    var allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects ? allDayElementsMeta : {\n      getCellRects: []\n    };\n    var timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    var allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n    var targetData = cellData(timeTableIndex, allDayIndex, viewCellsData, allDayCellsData);\n    var targetType = cellType(targetData);\n    var insidePart = calculateInsidePart(clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex);\n    var cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    var _d = calculateAppointmentTimeBoundaries(payload, targetData, targetType, cellDurationMinutes, insidePart, this.offsetTimeTop),\n        appointmentStartTime = _d.appointmentStartTime,\n        appointmentEndTime = _d.appointmentEndTime,\n        offsetTimeTop = _d.offsetTimeTop;\n\n    var appointmentGroups = calculateAppointmentGroups(targetData.groupingInfo, resources, payload);\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop;\n    var _e = this.state,\n        startTime = _e.startTime,\n        endTime = _e.endTime,\n        appointmentGroupingInfo = _e.appointmentGroupingInfo;\n\n    if (!appointmentDragged(this.appointmentStartTime, startTime, this.appointmentEndTime, endTime, this.appointmentGroupingInfo, appointmentGroupingInfo)) {\n      return;\n    }\n\n    var draftAppointments = [{\n      dataItem: __assign(__assign(__assign({}, payload), {\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime\n      }), this.appointmentGroupingInfo),\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime\n    }];\n\n    var _f = calculateDraftAppointments(allDayIndex, draftAppointments, startViewDate, endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta, targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups, groupOrientation, groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name)),\n        allDayDraftAppointments = _f.allDayDraftAppointments,\n        timeTableDraftAppointments = _f.timeTableDraftAppointments;\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n    this.applyChanges(this.appointmentStartTime, this.appointmentEndTime, payload, startEditAppointment, changeAppointment, this.appointmentGroupingInfo);\n  };\n\n  DragDropProviderBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        payload = _a.payload,\n        appointmentContentTemplateKey = _a.appointmentContentTemplateKey,\n        appointmentBottomTemplateKey = _a.appointmentBottomTemplateKey,\n        appointmentTopTemplateKey = _a.appointmentTopTemplateKey;\n    var _b = this.props,\n        Container = _b.containerComponent,\n        DraftAppointment = _b.draftAppointmentComponent,\n        SourceAppointment = _b.sourceAppointmentComponent,\n        Resize = _b.resizeComponent,\n        allowDrag = _b.allowDrag,\n        allowResize = _b.allowResize,\n        scrollSpeed = _b.scrollSpeed;\n\n    var draftData = __assign(__assign({}, payload), {\n      startDate: this.appointmentStartTime,\n      endDate: this.appointmentEndTime\n    });\n\n    return createElement(Plugin, {\n      name: \"DragDropProvider\",\n      dependencies: pluginDependencies$6\n    }, createElement(Template, {\n      name: \"body\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var viewCellsData = _a.viewCellsData,\n          allDayCellsData = _a.allDayCellsData,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          excludedDays = _a.excludedDays,\n          timeTableElementsMeta = _a.timeTableElementsMeta,\n          allDayElementsMeta = _a.allDayElementsMeta,\n          scrollingStrategy = _a.scrollingStrategy,\n          grouping = _a.grouping,\n          resources = _a.resources,\n          groups = _a.groups,\n          currentView = _a.currentView,\n          groupByDate = _a.groupByDate,\n          groupOrientation = _a.groupOrientation;\n      var changeAppointment = _b.changeAppointment,\n          startEditAppointment = _b.startEditAppointment,\n          finishCommitAppointment = _b.finishCommitAppointment;\n\n      var calculateBoundariesByMove = _this.calculateNextBoundaries({\n        viewCellsData: viewCellsData,\n        allDayCellsData: allDayCellsData,\n        currentView: currentView,\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        excludedDays: excludedDays,\n        timeTableElementsMeta: timeTableElementsMeta,\n        allDayElementsMeta: allDayElementsMeta,\n        scrollingStrategy: scrollingStrategy,\n        resources: resources,\n        grouping: grouping,\n        groups: groups,\n        groupByDate: groupByDate,\n        groupOrientation: groupOrientation\n      }, {\n        changeAppointment: changeAppointment,\n        startEditAppointment: startEditAppointment\n      }, scrollSpeed);\n\n      return createElement(DragDropProvider$1, {\n        onChange: _this.onPayloadChange({\n          finishCommitAppointment: finishCommitAppointment\n        })\n      }, createElement(DropTarget, {\n        onOver: calculateBoundariesByMove,\n        onEnter: calculateBoundariesByMove,\n        onDrop: _this.handleDrop({\n          finishCommitAppointment: finishCommitAppointment\n        }),\n        onLeave: _this.handleLeave\n      }, createElement(TemplatePlaceholder, null)));\n    })), createElement(Template, {\n      name: \"appointmentContent\",\n      predicate: function (_a) {\n        var data = _a.data;\n        return allowDrag(data);\n      },\n      key: appointmentContentTemplateKey\n    }, function (_a) {\n      var styles = _a.styles,\n          params = __rest(_a, [\"styles\"]);\n\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, params.data), {\n          type: params.type\n        })\n      }, payload && params.data.id === payload.id ? createElement(SourceAppointment, __assign({}, params)) : createElement(TemplatePlaceholder, {\n        params: __assign(__assign({}, params), {\n          draggable: true\n        })\n      }));\n    }), createElement(Template, {\n      name: \"appointmentTop\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentTopTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n          type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_TOP,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_START,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"appointmentBottom\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentBottomTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n          type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_BOTTOM,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) !== VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), renderAppointmentItems(_this.timeTableDraftAppointments, Container, draftData), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"draftAppointment\"\n    }, function (_a) {\n      var data = _a.data,\n          draftAppointment = _a.draftAppointment,\n          restParams = __rest(_a, [\"data\", \"draftAppointment\"]);\n\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n            resources = _a.resources,\n            plainResources = _a.plainResources;\n\n        var dataItem = draftAppointment.dataItem,\n            type = draftAppointment.type,\n            fromPrev = draftAppointment.fromPrev,\n            toNext = draftAppointment.toNext,\n            durationType = draftAppointment.durationType,\n            geometry = __rest(draftAppointment, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\"]);\n\n        return createElement(DraftAppointment, __assign({\n          data: data,\n          resources: getAppointmentResources(dataItem, resources, plainResources),\n          durationType: durationType,\n          style: getAppointmentStyle(geometry),\n          type: type,\n          fromPrev: fromPrev,\n          toNext: toNext,\n          formatDate: formatDate\n        }, restParams));\n      });\n    }));\n  };\n\n  DragDropProviderBase.components = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize'\n  };\n  DragDropProviderBase.defaultProps = {\n    allowDrag: function () {\n      return true;\n    },\n    allowResize: function () {\n      return true;\n    },\n    scrollSpeed: SCROLL_SPEED_PX\n  };\n  return DragDropProviderBase;\n}(PureComponent);\n/** A plugin that enables users to edit appointments via drag-and-drop. */\n\n\nvar DragDropProvider = DragDropProviderBase;\nvar pluginDependencies$7 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar defaultMessages$2 = {\n  today: 'Today'\n};\n\nvar TodayButtonBase = function (_super) {\n  __extends(TodayButtonBase, _super);\n\n  function TodayButtonBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TodayButtonBase.prototype.render = function () {\n    var _a = this.props,\n        Button = _a.buttonComponent,\n        messages = _a.messages;\n    var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$2), messages));\n    return createElement(Plugin, {\n      name: \"TodayButton\",\n      dependencies: pluginDependencies$7\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var changeCurrentDate = _a.changeCurrentDate;\n\n      var setCurrentDate = function (nextDate) {\n        return changeCurrentDate({\n          nextDate: nextDate\n        });\n      };\n\n      return createElement(Button, {\n        getMessage: getMessage,\n        setCurrentDate: setCurrentDate\n      });\n    }), createElement(TemplatePlaceholder, null)));\n  };\n\n  TodayButtonBase.components = {\n    buttonComponent: 'Button'\n  };\n  return TodayButtonBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\n\n\nvar TodayButton = TodayButtonBase;\n\nvar _a;\n\nvar pluginDependencies$8 = [{\n  name: 'EditingState'\n}];\nvar defaultAvailableOperations = [{\n  value: RECURRENCE_EDIT_SCOPE.CURRENT\n}, {\n  value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING\n}, {\n  value: RECURRENCE_EDIT_SCOPE.ALL\n}];\nvar defaultMessages$3 = (_a = {}, _a[RECURRENCE_EDIT_SCOPE.CURRENT] = 'This appointment', _a[RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING] = 'This and following appointments', _a[RECURRENCE_EDIT_SCOPE.ALL] = 'All appointments', _a.menuEditingTitle = 'Edit recurring appointment', _a.menuDeletingTitle = 'Delete recurring appointment', _a.cancelButton = 'Cancel', _a.commitButton = 'OK', _a);\n\nvar EditRecurrenceMenuBase = function (_super) {\n  __extends(EditRecurrenceMenuBase, _super);\n\n  function EditRecurrenceMenuBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.modalContainer = createRef();\n    _this.state = {\n      isOpen: false,\n      deletedAppointmentData: null\n    };\n\n    _this.finishCommitAppointment = function (payload, _a, _b) {\n      var editingAppointment = _a.editingAppointment;\n      var commitChangedAppointment = _b.commitChangedAppointment;\n\n      if (editingAppointment && !editingAppointment.rRule) {\n        commitChangedAppointment();\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: null\n        });\n      }\n    };\n\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n\n      if (payload && !payload.rRule) {\n        commitDeletedAppointment({\n          deletedAppointmentData: payload\n        });\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: payload\n        });\n      }\n    };\n\n    _this.commit = memoize(function (editAction, deleteAction, payload) {\n      return function (type) {\n        if (payload) {\n          deleteAction({\n            deletedAppointmentData: payload,\n            type: type\n          });\n        } else {\n          editAction(type);\n        }\n\n        _this.closeMenu();\n      };\n    });\n\n    _this.closeMenu = function () {\n      _this.setState({\n        isOpen: false,\n        deletedAppointmentData: null\n      });\n    };\n\n    _this.cancelEditing = memoize(function (cancelAction, stopEditAction) {\n      return function () {\n        stopEditAction();\n        cancelAction();\n\n        _this.closeMenu();\n      };\n    });\n    _this.availableOperations = memoize(function (getMessage, menuAvailableOperations) {\n      return menuAvailableOperations.map(function (_a) {\n        var value = _a.value;\n        return {\n          value: value,\n          title: getMessage([value])\n        };\n      });\n    });\n    _this.getMessage = memoize(function (messages, menuMessages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    return _this;\n  }\n\n  EditRecurrenceMenuBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        isOpen = _a.isOpen,\n        deletedAppointmentData = _a.deletedAppointmentData;\n    var _b = this.props,\n        Layout = _b.layoutComponent,\n        Overlay = _b.overlayComponent,\n        Container = _b.containerComponent,\n        buttonComponent = _b.buttonComponent,\n        messages = _b.messages;\n    var getMessage = this.getMessage(messages, defaultMessages$3);\n    var availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n    return createElement(Plugin, {\n      name: \"EditRecurrenceMenu\",\n      dependencies: pluginDependencies$8\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplatePlaceholder, null), createElement(Container, {\n      ref: this.modalContainer\n    }), createElement(TemplatePlaceholder, {\n      name: \"overlay\"\n    })), createElement(Template, {\n      name: \"overlay\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment,\n          commitDeletedAppointment = _a.commitDeletedAppointment,\n          cancelChangedAppointment = _a.cancelChangedAppointment,\n          stopEditAppointment = _a.stopEditAppointment;\n\n      var commit = _this.commit(commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData);\n\n      var cancelEditing = _this.cancelEditing(cancelChangedAppointment, stopEditAppointment);\n\n      return createElement(Overlay, {\n        target: _this.modalContainer,\n        visible: isOpen,\n        onHide: _this.closeMenu\n      }, createElement(Layout, {\n        isDeleting: !!deletedAppointmentData,\n        buttonComponent: buttonComponent,\n        handleClose: cancelEditing,\n        commit: commit,\n        availableOperations: availableOperations,\n        getMessage: getMessage\n      }));\n    })));\n  };\n\n  EditRecurrenceMenuBase.components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container'\n  };\n  return EditRecurrenceMenuBase;\n}(PureComponent);\n/**\r\n * A plugin that renders the Scheduler's edit menu.\r\n * Should not be used with the `IntegratedEditing` plugin.\r\n */\n\n\nvar EditRecurrenceMenu = EditRecurrenceMenuBase;\nvar pluginDependencies$9 = [{\n  name: 'EditingState'\n}];\n\nvar IntegratedEditingBase = function (_super) {\n  __extends(IntegratedEditingBase, _super);\n\n  function IntegratedEditingBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.finishCommitAppointment = function (payload, getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment;\n      commitChangedAppointment();\n    };\n\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      commitDeletedAppointment({\n        deletedAppointmentData: payload\n      });\n    };\n\n    return _this;\n  }\n\n  IntegratedEditingBase.prototype.render = function () {\n    return createElement(Plugin, {\n      name: \"IntegratedEditing\",\n      dependencies: pluginDependencies$9\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }));\n  };\n\n  IntegratedEditingBase.defaultProps = {\n    totalCount: 0\n  };\n  return IntegratedEditingBase;\n}(PureComponent);\n/** A plugin that allows implementing a editing calculation logic. */\n\n\nvar IntegratedEditing = IntegratedEditingBase;\nvar pluginDependencies$a = [{\n  name: 'Appointments'\n}];\n\nvar addResourcesToTimeTableAppointments = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n      resources = _a.resources,\n      plainResources = _a.plainResources;\n  return timeTableAppointments && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\n};\n\nvar addResourcesToAllDayAppointments = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n      resources = _a.resources,\n      plainResources = _a.plainResources;\n  return allDayAppointments && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n};\n\nvar ResourcesBase = memo(function (_a) {\n  var data = _a.data,\n      mainResourceName = _a.mainResourceName,\n      palette = _a.palette;\n\n  var convertResources = function (_a) {\n    var resources = _a.resources;\n    return convertResourcesToPlain(resources);\n  };\n\n  return createElement(Plugin, {\n    name: \"Resources\",\n    dependencies: pluginDependencies$a\n  }, createElement(Getter, {\n    name: \"resources\",\n    value: validateResources(data, mainResourceName, palette)\n  }), createElement(Getter, {\n    name: \"plainResources\",\n    computed: convertResources\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: addResourcesToTimeTableAppointments\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: addResourcesToAllDayAppointments\n  }));\n});\n/** A plugin that manages schedule's resources. */\n\nvar Resources = ResourcesBase;\nvar defaultMessages$4 = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?'\n};\nvar pluginDependencies$b = [{\n  name: 'EditingState'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete'\n};\n\nvar ConfirmationDialogBase = function (_a) {\n  var messages = _a.messages,\n      Overlay = _a.overlayComponent,\n      Layout = _a.layoutComponent,\n      Container = _a.containerComponent,\n      buttonComponent = _a.buttonComponent,\n      ignoreDelete = _a.ignoreDelete,\n      ignoreCancel = _a.ignoreCancel;\n  var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$4), messages));\n  var modalContainer = useRef();\n\n  var _b = __read(useState(false), 2),\n      visible = _b[0],\n      setVisible = _b[1];\n\n  var _c = __read(useState(''), 2),\n      actionType = _c[0],\n      setActionType = _c[1];\n\n  var _d = __read(useState(''), 2),\n      hideActionName = _d[0],\n      setHideActionName = _d[1];\n\n  var _e = __read(useState({}), 2),\n      appointmentData = _e[0],\n      setAppointmentData = _e[1];\n\n  var toggleVisibility = useCallback(function () {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n  var confirmCancelChanges = useCallback(function (hideAction) {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n  var confirmDelete = useCallback(function (_a) {\n    var hideAction = _a.hideActionName,\n        changedAppointment = _a.appointmentData;\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n  var confirmAction = useCallback(function (isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n    return function () {\n      hideEditor();\n      toggleVisibility();\n\n      if (isNewAppointment) {\n        cancelAddedAppointment();\n      } else {\n        stopEditAppointment();\n        cancelChangedAppointment();\n      }\n\n      if (actionType === ACTION_TYPES.DELETE) {\n        finishDeleteAppointment(appointmentData);\n      }\n    };\n  }, [toggleVisibility, actionType, appointmentData]);\n  return createElement(Plugin, {\n    name: \"ConfirmationDialog\",\n    dependencies: pluginDependencies$b\n  }, !ignoreCancel && createElement(Action, {\n    name: \"openCancelConfirmationDialog\",\n    action: confirmCancelChanges\n  }), !ignoreDelete && createElement(Action, {\n    name: \"openDeleteConfirmationDialog\",\n    action: confirmDelete\n  }), createElement(Template, {\n    name: \"schedulerRoot\"\n  }, createElement(TemplatePlaceholder, null), createElement(Container, {\n    ref: modalContainer\n  }), createElement(TemplatePlaceholder, {\n    name: \"confirmationDialogOverlay\"\n  })), createElement(Template, {\n    name: \"confirmationDialogOverlay\"\n  }, createElement(TemplateConnector, null, function (_a, actions) {\n    var editingAppointment = _a.editingAppointment;\n    var handleConfirm = confirmAction(!editingAppointment, actions[hideActionName], actions.stopEditAppointment, actions.finishDeleteAppointment, actions.cancelAddedAppointment, actions.cancelChangedAppointment);\n    return createElement(Overlay, {\n      target: modalContainer,\n      visible: visible,\n      onHide: toggleVisibility\n    }, createElement(Layout, {\n      buttonComponent: buttonComponent,\n      handleCancel: toggleVisibility,\n      handleConfirm: handleConfirm,\n      getMessage: getMessage,\n      isDeleting: actionType === ACTION_TYPES.DELETE,\n      appointmentData: appointmentData\n    }));\n  })));\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button'\n};\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false\n}; // tslint:disable-next-line: max-line-length\n\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\n\nvar ConfirmationDialog = ConfirmationDialogBase;\n\nvar GroupingStateBase = function (_super) {\n  __extends(GroupingStateBase, _super);\n\n  function GroupingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups\n    };\n    _this.stateHelper = createStateHelper(_this, {\n      expandedGroups: function () {\n        var onExpandedGroupsChange = _this.props.onExpandedGroupsChange;\n        return onExpandedGroupsChange;\n      }\n    });\n    _this.toggleGroupExpanded = _this.stateHelper.applyReducer.bind(_this.stateHelper, toggleExpandedGroups);\n    return _this;\n  }\n\n  GroupingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.grouping,\n        grouping = _a === void 0 ? prevState.grouping : _a,\n        _b = nextProps.expandedGroups,\n        expandedGroups = _b === void 0 ? prevState.expandedGroups : _b;\n    return {\n      grouping: grouping,\n      expandedGroups: expandedGroups\n    };\n  };\n\n  GroupingStateBase.prototype.render = function () {\n    var _a = this.state,\n        grouping = _a.grouping,\n        expandedGroups = _a.expandedGroups;\n    var _b = this.props,\n        groupByDate = _b.groupByDate,\n        groupOrientation = _b.groupOrientation;\n    return createElement(Plugin, {\n      name: \"GroupingState\"\n    }, createElement(Getter, {\n      name: \"grouping\",\n      value: grouping\n    }), createElement(Getter, {\n      name: \"groupByDate\",\n      value: groupByDate\n    }), createElement(Getter, {\n      name: \"groupOrientation\",\n      value: groupOrientation\n    }), createElement(Getter, {\n      name: \"expandedGroups\",\n      value: expandedGroups\n    }), createElement(Action, {\n      name: \"toggleGroupExpanded\",\n      action: this.toggleGroupExpanded\n    }));\n  };\n\n  GroupingStateBase.defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: function () {\n      return false;\n    },\n    groupOrientation: function () {\n      return HORIZONTAL_GROUP_ORIENTATION;\n    }\n  };\n  return GroupingStateBase;\n}(PureComponent);\n/** A plugin that manages the grouping state. */\n\n\nvar GroupingState = GroupingStateBase;\nvar pluginDependencies$c = [{\n  name: 'GroupingState'\n}, {\n  name: 'IntegratedGrouping'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'ViewState',\n  optional: true\n}];\n\nvar GroupingPanelBase = function (_super) {\n  __extends(GroupingPanelBase, _super);\n\n  function GroupingPanelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GroupingPanelBase.prototype.render = function () {\n    var _a = this.props,\n        HorizontalLayout = _a.horizontalLayoutComponent,\n        VerticalLayout = _a.verticalLayoutComponent,\n        rowComponent = _a.rowComponent,\n        cellComponent = _a.cellComponent;\n    return createElement(Plugin, {\n      name: \"GroupingPanel\",\n      dependencies: pluginDependencies$c\n    }, createElement(Template, {\n      name: \"groupingPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var viewCellsData = _a.viewCellsData,\n          currentView = _a.currentView,\n          scrollingStrategy = _a.scrollingStrategy,\n          allDayPanelExists = _a.allDayPanelExists,\n          groupByDate = _a.groupByDate,\n          getGroupOrientation = _a.groupOrientation,\n          groups = _a.groups;\n      var groupOrientation = getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name);\n      return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? createElement(HorizontalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        colSpan: viewCellsData[0].length,\n        cellStyle: {\n          left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth : (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH ? HORIZONTAL_VIEW_LEFT_OFFSET : VERTICAL_VIEW_LEFT_OFFSET\n        },\n        showHeaderForEveryDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView && currentView.name)\n      }) : createElement(VerticalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        rowSpan: viewCellsData.length,\n        viewType: currentView === null || currentView === void 0 ? void 0 : currentView.type,\n        cellTextTopOffset: scrollingStrategy === null || scrollingStrategy === void 0 ? void 0 : scrollingStrategy.fixedTopHeight,\n        alignWithAllDayRow: allDayPanelExists\n      });\n    })));\n  };\n\n  GroupingPanelBase.components = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell'\n  };\n  return GroupingPanelBase;\n}(PureComponent);\n/** A plugin that renders the grouping panel used to display group names. */\n\n\nvar GroupingPanel = GroupingPanelBase;\nvar pluginDependencies$d = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'DragDropProvider',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}];\n\nvar CurrentTimeIndicatorBase = function (_a) {\n  var indicatorComponent = _a.indicatorComponent,\n      shadePreviousAppointments = _a.shadePreviousAppointments,\n      shadePreviousCells = _a.shadePreviousCells,\n      updateInterval = _a.updateInterval;\n\n  var _b = __read(useState(Date.now), 2),\n      currentTime = _b[0],\n      setCurrentTime = _b[1];\n\n  useEffect(function () {\n    var tick = function () {\n      return setCurrentTime(Date.now());\n    };\n\n    var intervalId = updateInterval ? window.setInterval(tick, updateInterval) : undefined;\n    return function () {\n      return window.clearInterval(intervalId);\n    };\n  }, [updateInterval]);\n  return createElement(Plugin, {\n    name: \"CurrentTimeIndicator\",\n    dependencies: pluginDependencies$d\n  }, createElement(Template, {\n    name: \"cell\",\n    predicate: function (_a) {\n      var otherMonth = _a.otherMonth;\n      return !isMonthCell(otherMonth);\n    }\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n        currentTimeIndicatorComponent: indicatorComponent\n      })\n    });\n  }), createElement(Template, {\n    name: \"cell\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isCellShaded(params, currentTime, shadePreviousCells)\n      })\n    });\n  }), createElement(Template, {\n    name: \"appointmentContent\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }), createElement(Template, {\n    name: \"draftAppointment\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }));\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false\n};\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator'\n}; // tslint:disable-next-line: max-line-length\n\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\n\nvar CurrentTimeIndicator = CurrentTimeIndicatorBase;\nvar pluginDependencies$e = [{\n  name: 'Resources'\n}, {\n  name: 'GroupingState'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\n\nvar getViewCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      groupOrientation = _a.groupOrientation;\n  return expandViewCellsDataWithGroups(viewCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\n\nvar getAllDayCellsDataComputed = function (_a) {\n  var allDayCellsData = _a.allDayCellsData,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      groupOrientation = _a.groupOrientation;\n  return allDayCellsData && expandViewCellsDataWithGroups(allDayCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\n\nvar getGroupsComputed = function (_a) {\n  var resourcesToGroupBy = _a.resourcesToGroupBy;\n  return getGroupsFromResources(resourcesToGroupBy);\n};\n\nvar getResourcesToGroupByComputed = function (_a) {\n  var resources = _a.resources,\n      grouping = _a.grouping;\n  return sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n};\n\nvar getGroupingComputed = function (_a) {\n  var grouping = _a.grouping,\n      resources = _a.resources;\n  return updateGroupingWithMainResource(grouping, resources);\n};\n\nvar getTimeTableAppointmentsComputed = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n      grouping = _a.grouping,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groups = _a.groups,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      excludedDays = _a.excludedDays;\n  return timeTableAppointments && expandGroups(timeTableAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name) && (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH);\n};\n\nvar getAllDayAppointmentsComputed = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n      grouping = _a.grouping,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groups = _a.groups,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      excludedDays = _a.excludedDays;\n  return allDayAppointments && expandGroups(allDayAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name));\n};\n\nvar getGroupByDateComputed = function (_a) {\n  var currentView = _a.currentView,\n      groupByDate = _a.groupByDate,\n      groupOrientation = _a.groupOrientation;\n  return groupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) === VERTICAL_GROUP_ORIENTATION ? function () {\n    return false;\n  } : groupByDate;\n};\n\nvar getTimeTableElementsMetaComputed = function (_a) {\n  var timeTableElementsMeta = _a.timeTableElementsMeta,\n      groupOrientation = _a.groupOrientation,\n      groups = _a.groups,\n      allDayPanelExists = _a.allDayPanelExists,\n      viewCellsData = _a.viewCellsData,\n      currentView = _a.currentView;\n  return updateTimeTableCellElementsMeta(timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\n\nvar getAllDayElementsMetaComputed = function (_a) {\n  var allDayElementsMeta = _a.allDayElementsMeta,\n      timeTableElementsMeta = _a.timeTableElementsMeta,\n      groupOrientation = _a.groupOrientation,\n      groups = _a.groups,\n      allDayPanelExists = _a.allDayPanelExists,\n      viewCellsData = _a.viewCellsData,\n      currentView = _a.currentView;\n  return updateAllDayCellElementsMeta(allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\n\nvar getTimeCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n      timeCellsData = _a.timeCellsData,\n      currentView = _a.currentView,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupOrientation = _a.groupOrientation;\n  return timeCellsData && updateTimeCellsData(viewCellsData, timeCellsData, groups, resourcesToGroupBy, groupOrientation(currentView.name));\n};\n\nvar IntegratedGroupingBase = memo(function () {\n  return createElement(Plugin, {\n    name: \"IntegratedGrouping\",\n    dependencies: pluginDependencies$e\n  }, createElement(Getter, {\n    name: \"groupByDate\",\n    computed: getGroupByDateComputed\n  }), createElement(Getter, {\n    name: \"grouping\",\n    computed: getGroupingComputed\n  }), createElement(Getter, {\n    name: \"resourcesToGroupBy\",\n    computed: getResourcesToGroupByComputed\n  }), createElement(Getter, {\n    name: \"groups\",\n    computed: getGroupsComputed\n  }), createElement(Getter, {\n    name: \"viewCellsData\",\n    computed: getViewCellsDataComputed\n  }), createElement(Getter, {\n    name: \"allDayCellsData\",\n    computed: getAllDayCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeCellsData\",\n    computed: getTimeCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: getTimeTableAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: getAllDayAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayElementsMeta\",\n    computed: getAllDayElementsMetaComputed\n  }), createElement(Getter, {\n    name: \"timeTableElementsMeta\",\n    computed: getTimeTableElementsMetaComputed\n  }));\n});\n/** A plugin that implements grouping. */\n\nvar IntegratedGrouping = IntegratedGroupingBase;\nexport { AllDayPanel, AppointmentForm, AppointmentTooltip, Appointments, ConfirmationDialog, CurrentTimeIndicator, DateNavigator, DayView, DragDropProvider, EditRecurrenceMenu, EditingState, GroupingPanel, GroupingState, IntegratedEditing, IntegratedGrouping, MonthView, Resources, Scheduler, TodayButton, Toolbar, ViewState, ViewSwitcher, WeekView };","map":{"version":3,"sources":["../src/plugins/scheduler-core.tsx","../src/scheduler.tsx","../src/plugins/basic-view.tsx","../src/plugins/vertical-view.tsx","../src/plugins/day-view.tsx","../src/plugins/week-view.tsx","../src/plugins/month-view.tsx","../src/plugins/toolbar.tsx","../src/plugins/date-navigator.tsx","../src/plugins/view-switcher.tsx","../src/plugins/appointments.tsx","../src/plugins/all-day-panel.tsx","../src/plugins/view-state.tsx","../src/plugins/editing-state.tsx","../src/plugins/appointment-tooltip.tsx","../src/plugins/appointment-form.tsx","../src/plugins/drag-drop-provider.tsx","../src/plugins/today-button.tsx","../src/plugins/edit-recurrence-menu.tsx","../src/plugins/integrated-editing.tsx","../src/plugins/resources.tsx","../src/plugins/confirmation-dialog.tsx","../src/plugins/grouping-state.tsx","../src/plugins/grouping-panel.tsx","../src/plugins/current-time-indicator.tsx","../src/plugins/integrated-grouping.tsx"],"names":["React.PureComponent","React.createElement","availableViews","viewCellsDataCore","viewCellsDataBaseComputed","calculateAppointmentsIntervalsBaseComputed","React.Fragment","pluginDependencies","CellPlaceholder","preCommitChangesBase","defaultMessages","React.createRef","DragDropProviderCore","React.memo","React.useRef","React.useState","React.useCallback","React.useEffect"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n      firstDayOfWeek,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={this.formatDateTimeGetter(locale)} />\n        <Getter name=\"firstDayOfWeek\" value={firstDayOfWeek} />\n        <Getter name=\"locale\" value={locale} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.SFC<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n  firstDayOfWeek,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n      firstDayOfWeek={firstDayOfWeek}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0,\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  HORIZONTAL_GROUP_ORIENTATION,\n  VERTICAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\nimport { BasicViewProps, BasicViewState, ScrollingStrategy } from '../types';\n\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst TimeTableAppointmentLayer = () => <TemplatePlaceholder name=\"timeTableAppointmentLayer\" />;\n\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\n\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\n\nconst GroupingPanelPlaceholder = () => <TemplatePlaceholder name=\"groupingPanel\" />;\n\nclass BasicViewBase extends React.PureComponent<BasicViewProps, BasicViewState> {\n  state = {\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      leftBoundary: 0,\n      rightBoundary: 0,\n      changeVerticalScroll: () => undefined,\n      changeHorizontalScroll: () => undefined,\n    },\n    previousTimeTableCell: null,\n    // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n    // and, consequently, update timeTableElementsMeta\n    timeTableLayoutKey: 0,\n  };\n\n  static getDerivedStateFromProps(\n    props: BasicViewProps, state: BasicViewState,\n  ): BasicViewState | null {\n\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return {\n        ...state,\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  cellDurationComputed = memoize((viewName, cellDuration) => getters =>\n    computed(getters, viewName, () => cellDuration, getters.cellDuration));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName, type) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed = memoize((\n    viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed,\n  ) => getters => computed(\n    getters,\n    viewName,\n    viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n    getters.viewCellsData,\n  ));\n\n  timeTableAppointmentsComputed = memoize((\n    viewName, cellDuration, calculateAppointmentsIntervals,\n  ) => getters => computed(\n      getters,\n      viewName,\n      calculateAppointmentsIntervals(cellDuration),\n      getters.timeTableAppointments,\n    ));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      name: viewName,\n      intervalCount,\n      displayName,\n      type,\n      excludedDays,\n      cellDuration,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      calculateAppointmentsIntervals,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      dayScaleLayoutComponent: DayScale,\n      timeTableCellComponent: TimeTableCell,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      appointmentLayerComponent: AppointmentLayer,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      layoutProps,\n      layoutComponent: Layout,\n    } = this.props;\n    const { timeTableElementsMeta, scrollingStrategy, timeTableLayoutKey } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin name=\"basicView\">\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter\n          name=\"currentView\"\n          computed={this.currentViewComputed(viewName, viewDisplayName, type)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(\n            viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed,\n          )}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n        <Getter\n          name=\"cellDuration\"\n          computed={this.cellDurationComputed(viewName, cellDuration)}\n        />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Getter\n          name=\"timeTableAppointments\"\n          computed={this.timeTableAppointmentsComputed(\n            viewName, cellDuration, calculateAppointmentsIntervals,\n          )}\n        />\n\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation, groups }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const isVerticalGrouping = groupOrientation?.(viewName)\n                === VERTICAL_GROUP_ORIENTATION;\n              return (\n                <Layout\n                  dayScaleComponent={DayScalePlaceholder}\n                  timeTableComponent={TimeTablePlaceholder}\n                  setScrollingStrategy={this.setScrollingStrategy}\n                  groupingPanelComponent={\n                    isVerticalGrouping ? GroupingPanelPlaceholder : undefined\n                  }\n                  groupingPanelSize={isVerticalGrouping ? groups?.length : 0}\n                  dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                  {...layoutProps}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate, groupByDate, groupOrientation }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const groupByDateEnabled = groupByDate?.(viewName);\n              const isHorizontalGrouping = groupOrientation?.(viewName)\n                === HORIZONTAL_GROUP_ORIENTATION;\n              return (\n                <DayScale\n                  cellComponent={dayScaleCellComponent}\n                  rowComponent={dayScaleRowComponent}\n                  groupingPanelComponent={\n                    isHorizontalGrouping ? GroupingPanelPlaceholder : undefined\n                  }\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                  groupedByDate={groupByDateEnabled}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ formatDate, currentView, viewCellsData }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                return (\n                  <>\n                    <TimeTableLayout\n                      cellsData={viewCellsData}\n                      rowComponent={timeTableRowComponent}\n                      cellComponent={CellPlaceholder}\n                      formatDate={formatDate}\n                      setCellElementsMeta={this.updateCellElementsMeta}\n                      key={timeTableLayoutKey}\n                      {...params}\n                    />\n                    <AppointmentLayer>\n                      <TimeTableAppointmentLayer />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n          </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName || !DayScaleEmptyCell) {\n                return <TemplatePlaceholder />;\n              }\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const BasicView: React.ComponentType<BasicViewProps> = BasicViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  calculateWeekDateIntervals,\n  getTimeTableHeight,\n  timeCellsData as timeCellsDataCore,\n  computed,\n} from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { CommonVerticalViewProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateWeekDateIntervals(\n  appointments, startViewDate, endViewDate, excludedDays, cellDuration,\n);\nconst timeCellsDataComputed = (startDayHour, endDayHour) => ({\n  viewCellsData, cellDuration,\n}) => timeCellsDataCore(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass VericalViewBase extends React.PureComponent<CommonVerticalViewProps> {\n  timeCellsDataComputed = memoize((viewName, startDayHour, endDayHour) => getters => computed(\n    getters,\n    viewName,\n    timeCellsDataComputed(startDayHour, endDayHour),\n    getters.timeCellsData,\n  ));\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      type,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataComputed}\n          type={type}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            timeScaleComponent: TimeScalePlaceholder,\n          }}\n        />\n\n        <Getter\n          name=\"timeCellsData\"\n          computed={this.timeCellsDataComputed(viewName, startDayHour, endDayHour)}\n        />\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({\n                currentView, timeCellsData, groups, formatDate,\n                groupOrientation: getGroupOrientation,\n                timeTableElementsMeta,\n              }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const groupOrientation = getGroupOrientation?.(viewName);\n\n                return (\n                  <TimeScale\n                    labelComponent={TimeScaleLabel}\n                    tickCellComponent={timeScaleTickCellComponent}\n                    rowComponent={timeScaleTicksRowComponent}\n                    cellsData={timeCellsData}\n                    formatDate={formatDate}\n                    groups={groups}\n                    groupOrientation={groupOrientation}\n                    height={getTimeTableHeight(timeTableElementsMeta)}\n                    {...params}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const VerticalView: React.ComponentType<CommonVerticalViewProps> = VericalViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { VerticalViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, intervalCount }) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps> {\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.DAY}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          dayScaleEmptyCellComponent={DayScaleEmptyCell}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { WeekViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst DAYS_IN_WEEK = 7;\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps> {\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.WEEK}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport { Plugin, PluginComponents } from '@devexpress/dx-react-core';\nimport { monthCellsData, calculateMonthDateIntervals, VIEW_TYPES } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { MonthViewProps } from '../types';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, firstDayOfWeek, intervalCount }) => monthCellsData(\n  currentDate, firstDayOfWeek, intervalCount!, Date.now(),\n);\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateMonthDateIntervals(\n  appointments, startViewDate, endViewDate,\n);\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps> {\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      name: viewName,\n      intervalCount,\n      displayName,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.MONTH}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView.type,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <React.Fragment>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers, memoize } from '@devexpress/dx-core';\nimport {\n  POSITION_START, POSITION_END, VERTICAL_TYPE,\n  getVerticalRectByAppointmentData, calculateRectByDateAndGroupIntervals,\n  getAppointmentStyle, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData,\n  isAllDayElementsMetaActual, isTimeTableElementsMetaActual,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES, getGroupsLastRow, Rect,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nconst renderAppointments = rects => rects.map(({\n  dataItem, type: rectType, fromPrev, toNext,\n  durationType, resources, key, ...geometry\n}) => (\n  <AppointmentPlaceholder\n    key={key}\n    type={rectType}\n    data={dataItem}\n    fromPrev={fromPrev}\n    toNext={toNext}\n    durationType={durationType}\n    resources={resources}\n    style={getAppointmentStyle(geometry as Rect)}\n  />\n));\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n  static defaultProps: Partial<AppointmentsProps> = {\n    placeAppointmentsNextToEachOther: false,\n  };\n\n  updateTimeTableAppointments = memoize((\n    timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n    startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate,\n    placeAppointmentsNextToEachOther,\n  ) => {\n    if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    let appointmentType = { growDirection: VERTICAL_TYPE, multiline: false };\n    let getRects = getVerticalRectByAppointmentData as any;\n    if (currentView.type === VIEW_TYPES.MONTH) {\n      appointmentType = { growDirection: HORIZONTAL_TYPE, multiline: true };\n      getRects = getHorizontalRectByAppointmentData;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      appointmentType, timeTableAppointments, getRects,\n      {\n        startViewDate, endViewDate, cellDuration,\n        viewCellsData, cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  updateAllDayAppointments = memoize((\n    allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n    startViewDate, endViewDate, groups, getGroupOrientation, groupByDate,\n  ) => {\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    if (!isAllDayElementsMetaActual(\n      viewCellsData, allDayElementsMeta, groupOrientation, groupCount,\n    )) {\n      return null;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      { growDirection: HORIZONTAL_TYPE,  multiline: false },\n      allDayAppointments,\n      getHorizontalRectByAppointmentData,\n      {\n        startViewDate, endViewDate,\n        viewCellsData, cellElementsMeta: allDayElementsMeta,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n      placeAppointmentsNextToEachOther,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"timeTableAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groupOrientation,  groups, groupByDate,\n            }) => this.updateTimeTableAppointments(\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate,\n              placeAppointmentsNextToEachOther,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"allDayAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              allDayAppointments, viewCellsData, allDayElementsMeta,\n              startViewDate, endViewDate, groupOrientation, currentView, groups, groupByDate,\n            }) => this.updateAllDayAppointments(\n              allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n              startViewDate, endViewDate, groups, groupOrientation, groupByDate,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            durationType, resources,\n            ...restParams\n          }: any) => (\n            <Appointment\n              data={data}\n              resources={resources}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                durationType={durationType}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n                resources={resources}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells, calculateAllDayDateIntervals,\n  VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst isMonthView = currentView => currentView.type === VIEW_TYPES.MONTH;\nconst isVerticalGrouping = (\n  currentView, groupOrientation,\n) => groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION;\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst AllDayAppointmentLayerPlaceholder = () =>\n  <TemplatePlaceholder name=\"allDayAppointmentLayer\" />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\nconst AllDayTitlePlaceholder = params => <TemplatePlaceholder name=\"allDayTitle\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    elementsMeta: {},\n    previousCell: null,\n    // The key has to be generated every time the Cell component is updated to rerender the Layout\n    // and, consequently, update allDayElementsMeta\n    layoutKey: 0,\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  static getDerivedStateFromProps(\n    props: AllDayPanelProps, state: AllDayPanelState,\n  ): AllDayPanelState | null {\n    if (props.cellComponent !== state.previousCell) {\n      return {\n        ...state,\n        previousCell: props.cellComponent,\n        layoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  allDayCellsDataComputed = memoize(({ viewCellsData }) => allDayCells(viewCellsData));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ elementsMeta: cellElementsMeta });\n  });\n\n  allDayAppointmentsComputed = memoize(({\n    appointments, startViewDate, endViewDate, excludedDays,\n  }) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    return calculateAllDayDateIntervals(\n      appointments, allDayLeftBound, allDayRightBound, excludedDays,\n    );\n  });\n\n  allDayPanelExistsComputed = memoize(({\n    currentView,\n  }) => !isMonthView(currentView));\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { elementsMeta, layoutKey } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n        <Getter name=\"allDayCellsData\" computed={this.allDayCellsDataComputed} />\n        <Getter name=\"allDayPanelExists\" computed={this.allDayPanelExistsComputed} />\n        <Getter\n          name=\"allDayAppointments\"\n          computed={this.allDayAppointmentsComputed}\n        />\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation, allDayCellsData }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n                return (\n                  <>\n                    <TemplatePlaceholder\n                      params={{\n                        ...params,\n                        allDayCellComponent: CellPlaceholder,\n                        allDayRowComponent: rowComponent,\n                        allDayCellsData,\n                      }}\n                    />\n                    <AppointmentLayer>\n                      <AllDayAppointmentLayerPlaceholder />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return <TemplatePlaceholder />;\n              }\n\n              return (\n                <AllDayTitlePlaceholder />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n\n                return (\n                  <TemplatePlaceholder\n                    params={{\n                      ...params,\n                      allDayTitleComponent: AllDayTitlePlaceholder,\n                      showAllDayTitle: true,\n                    }}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return null;\n              }\n\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, formatDate, allDayCellsData,\n            }) => {\n              if (currentView.type === VIEW_TYPES.MONTH) return null;\n\n              return (\n                <React.Fragment>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={allDayCellsData[0]}\n                    setCellElementsMeta={this.updateCellElementsMeta}\n                    formatDate={formatDate}\n                    key={layoutKey}\n                  />\n                  <AppointmentLayer>\n                    <AllDayAppointmentLayerPlaceholder />\n                  </AppointmentLayer>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayTitle\">\n          {(params: any) => <TitleCell getMessage={getMessage} {...params}/>}\n        </Template>\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges  } = this.props;\n\n      if (!editingAppointment) return;\n      const changes =  !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n  TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n      recurringIconComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate, resources, plainResources,\n            }, {\n              finishDeleteAppointment, openDeleteConfirmationDialog,\n            }) => {\n              const onDeleteButtonClick = () => {\n                if (openDeleteConfirmationDialog) {\n                  openDeleteConfirmationDialog({\n                    hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n                    appointmentData: appointmentMeta.data,\n                  });\n                } else {\n                  this.toggleVisibility();\n                  finishDeleteAppointment(appointmentMeta.data);\n                }\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    recurringIconComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    appointmentResources: appointmentMeta ? getAppointmentResources(\n                      appointmentMeta.data as any, resources, plainResources,\n                    ) : [],\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    ...finishDeleteAppointment && {\n                      onDeleteButtonClick,\n                    },\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: ({ target, data }) =>\n                 this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  AppointmentModel,\n  TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n  getAppointmentResources,\n  ValidResourceInstance,\n  checkMultipleResourceFields,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst addDoubleClickToCell = (\n  title, startDate, endDate, groupingInfo, resources,\n  allDay, openFormHandler, addAppointment, params,\n) => {\n  const resourceFields = !!groupingInfo\n    ? groupingInfo.reduce((acc, currentGroup) => (\n      { ...acc, [currentGroup.fieldName]: currentGroup.id }\n    ), {}) : {};\n  const validResourceFields = resources\n    ? checkMultipleResourceFields(resourceFields, resources)\n    : resourceFields;\n\n  const newAppointmentData = {\n    title,\n    startDate,\n    endDate,\n    allDay,\n    ...validResourceFields,\n  };\n\n  return (\n    <TemplatePlaceholder\n      params={{\n        ...params,\n        onDoubleClick: () => {\n          openFormHandler(newAppointmentData);\n          callActionIfExists(addAppointment,\n            { appointmentData: newAppointmentData });\n        },\n      }}\n    />\n  );\n};\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every',\n};\n\nconst CommandLayoutPlaceholder = () => <TemplatePlaceholder name=\"commandLayout\" />;\nconst BasicLayoutPlaceholder = () => <TemplatePlaceholder name=\"basicLayout\" />;\nconst RecurrenceLayoutPlaceholder = () => <TemplatePlaceholder name=\"recurrenceLayout\" />;\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst prepareChanges = (\n  appointmentData, editingAppointment,\n  addedAppointment, appointmentChanges,\n  resources, plainResources,\n) => {\n  const isNew = !editingAppointment;\n  const changedAppointment = {\n    ...appointmentData,\n    ...appointmentChanges,\n    ...isNew && addedAppointment,\n  };\n  const appointmentResources = getAppointmentResources(\n    changedAppointment, resources, plainResources,\n  );\n  const isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return { changedAppointment, appointmentResources, isNew, isFormEdited };\n};\n\nconst isFormFullSize = (\n  isFormVisible, changedAppointmentRRule, previousAppointmentRRule,\n) => !!changedAppointmentRRule || (!isFormVisible && !!previousAppointmentRRule);\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n  container = React.createRef();\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  commitChanges = memoize((\n    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n  ) => () =>  {\n    this.toggleVisibility();\n    if (isNew) {\n      callActionIfExists(commitAddedAppointment, changedAppointment);\n    } else if (finishCommitAppointment) {\n      finishCommitAppointment();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  cancelChanges = memoize((\n    openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n      openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n    } else {\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentChanges);\n      } else {\n        callActionIfExists(stopEditAppointment, appointmentChanges);\n        callActionIfExists(cancelChangedAppointment, appointmentChanges);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  deleteAppointment = memoize((\n    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n    stopEditAppointment, isNew,\n  ) => () => {\n    if (openDeleteConfirmationDialog) {\n      openDeleteConfirmationDialog({\n        hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY, appointmentData: changedAppointment,\n      });\n    } else {\n      callActionIfExists(finishDeleteAppointment, appointmentData);\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentData);\n      } else {\n        callActionIfExists(cancelChangedAppointment, appointmentData);\n        callActionIfExists(stopEditAppointment, appointmentData);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  changeAppointmentField = memoize((isNew, changeAddedAppointment, changeAppointment) =>\n    (change) => {\n      if (change && change.rRule) {\n        this.setState({ previousAppointment: {\n          ...this.state.previousAppointment, rRule: change.rRule,\n        }});\n      }\n      if (isNew) {\n        callActionIfExists(changeAddedAppointment, { change });\n      } else {\n        callActionIfExists(changeAppointment, { change });\n      }\n    },\n  );\n\n  getMessage = memoize((menuMessages, messages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const {\n      containerComponent: Container,\n      overlayComponent: Overlay,\n      layoutComponent: Layout,\n      commandLayoutComponent: CommandLayout,\n      basicLayoutComponent: BasicLayout,\n      recurrenceLayoutComponent: RecurrenceLayout,\n      commandButtonComponent,\n      textEditorComponent,\n      labelComponent,\n      dateEditorComponent,\n      booleanEditorComponent,\n      selectComponent,\n      radioGroupComponent,\n      weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData, previousAppointment } = this.state;\n    const getMessage = this.getMessage(defaultMessages, messages);\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_FORM_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              openCancelConfirmationDialog,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n            }) => {\n              const { changedAppointment, isNew } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const fullSize = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const onHideAction = () => visible && this.cancelChanges(\n                openCancelConfirmationDialog, isNew, stopEditAppointment,\n                { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                cancelAddedAppointment, cancelChangedAppointment,\n              )();\n\n              return (\n                <React.Fragment>\n                  <Container ref={this.container} />\n                  <Overlay\n                    visible={visible}\n                    onHide={onHideAction}\n                    fullSize={fullSize}\n                    target={this.container}\n                  >\n                    <Layout\n                      basicLayoutComponent={BasicLayoutPlaceholder}\n                      commandLayoutComponent={CommandLayoutPlaceholder}\n                      recurrenceLayoutComponent={RecurrenceLayoutPlaceholder}\n                      isRecurrence={fullSize}\n                    />\n                  </Overlay>\n                  <TemplatePlaceholder />\n                </React.Fragment>);\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"commandLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              commitAddedAppointment,\n              finishCommitAppointment,\n              finishDeleteAppointment,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n\n              openCancelConfirmationDialog,\n              openDeleteConfirmationDialog,\n            }) => {\n              const { isNew, changedAppointment, isFormEdited } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const isRecurrence = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              return (\n                <CommandLayout\n                  commandButtonComponent={commandButtonComponent}\n                  onCommitButtonClick={this.commitChanges(\n                    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n                  )}\n                  onCancelButtonClick={this.cancelChanges(\n                    openCancelConfirmationDialog, isNew, stopEditAppointment,\n                    { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                    cancelAddedAppointment, cancelChangedAppointment,\n                  )}\n                  onDeleteButtonClick={this.deleteAppointment(\n                    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n                    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n                    stopEditAppointment, isNew,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  fullSize={isRecurrence}\n                  disableSaveButton={!isFormEdited}\n                  hideDeleteButton={isNew}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"basicLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              locale,\n\n              resources,\n              plainResources,\n            }, {\n              changeAppointment,\n              changeAddedAppointment,\n            }) => {\n              const { isNew, changedAppointment, appointmentResources } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              return (\n                <BasicLayout\n                  locale={locale}\n                  appointmentData={visible ? changedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  booleanEditorComponent={booleanEditorComponent}\n                  selectComponent={selectComponent}\n                  labelComponent={labelComponent}\n                  resourceEditorComponent={resourceEditorComponent}\n                  fullSize={!changedAppointment.rRule}\n                  resources={resources}\n                  appointmentResources={appointmentResources as Array<ValidResourceInstance>}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"recurrenceLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              formatDate,\n              locale,\n              firstDayOfWeek,\n            }, {\n              changeAddedAppointment,\n              changeAppointment,\n            }) => {\n              const { isNew, changedAppointment } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                undefined, undefined,\n              );\n              const isRecurrenceLayoutVisible = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const correctedAppointment = !changedAppointment.rRule\n                ? { ...changedAppointment, rRule: previousAppointment.rRule } : changedAppointment;\n\n              return (\n                <RecurrenceLayout\n                  locale={locale}\n                  appointmentData={visible ? correctedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  formatDate={formatDate}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  radioGroupComponent={radioGroupComponent}\n                  weeklyRecurrenceSelectorComponent={weeklyRecurrenceSelectorComponent}\n                  labelComponent={labelComponent}\n                  selectComponent={selectComponent}\n                  visible={isRecurrenceLayoutVisible}\n                  firstDayOfWeek={firstDayOfWeek}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                isAllDayCell(params.startDate, params.endDate),\n                this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                true, this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex, cellData, cellType, getAppointmentStyle, intervalDuration, autoScroll,\n  calculateAppointmentTimeBoundaries, calculateInsidePart, RESIZE_TOP, RESIZE_BOTTOM,\n  POSITION_START, POSITION_END, getAppointmentResources, calculateAppointmentGroups,\n  appointmentDragged, calculateDraftAppointments,\n  HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION, SCROLL_SPEED_PX,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, Wrapper, draftData) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map((draftAppointment, index) => (\n        <TemplatePlaceholder\n          name=\"draftAppointment\"\n          key={index.toString()}\n          params={{ data: draftData, draftAppointment }}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n  appointmentGroupingInfo: any = {};\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    appointmentGroupingInfo: null,\n    payload: null,\n    isOutside: false,\n    allowDrag: () => true,\n    allowResize: () => true,\n    appointmentContentTemplateKey: 0,\n    appointmentTopTemplateKey: 0,\n    appointmentBottomTemplateKey: 0,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n    scrollSpeed: SCROLL_SPEED_PX,\n  };\n  static getDerivedStateFromProps(\n    props: DragDropProviderProps, state: DragDropProviderState,\n  ): DragDropProviderState | null {\n    const isAllowDragSame = props.allowDrag === state.allowDrag;\n    const isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return {\n      ...state,\n      appointmentContentTemplateKey:\n        isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey:\n        isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey:\n        isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize,\n    };\n\n  }\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions, scrollSpeed) {\n    return args => this.calculateBoundaries(args, getters, actions, scrollSpeed);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(\n    startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo,\n  ) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n        ...this.appointmentGroupingInfo,\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false, appointmentGroupingInfo });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays, currentView,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n      grouping, resources, groups, groupOrientation: getGroupOrientation, groupByDate,\n    },\n    { changeAppointment, startEditAppointment },\n    scrollSpeed,\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(\n      timeTableIndex, allDayIndex, viewCellsData, allDayCellsData,\n    );\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    const appointmentGroups = calculateAppointmentGroups(\n      targetData.groupingInfo, resources, payload,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime, appointmentGroupingInfo } = this.state;\n    if (!appointmentDragged(\n      this.appointmentStartTime, startTime!,\n      this.appointmentEndTime, endTime!,\n      this.appointmentGroupingInfo, appointmentGroupingInfo,\n    )) {\n      return;\n    }\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n        ...this.appointmentGroupingInfo,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups,\n      groupOrientation, groupByDate?.(currentView?.name),\n    );\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n      this.appointmentGroupingInfo,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const {\n      payload, appointmentContentTemplateKey,\n      appointmentBottomTemplateKey, appointmentTopTemplateKey,\n    } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n      scrollSpeed,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n              grouping, resources, groups, currentView, groupByDate, groupOrientation,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData, allDayCellsData, currentView,\n                startViewDate, endViewDate, excludedDays,\n                timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n                resources, grouping, groups, groupByDate, groupOrientation,\n              }, { changeAppointment, startEditAppointment }, scrollSpeed);\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <TemplatePlaceholder />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n          key={appointmentContentTemplateKey}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <TemplatePlaceholder params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentTopTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentBottomTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {groupOrientation?.(currentView.name) !== VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {renderAppointmentItems(this.timeTableDraftAppointments, Container, draftData)}\n                {groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"draftAppointment\">\n          {({ data, draftAppointment, ...restParams }: any) => (\n            <TemplateConnector>\n              {({ formatDate, resources, plainResources }) => {\n                const {\n                  dataItem, type, fromPrev, toNext, durationType, ...geometry\n                } = draftAppointment;\n                return (\n                  <DraftAppointment\n                    data={data}\n                    resources={getAppointmentResources(dataItem, resources, plainResources)}\n                    durationType={durationType}\n                    style={getAppointmentStyle(geometry)}\n                    type={type}\n                    fromPrev={fromPrev}\n                    toNext={toNext}\n                    formatDate={formatDate}\n                    {...restParams}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditingTitle: 'Edit recurring appointment',\n  menuDeletingTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  convertResourcesToPlain, validateResources, addResourcesToAppointments,\n} from '@devexpress/dx-scheduler-core';\nimport { ResourcesProps } from '../types/resources/resources.types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n];\n\nconst addResourcesToTimeTableAppointments = ({\n  timeTableAppointments, resources, plainResources,\n}: Getters) => timeTableAppointments\n  && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\nconst addResourcesToAllDayAppointments = ({\n    allDayAppointments, resources, plainResources,\n  }: Getters) => allDayAppointments\n    && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n\nconst ResourcesBase: React.SFC<ResourcesProps> = React.memo(({\n  data, mainResourceName, palette,\n}) => {\n  const convertResources = ({ resources }: Getters) =>\n    convertResourcesToPlain(resources);\n\n  return (\n  <Plugin\n    name=\"Resources\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"resources\" value={validateResources(data, mainResourceName, palette)} />\n    <Getter name=\"plainResources\" computed={convertResources} />\n    <Getter name=\"timeTableAppointments\" computed={addResourcesToTimeTableAppointments} />\n    <Getter name=\"allDayAppointments\" computed={addResourcesToAllDayAppointments} />\n  </Plugin>\n  );\n});\n\n/** A plugin that manages schedule's resources. */\nexport const Resources: React.ComponentType<ResourcesProps> = ResourcesBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Action,\n} from '@devexpress/dx-react-core';\nimport { ConfirmationDialogProps } from '../types/editing/confirmation-dialog.types';\nimport { AppointmentModel } from '@devexpress/dx-scheduler-core';\n\nconst defaultMessages = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete',\n};\n\nconst ConfirmationDialogBase: React.SFC<ConfirmationDialogProps> & {components: {\n  overlayComponent: string, containerComponent: string,\n  layoutComponent: string, buttonComponent: string,\n}} = ({\n  messages, overlayComponent: Overlay, layoutComponent: Layout, containerComponent: Container,\n  buttonComponent, ignoreDelete, ignoreCancel,\n}) => {\n  const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n  const modalContainer = React.useRef();\n\n  const [visible, setVisible] = React.useState(false);\n  const [actionType, setActionType] = React.useState('');\n  const [hideActionName, setHideActionName] = React.useState('');\n  const [appointmentData, setAppointmentData] = React.useState({});\n\n  const toggleVisibility = React.useCallback(() => {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n\n  const confirmCancelChanges = React.useCallback((hideAction) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n\n  const confirmDelete = React.useCallback(({\n    hideActionName: hideAction, appointmentData: changedAppointment,\n  }) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n\n  const confirmAction = React.useCallback((\n    isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment,\n    cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    hideEditor();\n    toggleVisibility();\n    if (isNewAppointment) {\n      cancelAddedAppointment();\n    } else {\n      stopEditAppointment();\n      cancelChangedAppointment();\n    }\n    if (actionType === ACTION_TYPES.DELETE) {\n      finishDeleteAppointment(appointmentData);\n    }\n  }, [toggleVisibility, actionType, appointmentData]);\n\n  return (\n    <Plugin\n      name=\"ConfirmationDialog\"\n      dependencies={pluginDependencies}\n    >\n      {!ignoreCancel &&\n        <Action name=\"openCancelConfirmationDialog\" action={confirmCancelChanges} />\n      }\n      {!ignoreDelete &&\n        <Action name=\"openDeleteConfirmationDialog\" action={confirmDelete} />\n      }\n\n      <Template name=\"schedulerRoot\">\n        <TemplatePlaceholder />\n        <Container ref={modalContainer} />\n        <TemplatePlaceholder name=\"confirmationDialogOverlay\" />\n      </Template>\n\n      <Template name=\"confirmationDialogOverlay\">\n        <TemplateConnector>\n          {({\n            editingAppointment,\n          }, actions) => {\n            const handleConfirm = confirmAction(\n              !editingAppointment, actions[hideActionName], actions.stopEditAppointment,\n              actions.finishDeleteAppointment, actions.cancelAddedAppointment,\n              actions.cancelChangedAppointment,\n            );\n\n            return (\n              <Overlay\n                target={modalContainer}\n                visible={visible}\n                onHide={toggleVisibility}\n              >\n                <Layout\n                  buttonComponent={buttonComponent}\n                  handleCancel={toggleVisibility}\n                  handleConfirm={handleConfirm}\n                  getMessage={getMessage}\n                  isDeleting={actionType === ACTION_TYPES.DELETE}\n                  appointmentData={appointmentData as AppointmentModel}\n                />\n              </Overlay>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    </Plugin>\n  );\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button',\n};\n\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false,\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nexport const ConfirmationDialog: React.ComponentType<\n  ConfirmationDialogProps\n> = ConfirmationDialogBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, StateHelper, ActionFn, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  ToggleGroupPayload, toggleExpandedGroups, HORIZONTAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { GroupingStateProps, GroupingStateState } from '../types';\n\nclass GroupingStateBase extends React.PureComponent<GroupingStateProps, GroupingStateState> {\n  static defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: () => false,\n    groupOrientation: () => HORIZONTAL_GROUP_ORIENTATION,\n  };\n  stateHelper: StateHelper;\n  toggleGroupExpanded: ActionFn<ToggleGroupPayload>;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return { grouping, expandedGroups };\n  }\n\n  render() {\n    const { grouping, expandedGroups } = this.state;\n    const { groupByDate, groupOrientation } = this.props;\n\n    return (\n      <Plugin name=\"GroupingState\">\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"groupByDate\" value={groupByDate} />\n        <Getter name=\"groupOrientation\" value={groupOrientation} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the grouping state. */\nexport const GroupingState: React.ComponentType<GroupingStateProps> = GroupingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { GroupingPanelProps } from '../types';\nimport {\n  VERTICAL_VIEW_LEFT_OFFSET, HORIZONTAL_VIEW_LEFT_OFFSET,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'IntegratedGrouping' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'ViewState', optional: true },\n];\n\nclass GroupingPanelBase extends React.PureComponent<GroupingPanelProps> {\n  static components: PluginComponents = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell',\n  };\n\n  render() {\n    const {\n      horizontalLayoutComponent: HorizontalLayout,\n      verticalLayoutComponent: VerticalLayout,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"groupingPanel\">\n          <TemplateConnector>\n            {({\n              viewCellsData, currentView, scrollingStrategy, allDayPanelExists,\n              groupByDate, groupOrientation: getGroupOrientation, groups,\n            }) => {\n              const groupOrientation = getGroupOrientation(currentView?.name);\n              return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? (\n                <HorizontalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  colSpan={viewCellsData[0].length}\n                  cellStyle={{\n                    left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth\n                    : currentView?.type === VIEW_TYPES.MONTH\n                      ? HORIZONTAL_VIEW_LEFT_OFFSET\n                      : VERTICAL_VIEW_LEFT_OFFSET,\n                  }}\n                  showHeaderForEveryDate={groupByDate?.(currentView && currentView.name)}\n                />\n              ) : (\n                <VerticalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  rowSpan={viewCellsData.length}\n                  viewType={currentView?.type}\n                  cellTextTopOffset={scrollingStrategy?.fixedTopHeight}\n                  alignWithAllDayRow={allDayPanelExists}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the grouping panel used to display group names. */\nexport const GroupingPanel: React.ComponentType<GroupingPanelProps> = GroupingPanelBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  isMonthCell, isShadedAppointment,\n  isCellShaded, getCurrentTimeIndicatorTop,\n} from '@devexpress/dx-scheduler-core';\nimport { CurrentTimeIndicatorProps, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'DragDropProvider', optional: true },\n  { name: 'Appointments', optional: true },\n];\n\nconst CurrentTimeIndicatorBase: React.SFC<CurrentTimeIndicatorProps>  & {components: {\n  indicatorComponent: string,\n}} = ({\n  indicatorComponent, shadePreviousAppointments, shadePreviousCells, updateInterval,\n}) => {\n  const [currentTime, setCurrentTime] = React.useState(Date.now);\n\n  React.useEffect(() => {\n    const tick = () => setCurrentTime(Date.now());\n    const intervalId = (updateInterval\n      ? window.setInterval(tick, updateInterval)\n      : undefined\n    );\n    return () => window.clearInterval(intervalId);\n  }, [updateInterval]);\n\n  return (\n    <Plugin\n      name=\"CurrentTimeIndicator\"\n      dependencies={pluginDependencies}\n    >\n      <Template\n        name=\"cell\"\n        predicate={({ otherMonth }: any) => !isMonthCell(otherMonth)}\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n              currentTimeIndicatorComponent: indicatorComponent,\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"cell\"\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isCellShaded(params, currentTime, shadePreviousCells),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"appointmentContent\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"draftAppointment\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n    </Plugin>\n  );\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false,\n};\n\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator',\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nexport const CurrentTimeIndicator: React.ComponentType<\n  CurrentTimeIndicatorProps\n> = CurrentTimeIndicatorBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  getGroupsFromResources, expandViewCellsDataWithGroups,\n  sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource,\n  expandGroups, VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n  updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData,\n} from '@devexpress/dx-scheduler-core';\nimport { IntegratedGroupingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Resources' },\n  { name: 'GroupingState' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n];\n\nconst getViewCellsDataComputed = ({\n  viewCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => expandViewCellsDataWithGroups(\n  viewCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\nconst getAllDayCellsDataComputed = ({\n  allDayCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => allDayCellsData && expandViewCellsDataWithGroups(\n  allDayCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\n\nconst getGroupsComputed = (\n  { resourcesToGroupBy }: Getters,\n) => getGroupsFromResources(resourcesToGroupBy);\n\nconst getResourcesToGroupByComputed = (\n  { resources, grouping }: Getters,\n) => sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n\nconst getGroupingComputed = (\n  { grouping, resources }: Getters,\n) => updateGroupingWithMainResource(grouping, resources);\n\nconst getTimeTableAppointmentsComputed = ({\n  timeTableAppointments, grouping, resourcesToGroupBy,\n  groups, groupByDate, currentView, excludedDays,\n}: Getters) => timeTableAppointments\n  && expandGroups(\n    timeTableAppointments, grouping, resourcesToGroupBy, groups,\n    excludedDays, groupByDate(currentView?.name) && currentView?.type === VIEW_TYPES.MONTH,\n  );\n\nconst getAllDayAppointmentsComputed = ({\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, groupByDate, currentView, excludedDays,\n  }: Getters) => allDayAppointments &&\n  expandGroups(\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, excludedDays, groupByDate(currentView?.name),\n  );\n\nconst getGroupByDateComputed = ({\n  currentView, groupByDate, groupOrientation,\n}: Getters) => groupOrientation(currentView?.name) === VERTICAL_GROUP_ORIENTATION\n  ? () => false : groupByDate;\n\nconst getTimeTableElementsMetaComputed = ({\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateTimeTableCellElementsMeta(\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getAllDayElementsMetaComputed = ({\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateAllDayCellElementsMeta(\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getTimeCellsDataComputed = ({\n  viewCellsData, timeCellsData,  currentView,\n  groups, resourcesToGroupBy, groupOrientation,\n}: Getters) => timeCellsData\n  && updateTimeCellsData(\n    viewCellsData,\n    timeCellsData,\n    groups,\n    resourcesToGroupBy,\n    groupOrientation(currentView.name),\n  );\n\nconst IntegratedGroupingBase: React.SFC<IntegratedGroupingProps> = React.memo(() => (\n  <Plugin\n    name=\"IntegratedGrouping\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"groupByDate\" computed={getGroupByDateComputed} />\n    <Getter name=\"grouping\" computed={getGroupingComputed} />\n    <Getter name=\"resourcesToGroupBy\" computed={getResourcesToGroupByComputed} />\n    <Getter name=\"groups\" computed={getGroupsComputed} />\n\n    <Getter name=\"viewCellsData\" computed={getViewCellsDataComputed} />\n    <Getter name=\"allDayCellsData\" computed={getAllDayCellsDataComputed} />\n    <Getter name=\"timeCellsData\" computed={getTimeCellsDataComputed} />\n\n    <Getter name=\"timeTableAppointments\" computed={getTimeTableAppointmentsComputed} />\n    <Getter name=\"allDayAppointments\" computed={getAllDayAppointmentsComputed} />\n\n    <Getter name=\"allDayElementsMeta\" computed={getAllDayElementsMetaComputed} />\n    <Getter name=\"timeTableElementsMeta\" computed={getTimeTableElementsMetaComputed} />\n  </Plugin>\n));\n\n/** A plugin that implements grouping. */\nexport const IntegratedGrouping: React.ComponentType<\n  IntegratedGroupingProps\n> = IntegratedGroupingBase;\n"]},"metadata":{},"sourceType":"module"}