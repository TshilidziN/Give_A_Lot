{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshilidzi-PC\\\\Documents\\\\GitHub\\\\Givee\\\\Give-a-Lot\\\\frontend\\\\givealot\\\\src\\\\views\\\\dashboard\\\\sidebar\\\\Components\\\\Calendar\\\\Calendar.js\";\n// import React from 'react'\n// import \"./styles/Calendar.css\"\n// import { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n// import { DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';\n//\n// export default class DemoApp extends React.Component {\n//\n//     constructor() {\n//         super(...arguments);\n//         this.dataManager = new DataManager({\n//             url: 'https://ej2services.syncfusion.com/production/web-services/api/Schedule',\n//             adaptor: new ODataV4Adaptor\n//         });\n//         console.log(this.dataManager)\n//     }\n//\n//     render() {\n//         return (\n//             <div className=\"calendar\">\n//                 <ScheduleComponent height='550px' selectedDate={new Date()} readonly={false} eventSettings={{ dataSource: this.dataManager }}>\n//                     <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n//                 </ScheduleComponent>\n//             </div>\n//         )\n//     }\n//\n// }\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport \"./styles/Calendar.css\";\nimport { Scheduler, Appointments, AppointmentForm, AppointmentTooltip, WeekView, MonthView, EditRecurrenceMenu, AllDayPanel, ConfirmationDialog } from '@devexpress/dx-react-scheduler-material-ui';\nimport { appointments } from './data';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      currentDate: new Date().toDateString(),\n      email: 'coolmail@gmail.com',\n      addedAppointment: {},\n      appointmentChanges: {},\n      editingAppointment: undefined\n    };\n    this.commitChanges = this.commitChanges.bind(this);\n    this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\n    this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\n    this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\n  }\n\n  changeAddedAppointment(addedAppointment) {\n    this.setState({\n      addedAppointment\n    });\n  }\n\n  changeAppointmentChanges(appointmentChanges) {\n    this.setState({\n      appointmentChanges\n    });\n  }\n\n  changeEditingAppointment(editingAppointment) {\n    this.setState({\n      editingAppointment\n    });\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n\n      if (added) {\n        console.log(\"adding\");\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n        console.log(data);\n        let startTime = data[data.length - 1].startDate.toString().split(\" \")[4];\n        let endTime = data[data.length - 1].endDate.toString().split(\" \")[4];\n        let title = data[data.length - 1].title;\n        let description = data[data.length - 1].notes;\n        let startDateYear = data[data.length - 1].startDate.toString().split(\" \")[3];\n        let startDateMonth = data[data.length - 1].startDate.toString().split(\" \")[1];\n        let startDateDay = data[data.length - 1].startDate.toString().split(\" \")[2];\n        let eventStartDate = startDateYear + '-' + startDateMonth + '-' + startDateDay;\n        let endDateYear = data[data.length - 1].endDate.toString().split(\" \")[3];\n        let endDateMonth = data[data.length - 1].endDate.toString().split(\" \")[1];\n        let endDateDay = data[data.length - 1].endDate.toString().split(\" \")[2];\n        let eventEndDate = endDateYear + '-' + endDateMonth + '-' + endDateDay;\n        const eventDayAndTime = {\n          eventTitle: title,\n          eventDescription: description,\n          eventStartTime: startTime,\n          eventEndTime: endTime,\n          eventStartDate: eventStartDate,\n          eventEndDate: eventEndDate,\n          // userId: this.state.userId,\n          userEmail: this.state.email\n        }; // console.log(eventDayAndTime)\n\n        let config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n          }\n        };\n        axios.post('http://localhost:8080/event/calender/add', eventDayAndTime, config).then(response => {\n          console.log(response); // this.setState({ openSector: true });\n        }).catch(error => {\n          console.log(error);\n        }); // console.log(startDateMonth);\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment.id] ? { ...appointment,\n          ...changed[appointment.id]\n        } : appointment);\n        console.log(data);\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  getEvents() {\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.get('http://localhost:8080/event/get/calender/' + this.state.email, config).then(response => {\n      console.log(response);\n      this.setState({\n        data: response.data.object\n      });\n    }).catch(error => {\n      console.log(error); // this.setState({error : 'Error Retrieving data'})\n    }); // let datS = [];\n    // datS[0] =\n    // {\n    // title: 'Approve New Online Marketing Strategy',\n    // startDate: new Date(2021, 8, 5, 12, 15),\n    // endDate: new Date(2021, 8, 5, 13, 0),\n    // id: 7,\n    // location: 'Room 3'\n    // };\n    // this.setState({data: datS})\n  }\n\n  render() {\n    const {\n      currentDate,\n      data,\n      addedAppointment,\n      appointmentChanges,\n      editingAppointment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Scheduler, {\n          data: data,\n          height: 660,\n          children: [/*#__PURE__*/_jsxDEV(ViewState, {\n            currentDate: currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n            onCommitChanges: this.commitChanges,\n            addedAppointment: addedAppointment,\n            onAddedAppointmentChange: this.changeAddedAppointment,\n            appointmentChanges: appointmentChanges,\n            onAppointmentChangesChange: this.changeAppointmentChanges,\n            editingAppointment: editingAppointment,\n            onEditingAppointmentChange: this.changeEditingAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MonthView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AllDayPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditRecurrenceMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Appointments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n            showOpenButton: true,\n            showDeleteButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/src/views/dashboard/sidebar/Components/Calendar/Calendar.js"],"names":["React","Paper","ViewState","EditingState","Scheduler","Appointments","AppointmentForm","AppointmentTooltip","WeekView","MonthView","EditRecurrenceMenu","AllDayPanel","ConfirmationDialog","appointments","axios","Demo","PureComponent","constructor","props","state","data","currentDate","Date","toDateString","email","addedAppointment","appointmentChanges","editingAppointment","undefined","commitChanges","bind","changeAddedAppointment","changeAppointmentChanges","changeEditingAppointment","setState","added","changed","deleted","console","log","startingAddedId","length","id","startTime","startDate","toString","split","endTime","endDate","title","description","notes","startDateYear","startDateMonth","startDateDay","eventStartDate","endDateYear","endDateMonth","endDateDay","eventEndDate","eventDayAndTime","eventTitle","eventDescription","eventStartTime","eventEndTime","userEmail","config","headers","post","then","response","catch","error","map","appointment","filter","componentDidMount","getEvents","get","object","render"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gCAAxC;AACA,OAAO,uBAAP;AACA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,QALJ,EAMIC,SANJ,EAOIC,kBAPJ,EAQIC,WARJ,EASIC,kBATJ,QAUO,4CAVP;AAWA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,IAAN,SAAmBf,KAAK,CAACgB,aAAzB,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,GAAWC,YAAX,EAFJ;AAGTC,MAAAA,KAAK,EAAE,oBAHE;AAKTC,MAAAA,gBAAgB,EAAE,EALT;AAMTC,MAAAA,kBAAkB,EAAE,EANX;AAOTC,MAAAA,kBAAkB,EAAEC;AAPX,KAAb;AAUA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BF,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKG,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BH,IAA9B,CAAmC,IAAnC,CAAhC;AACH;;AAEDC,EAAAA,sBAAsB,CAACN,gBAAD,EAAmB;AACrC,SAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACH;;AAEDO,EAAAA,wBAAwB,CAACN,kBAAD,EAAqB;AACzC,SAAKQ,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd;AACH;;AAEDO,EAAAA,wBAAwB,CAACN,kBAAD,EAAqB;AACzC,SAAKO,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACH;;AAEDE,EAAAA,aAAa,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,EAA8B;AACvC,SAAKH,QAAL,CAAef,KAAD,IAAW;AACrB,UAAI;AAAEC,QAAAA;AAAF,UAAWD,KAAf;;AACA,UAAIgB,KAAJ,EAAW;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,cAAMC,eAAe,GAAGpB,IAAI,CAACqB,MAAL,GAAc,CAAd,GAAkBrB,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAc,CAAf,CAAJ,CAAsBC,EAAtB,GAA2B,CAA7C,GAAiD,CAAzE;AACAtB,QAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU;AAAEsB,UAAAA,EAAE,EAAEF,eAAN;AAAuB,aAAGL;AAA1B,SAAV,CAAP;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACA,YAAIuB,SAAS,GAAGvB,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBG,SAApB,CAA8BC,QAA9B,GAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAhB;AACA,YAAIC,OAAO,GAAG3B,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBO,OAApB,CAA4BH,QAA5B,GAAuCC,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAd;AACA,YAAIG,KAAK,GAAG7B,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBQ,KAAhC;AACA,YAAIC,WAAW,GAAG9B,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBU,KAAtC;AACA,YAAIC,aAAa,GAAGhC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBG,SAApB,CAA8BC,QAA9B,GAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAApB;AACA,YAAIO,cAAc,GAAGjC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBG,SAApB,CAA8BC,QAA9B,GAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAArB;AACA,YAAIQ,YAAY,GAAGlC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBG,SAApB,CAA8BC,QAA9B,GAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAnB;AACA,YAAIS,cAAc,GAAGH,aAAa,GAAE,GAAf,GAAqBC,cAArB,GAAsC,GAAtC,GAA4CC,YAAjE;AAEA,YAAIE,WAAW,GAAGpC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBO,OAApB,CAA4BH,QAA5B,GAAuCC,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAlB;AACA,YAAIW,YAAY,GAAGrC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBO,OAApB,CAA4BH,QAA5B,GAAuCC,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAnB;AACA,YAAIY,UAAU,GAAGtC,IAAI,CAACA,IAAI,CAACqB,MAAL,GAAY,CAAb,CAAJ,CAAoBO,OAApB,CAA4BH,QAA5B,GAAuCC,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAjB;AACA,YAAIa,YAAY,GAAGH,WAAW,GAAE,GAAb,GAAmBC,YAAnB,GAAkC,GAAlC,GAAwCC,UAA3D;AAEA,cAAME,eAAe,GAAG;AACpBC,UAAAA,UAAU,EAAEZ,KADQ;AAEpBa,UAAAA,gBAAgB,EAAEZ,WAFE;AAGpBa,UAAAA,cAAc,EAAEpB,SAHI;AAIpBqB,UAAAA,YAAY,EAAEjB,OAJM;AAKpBQ,UAAAA,cAAc,EAAEA,cALI;AAMpBI,UAAAA,YAAY,EAAEA,YANM;AAOpB;AACAM,UAAAA,SAAS,EAAG,KAAK9C,KAAL,CAAWK;AARH,SAAxB,CAnBO,CA6BP;;AAEA,YAAI0C,MAAM,GAAG;AACTC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,2CAA+B;AAF1B;AADA,SAAb;AAMArD,QAAAA,KAAK,CAACsD,IAAN,CAAW,0CAAX,EAAuDR,eAAvD,EAAwEM,MAAxE,EACKG,IADL,CACUC,QAAQ,IAAG;AACbhC,UAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ,EADa,CAEb;AACH,SAJL,EAKKC,KALL,CAKWC,KAAK,IAAG;AACXlC,UAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ;AACH,SAPL,EArCO,CA8CP;AACH;;AACD,UAAIpC,OAAJ,EAAa;AACThB,QAAAA,IAAI,GAAGA,IAAI,CAACqD,GAAL,CAASC,WAAW,IACvBtC,OAAO,CAACsC,WAAW,CAAChC,EAAb,CAAP,GAA0B,EAAE,GAAGgC,WAAL;AAAkB,aAAGtC,OAAO,CAACsC,WAAW,CAAChC,EAAb;AAA5B,SAA1B,GAA2EgC,WADxE,CAAP;AAEApC,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACH;;AACD,UAAIiB,OAAO,KAAKT,SAAhB,EAA2B;AACvBR,QAAAA,IAAI,GAAGA,IAAI,CAACuD,MAAL,CAAYD,WAAW,IAAIA,WAAW,CAAChC,EAAZ,KAAmBL,OAA9C,CAAP;AACH;;AACD,aAAO;AAAEjB,QAAAA;AAAF,OAAP;AACH,KA3DD;AA4DH;;AACDwD,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAE;AACP,QAAIX,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb;AAMArD,IAAAA,KAAK,CAACgE,GAAN,CAAU,8CAA4C,KAAK3D,KAAL,CAAWK,KAAjE,EAAyE0C,MAAzE,EACKG,IADL,CACUC,QAAQ,IAAG;AACbhC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AACA,WAAKpC,QAAL,CAAc;AAACd,QAAAA,IAAI,EAAEkD,QAAQ,CAAClD,IAAT,CAAc2D;AAArB,OAAd;AACH,KAJL,EAKKR,KALL,CAKWC,KAAK,IAAG;AACXlC,MAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ,EADW,CAEX;AACH,KARL,EAPO,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AACF3D,MAAAA,WADE;AACWD,MAAAA,IADX;AACiBK,MAAAA,gBADjB;AACmCC,MAAAA,kBADnC;AACuDC,MAAAA;AADvD,QAEF,KAAKR,KAFT;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,KAAD;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAEC,IADV;AAEI,UAAA,MAAM,EAAE,GAFZ;AAAA,kCAII,QAAC,SAAD;AACI,YAAA,WAAW,EAAEC;AADjB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,YAAD;AACI,YAAA,eAAe,EAAE,KAAKQ,aAD1B;AAEI,YAAA,gBAAgB,EAAEJ,gBAFtB;AAGI,YAAA,wBAAwB,EAAE,KAAKM,sBAHnC;AAII,YAAA,kBAAkB,EAAEL,kBAJxB;AAKI,YAAA,0BAA0B,EAAE,KAAKM,wBALrC;AAMI,YAAA,kBAAkB,EAAEL,kBANxB;AAOI,YAAA,0BAA0B,EAAE,KAAKM;AAPrC;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAoBI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAqBI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAsBI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAtBJ,eAuBI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eAwBI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAxBJ,eAyBI,QAAC,kBAAD;AACI,YAAA,cAAc,MADlB;AAEI,YAAA,gBAAgB;AAFpB;AAAA;AAAA;AAAA;AAAA,kBAzBJ,eA6BI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AAxKiD","sourcesContent":["// import React from 'react'\r\n// import \"./styles/Calendar.css\"\r\n// import { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\r\n// import { DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';\r\n//\r\n// export default class DemoApp extends React.Component {\r\n//\r\n//     constructor() {\r\n//         super(...arguments);\r\n//         this.dataManager = new DataManager({\r\n//             url: 'https://ej2services.syncfusion.com/production/web-services/api/Schedule',\r\n//             adaptor: new ODataV4Adaptor\r\n//         });\r\n//         console.log(this.dataManager)\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div className=\"calendar\">\r\n//                 <ScheduleComponent height='550px' selectedDate={new Date()} readonly={false} eventSettings={{ dataSource: this.dataManager }}>\r\n//                     <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\r\n//                 </ScheduleComponent>\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n\r\nimport * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\nimport \"./styles/Calendar.css\"\r\nimport {\r\n    Scheduler,\r\n    Appointments,\r\n    AppointmentForm,\r\n    AppointmentTooltip,\r\n    WeekView,\r\n    MonthView,\r\n    EditRecurrenceMenu,\r\n    AllDayPanel,\r\n    ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { appointments } from './data';\r\nimport axios from \"axios\";\r\n\r\nexport default class Demo extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            currentDate: new Date().toDateString(),\r\n            email: 'coolmail@gmail.com',\r\n\r\n            addedAppointment: {},\r\n            appointmentChanges: {},\r\n            editingAppointment: undefined,\r\n        };\r\n\r\n        this.commitChanges = this.commitChanges.bind(this);\r\n        this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\r\n        this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\r\n        this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\r\n    }\r\n\r\n    changeAddedAppointment(addedAppointment) {\r\n        this.setState({ addedAppointment });\r\n    }\r\n\r\n    changeAppointmentChanges(appointmentChanges) {\r\n        this.setState({ appointmentChanges });\r\n    }\r\n\r\n    changeEditingAppointment(editingAppointment) {\r\n        this.setState({ editingAppointment });\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n        this.setState((state) => {\r\n            let { data } = state;\r\n            if (added) {\r\n                console.log(\"adding\")\r\n                const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n                data = [...data, { id: startingAddedId, ...added }];\r\n                console.log(data)\r\n                let startTime = data[data.length-1].startDate.toString().split(\" \")[4];\r\n                let endTime = data[data.length-1].endDate.toString().split(\" \")[4];\r\n                let title = data[data.length-1].title;\r\n                let description = data[data.length-1].notes;\r\n                let startDateYear = data[data.length-1].startDate.toString().split(\" \")[3];\r\n                let startDateMonth = data[data.length-1].startDate.toString().split(\" \")[1];\r\n                let startDateDay = data[data.length-1].startDate.toString().split(\" \")[2];\r\n                let eventStartDate = startDateYear +'-' + startDateMonth + '-' + startDateDay;\r\n\r\n                let endDateYear = data[data.length-1].endDate.toString().split(\" \")[3];\r\n                let endDateMonth = data[data.length-1].endDate.toString().split(\" \")[1];\r\n                let endDateDay = data[data.length-1].endDate.toString().split(\" \")[2];\r\n                let eventEndDate = endDateYear +'-' + endDateMonth + '-' + endDateDay;\r\n\r\n                const eventDayAndTime = {\r\n                    eventTitle: title,\r\n                    eventDescription: description,\r\n                    eventStartTime: startTime,\r\n                    eventEndTime: endTime,\r\n                    eventStartDate: eventStartDate,\r\n                    eventEndDate: eventEndDate,\r\n                    // userId: this.state.userId,\r\n                    userEmail : this.state.email\r\n                }\r\n                // console.log(eventDayAndTime)\r\n\r\n                let config = {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        'Access-Control-Allow-Origin': '*',\r\n                    }\r\n                }\r\n                axios.post('http://localhost:8080/event/calender/add', eventDayAndTime ,config)\r\n                    .then(response =>{\r\n                        console.log(response)\r\n                        // this.setState({ openSector: true });\r\n                    })\r\n                    .catch(error =>{\r\n                        console.log(error)\r\n                    })\r\n\r\n                // console.log(startDateMonth);\r\n            }\r\n            if (changed) {\r\n                data = data.map(appointment => (\r\n                    changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n                console.log(data)\r\n            }\r\n            if (deleted !== undefined) {\r\n                data = data.filter(appointment => appointment.id !== deleted);\r\n            }\r\n            return { data };\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.getEvents();\r\n    }\r\n\r\n    getEvents(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get('http://localhost:8080/event/get/calender/'+this.state.email,  config)\r\n            .then(response =>{\r\n                console.log(response)\r\n                this.setState({data: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n                // this.setState({error : 'Error Retrieving data'})\r\n            })\r\n        // let datS = [];\r\n        // datS[0] =\r\n        // {\r\n        // title: 'Approve New Online Marketing Strategy',\r\n        // startDate: new Date(2021, 8, 5, 12, 15),\r\n        // endDate: new Date(2021, 8, 5, 13, 0),\r\n        // id: 7,\r\n        // location: 'Room 3'\r\n        // };\r\n        // this.setState({data: datS})\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentDate, data, addedAppointment, appointmentChanges, editingAppointment,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"calendar\">\r\n                <Paper>\r\n                    <Scheduler\r\n                        data={data}\r\n                        height={660}\r\n                    >\r\n                        <ViewState\r\n                            currentDate={currentDate}\r\n                        />\r\n                        <EditingState\r\n                            onCommitChanges={this.commitChanges}\r\n                            addedAppointment={addedAppointment}\r\n                            onAddedAppointmentChange={this.changeAddedAppointment}\r\n                            appointmentChanges={appointmentChanges}\r\n                            onAppointmentChangesChange={this.changeAppointmentChanges}\r\n                            editingAppointment={editingAppointment}\r\n                            onEditingAppointmentChange={this.changeEditingAppointment}\r\n                        />\r\n                        {/*<WeekView*/}\r\n                        {/*    startDayHour={9}*/}\r\n                        {/*    endDayHour={17}*/}\r\n                        {/*/>*/}\r\n                        <MonthView />\r\n                        <AllDayPanel />\r\n                        <EditRecurrenceMenu />\r\n                        <ConfirmationDialog />\r\n                        <Appointments />\r\n                        <AppointmentTooltip\r\n                            showOpenButton\r\n                            showDeleteButton\r\n                        />\r\n                        <AppointmentForm />\r\n                    </Scheduler>\r\n                </Paper>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}