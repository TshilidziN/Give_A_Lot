{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass Lane extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      loading: false,\n      currentPage: this.props.currentPage,\n      addCardMode: false,\n      collapsed: false,\n      isDraggingOver: false\n    });\n    (0, _defineProperty2.default)(this, \"handleScroll\", evt => {\n      const node = evt.target;\n      const elemScrollPosition = node.scrollHeight - node.scrollTop - node.clientHeight;\n      const onLaneScroll = this.props.onLaneScroll; // In some browsers and/or screen sizes a decimal rest value between 0 and 1 exists, so it should be checked on < 1 instead of < 0\n\n      if (elemScrollPosition < 1 && onLaneScroll && !this.state.loading) {\n        const currentPage = this.state.currentPage;\n        this.setState({\n          loading: true\n        });\n        const nextPage = currentPage + 1;\n        onLaneScroll(nextPage, this.props.id).then(moreCards => {\n          if ((moreCards || []).length > 0) {\n            this.props.actions.paginateLane({\n              laneId: this.props.id,\n              newCards: moreCards,\n              nextPage: nextPage\n            });\n          }\n\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"laneDidMount\", node => {\n      if (node) {\n        node.addEventListener('scroll', this.handleScroll);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"removeCard\", cardId => {\n      if (this.props.onBeforeCardDelete && typeof this.props.onBeforeCardDelete === 'function') {\n        this.props.onBeforeCardDelete(() => {\n          this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n          this.props.actions.removeCard({\n            laneId: this.props.id,\n            cardId: cardId\n          });\n        });\n      } else {\n        this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n        this.props.actions.removeCard({\n          laneId: this.props.id,\n          cardId: cardId\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"handleCardClick\", (e, card) => {\n      const onCardClick = this.props.onCardClick;\n      onCardClick && onCardClick(card.id, card.metadata, card.laneId);\n      e.stopPropagation();\n    });\n    (0, _defineProperty2.default)(this, \"showEditableCard\", () => {\n      this.setState({\n        addCardMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableCard\", () => {\n      this.setState({\n        addCardMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewCard\", params => {\n      const laneId = this.props.id;\n      const id = (0, _v.default)();\n      this.hideEditableCard();\n      let card = (0, _objectSpread2.default)({\n        id\n      }, params);\n      this.props.actions.addCard({\n        laneId,\n        card\n      });\n      this.props.onCardAdd(card, laneId);\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleDragStart = this.props.handleDragStart;\n      handleDragStart && handleDragStart(payload.id, payload.laneId);\n    });\n    (0, _defineProperty2.default)(this, \"shouldAcceptDrop\", sourceContainerOptions => {\n      return this.props.droppable && sourceContainerOptions.groupName === this.groupName;\n    });\n    (0, _defineProperty2.default)(this, \"onDragEnd\", (laneId, result) => {\n      const handleDragEnd = this.props.handleDragEnd;\n      const addedIndex = result.addedIndex,\n            payload = result.payload;\n\n      if (this.state.isDraggingOver) {\n        this.setState({\n          isDraggingOver: false\n        });\n      }\n\n      if (addedIndex != null) {\n        const newCard = (0, _objectSpread2.default)({}, (0, _cloneDeep.default)(payload), {\n          laneId\n        });\n        const response = handleDragEnd ? handleDragEnd(payload.id, payload.laneId, laneId, addedIndex, newCard) : true;\n\n        if (response === undefined || !!response) {\n          this.props.actions.moveCardAcrossLanes({\n            fromLaneId: payload.laneId,\n            toLaneId: laneId,\n            cardId: payload.id,\n            index: addedIndex\n          });\n          this.props.onCardMoveAcrossLanes(payload.laneId, laneId, payload.id, addedIndex);\n        }\n\n        return response;\n      }\n    });\n    (0, _defineProperty2.default)(this, \"updateCard\", updatedCard => {\n      this.props.actions.updateCard({\n        laneId: this.props.id,\n        card: updatedCard\n      });\n      this.props.onCardUpdate(this.props.id, updatedCard);\n    });\n    (0, _defineProperty2.default)(this, \"renderDragContainer\", isDraggingOver => {\n      const _this$props = this.props,\n            id = _this$props.id,\n            cards = _this$props.cards,\n            laneSortFunction = _this$props.laneSortFunction,\n            editable = _this$props.editable,\n            hideCardDeleteIcon = _this$props.hideCardDeleteIcon,\n            cardDraggable = _this$props.cardDraggable,\n            cardDragClass = _this$props.cardDragClass,\n            cardDropClass = _this$props.cardDropClass,\n            tagStyle = _this$props.tagStyle,\n            cardStyle = _this$props.cardStyle,\n            components = _this$props.components,\n            t = _this$props.t;\n      const _this$state = this.state,\n            addCardMode = _this$state.addCardMode,\n            collapsed = _this$state.collapsed;\n      const showableCards = collapsed ? [] : cards;\n      const cardList = this.sortCards(showableCards, laneSortFunction).map((card, idx) => {\n        const onDeleteCard = () => this.removeCard(card.id);\n\n        const cardToRender = _react.default.createElement(components.Card, (0, _extends2.default)({\n          key: card.id,\n          index: idx,\n          style: card.style || cardStyle,\n          className: \"react-trello-card\",\n          onDelete: onDeleteCard,\n          onClick: e => this.handleCardClick(e, card),\n          onChange: updatedCard => this.updateCard(updatedCard),\n          showDeleteButton: !hideCardDeleteIcon,\n          tagStyle: tagStyle,\n          cardDraggable: cardDraggable,\n          editable: editable,\n          t: t\n        }, card));\n\n        return cardDraggable && (!card.hasOwnProperty('draggable') || card.draggable) ? _react.default.createElement(_Draggable.default, {\n          key: card.id\n        }, cardToRender) : _react.default.createElement(\"span\", {\n          key: card.id\n        }, cardToRender);\n      });\n      return _react.default.createElement(components.ScrollableLane, {\n        ref: this.laneDidMount,\n        isDraggingOver: isDraggingOver\n      }, _react.default.createElement(_Container.default, {\n        orientation: \"vertical\",\n        groupName: this.groupName,\n        dragClass: cardDragClass,\n        dropClass: cardDropClass,\n        onDragStart: this.onDragStart,\n        onDrop: e => this.onDragEnd(id, e),\n        onDragEnter: () => this.setState({\n          isDraggingOver: true\n        }),\n        onDragLeave: () => this.setState({\n          isDraggingOver: false\n        }),\n        shouldAcceptDrop: this.shouldAcceptDrop,\n        getChildPayload: index => this.props.getCardDetails(id, index)\n      }, cardList), editable && !addCardMode && _react.default.createElement(components.AddCardLink, {\n        onClick: this.showEditableCard,\n        t: t,\n        laneId: id\n      }), addCardMode && _react.default.createElement(components.NewCardForm, {\n        onCancel: this.hideEditableCard,\n        t: t,\n        laneId: id,\n        onAdd: this.addNewCard\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"removeLane\", () => {\n      const id = this.props.id;\n      this.props.actions.removeLane({\n        laneId: id\n      });\n      this.props.onLaneDelete(id);\n    });\n    (0, _defineProperty2.default)(this, \"updateTitle\", value => {\n      this.props.actions.updateLane({\n        id: this.props.id,\n        title: value\n      });\n      this.props.onLaneUpdate(this.props.id, {\n        title: value\n      });\n    });\n    (0, _defineProperty2.default)(this, \"renderHeader\", pickedProps => {\n      const components = this.props.components;\n      return _react.default.createElement(components.LaneHeader, (0, _extends2.default)({}, pickedProps, {\n        onDelete: this.removeLane,\n        onDoubleClick: this.toggleLaneCollapsed,\n        updateTitle: this.updateTitle\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"toggleLaneCollapsed\", () => {\n      this.props.collapsibleLanes && this.setState(state => ({\n        collapsed: !state.collapsed\n      }));\n    });\n  }\n\n  sortCards(cards, sortFunction) {\n    if (!cards) return [];\n    if (!sortFunction) return cards;\n    return cards.concat().sort(function (card1, card2) {\n      return sortFunction(card1, card2);\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _isEqual.default)(this.props.cards, nextProps.cards)) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n    }\n  }\n\n  get groupName() {\n    const boardId = this.props.boardId;\n    return \"TrelloBoard\".concat(boardId, \"Lane\");\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loading = _this$state2.loading,\n          isDraggingOver = _this$state2.isDraggingOver,\n          collapsed = _this$state2.collapsed;\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          cards = _this$props2.cards,\n          collapsibleLanes = _this$props2.collapsibleLanes,\n          components = _this$props2.components,\n          onLaneClick = _this$props2.onLaneClick,\n          onLaneScroll = _this$props2.onLaneScroll,\n          onCardClick = _this$props2.onCardClick,\n          onCardAdd = _this$props2.onCardAdd,\n          onBeforeCardDelete = _this$props2.onBeforeCardDelete,\n          onCardDelete = _this$props2.onCardDelete,\n          onLaneDelete = _this$props2.onLaneDelete,\n          onLaneUpdate = _this$props2.onLaneUpdate,\n          onCardUpdate = _this$props2.onCardUpdate,\n          onCardMoveAcrossLanes = _this$props2.onCardMoveAcrossLanes,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"id\", \"cards\", \"collapsibleLanes\", \"components\", \"onLaneClick\", \"onLaneScroll\", \"onCardClick\", \"onCardAdd\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneDelete\", \"onLaneUpdate\", \"onCardUpdate\", \"onCardMoveAcrossLanes\"]);\n    const allClassNames = (0, _classnames.default)('react-trello-lane', this.props.className || '');\n    const showFooter = collapsibleLanes && cards.length > 0;\n    return _react.default.createElement(components.Section, (0, _extends2.default)({}, otherProps, {\n      key: id,\n      onClick: () => onLaneClick && onLaneClick(id),\n      draggable: false,\n      className: allClassNames\n    }), this.renderHeader((0, _objectSpread2.default)({\n      id,\n      cards\n    }, otherProps)), this.renderDragContainer(isDraggingOver), loading && _react.default.createElement(components.Loader, null), showFooter && _react.default.createElement(components.LaneFooter, {\n      onClick: this.toggleLaneCollapsed,\n      collapsed: collapsed\n    }));\n  }\n\n}\n\nLane.propTypes = {\n  actions: _propTypes.default.object,\n  id: _propTypes.default.string.isRequired,\n  boardId: _propTypes.default.string,\n  title: _propTypes.default.node,\n  index: _propTypes.default.number,\n  laneSortFunction: _propTypes.default.func,\n  style: _propTypes.default.object,\n  cardStyle: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  titleStyle: _propTypes.default.object,\n  labelStyle: _propTypes.default.object,\n  cards: _propTypes.default.array,\n  label: _propTypes.default.string,\n  currentPage: _propTypes.default.number,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  droppable: _propTypes.default.bool,\n  onCardMoveAcrossLanes: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  editable: _propTypes.default.bool,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  cardDropClass: _propTypes.default.string,\n  canAddLanes: _propTypes.default.bool,\n  t: _propTypes.default.func.isRequired\n};\nLane.defaultProps = {\n  style: {},\n  titleStyle: {},\n  labelStyle: {},\n  label: undefined,\n  editable: false,\n  onLaneUpdate: () => {},\n  onCardAdd: () => {},\n  onCardUpdate: () => {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)(laneActions, dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Lane);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/node_modules/react-trello/dist/controllers/Lane.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectWithoutProperties2","_extends2","_objectSpread2","_defineProperty2","_react","_classnames","_propTypes","_redux","_reactRedux","_isEqual","_cloneDeep","_pick","_v","_Container","_Draggable","laneActions","Lane","Component","constructor","args","loading","currentPage","props","addCardMode","collapsed","isDraggingOver","evt","node","target","elemScrollPosition","scrollHeight","scrollTop","clientHeight","onLaneScroll","state","setState","nextPage","id","then","moreCards","length","actions","paginateLane","laneId","newCards","addEventListener","handleScroll","cardId","onBeforeCardDelete","onCardDelete","removeCard","e","card","onCardClick","metadata","stopPropagation","params","hideEditableCard","addCard","onCardAdd","payload","handleDragStart","sourceContainerOptions","droppable","groupName","result","handleDragEnd","addedIndex","newCard","response","undefined","moveCardAcrossLanes","fromLaneId","toLaneId","index","onCardMoveAcrossLanes","updatedCard","updateCard","onCardUpdate","_this$props","cards","laneSortFunction","editable","hideCardDeleteIcon","cardDraggable","cardDragClass","cardDropClass","tagStyle","cardStyle","components","t","_this$state","showableCards","cardList","sortCards","map","idx","onDeleteCard","cardToRender","createElement","Card","key","style","className","onDelete","onClick","handleCardClick","onChange","showDeleteButton","hasOwnProperty","draggable","ScrollableLane","ref","laneDidMount","orientation","dragClass","dropClass","onDragStart","onDrop","onDragEnd","onDragEnter","onDragLeave","shouldAcceptDrop","getChildPayload","getCardDetails","AddCardLink","showEditableCard","NewCardForm","onCancel","onAdd","addNewCard","removeLane","onLaneDelete","updateLane","title","onLaneUpdate","pickedProps","LaneHeader","onDoubleClick","toggleLaneCollapsed","updateTitle","collapsibleLanes","sortFunction","concat","sort","card1","card2","UNSAFE_componentWillReceiveProps","nextProps","boardId","render","_this$state2","_this$props2","onLaneClick","otherProps","allClassNames","showFooter","Section","renderHeader","renderDragContainer","Loader","LaneFooter","propTypes","object","string","isRequired","number","func","titleStyle","labelStyle","array","label","bool","laneDraggable","canAddLanes","defaultProps","mapDispatchToProps","dispatch","bindActionCreators","_default","connect"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAAD,CAApC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,yBAAyB,GAAGN,sBAAsB,CAACD,OAAO,CAAC,gDAAD,CAAR,CAAtD;;AAEA,IAAIQ,SAAS,GAAGP,sBAAsB,CAACD,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIS,cAAc,GAAGR,sBAAsB,CAACD,OAAO,CAAC,qCAAD,CAAR,CAA3C;;AAEA,IAAIU,gBAAgB,GAAGT,sBAAsB,CAACD,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIW,MAAM,GAAGZ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAApC;;AAEA,IAAIY,WAAW,GAAGX,sBAAsB,CAACD,OAAO,CAAC,YAAD,CAAR,CAAxC;;AAEA,IAAIa,UAAU,GAAGZ,sBAAsB,CAACD,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIc,MAAM,GAAGd,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIe,WAAW,GAAGf,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIgB,QAAQ,GAAGf,sBAAsB,CAACD,OAAO,CAAC,gBAAD,CAAR,CAArC;;AAEA,IAAIiB,UAAU,GAAGhB,sBAAsB,CAACD,OAAO,CAAC,kBAAD,CAAR,CAAvC;;AAEA,IAAIkB,KAAK,GAAGjB,sBAAsB,CAACD,OAAO,CAAC,aAAD,CAAR,CAAlC;;AAEA,IAAImB,EAAE,GAAGlB,sBAAsB,CAACD,OAAO,CAAC,SAAD,CAAR,CAA/B;;AAEA,IAAIoB,UAAU,GAAGnB,sBAAsB,CAACD,OAAO,CAAC,kBAAD,CAAR,CAAvC;;AAEA,IAAIqB,UAAU,GAAGpB,sBAAsB,CAACD,OAAO,CAAC,kBAAD,CAAR,CAAvC;;AAEA,IAAIsB,WAAW,GAAGvB,uBAAuB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAzC;;AAEA,MAAMuB,IAAN,SAAmBZ,MAAM,CAACa,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,KAAC,GAAGhB,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,OAApC,EAA6C;AAC3CqB,MAAAA,OAAO,EAAE,KADkC;AAE3CC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAFmB;AAG3CE,MAAAA,WAAW,EAAE,KAH8B;AAI3CC,MAAAA,SAAS,EAAE,KAJgC;AAK3CC,MAAAA,cAAc,EAAE;AAL2B,KAA7C;AAOA,KAAC,GAAGtB,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,cAApC,EAAoD2B,GAAG,IAAI;AACzD,YAAMC,IAAI,GAAGD,GAAG,CAACE,MAAjB;AACA,YAAMC,kBAAkB,GAAGF,IAAI,CAACG,YAAL,GAAoBH,IAAI,CAACI,SAAzB,GAAqCJ,IAAI,CAACK,YAArE;AACA,YAAMC,YAAY,GAAG,KAAKX,KAAL,CAAWW,YAAhC,CAHyD,CAGX;;AAE9C,UAAIJ,kBAAkB,GAAG,CAArB,IAA0BI,YAA1B,IAA0C,CAAC,KAAKC,KAAL,CAAWd,OAA1D,EAAmE;AACjE,cAAMC,WAAW,GAAG,KAAKa,KAAL,CAAWb,WAA/B;AACA,aAAKc,QAAL,CAAc;AACZf,UAAAA,OAAO,EAAE;AADG,SAAd;AAGA,cAAMgB,QAAQ,GAAGf,WAAW,GAAG,CAA/B;AACAY,QAAAA,YAAY,CAACG,QAAD,EAAW,KAAKd,KAAL,CAAWe,EAAtB,CAAZ,CAAsCC,IAAtC,CAA2CC,SAAS,IAAI;AACtD,cAAI,CAACA,SAAS,IAAI,EAAd,EAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,iBAAKlB,KAAL,CAAWmB,OAAX,CAAmBC,YAAnB,CAAgC;AAC9BC,cAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWe,EADW;AAE9BO,cAAAA,QAAQ,EAAEL,SAFoB;AAG9BH,cAAAA,QAAQ,EAAEA;AAHoB,aAAhC;AAKD;;AAED,eAAKD,QAAL,CAAc;AACZf,YAAAA,OAAO,EAAE;AADG,WAAd;AAGD,SAZD;AAaD;AACF,KAzBD;AA0BA,KAAC,GAAGjB,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,cAApC,EAAoD4B,IAAI,IAAI;AAC1D,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACkB,gBAAL,CAAsB,QAAtB,EAAgC,KAAKC,YAArC;AACD;AACF,KAJD;AAKA,KAAC,GAAG3C,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,YAApC,EAAkDgD,MAAM,IAAI;AAC1D,UAAI,KAAKzB,KAAL,CAAW0B,kBAAX,IAAiC,OAAO,KAAK1B,KAAL,CAAW0B,kBAAlB,KAAyC,UAA9E,EAA0F;AACxF,aAAK1B,KAAL,CAAW0B,kBAAX,CAA8B,MAAM;AAClC,eAAK1B,KAAL,CAAW2B,YAAX,IAA2B,KAAK3B,KAAL,CAAW2B,YAAX,CAAwBF,MAAxB,EAAgC,KAAKzB,KAAL,CAAWe,EAA3C,CAA3B;AACA,eAAKf,KAAL,CAAWmB,OAAX,CAAmBS,UAAnB,CAA8B;AAC5BP,YAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWe,EADS;AAE5BU,YAAAA,MAAM,EAAEA;AAFoB,WAA9B;AAID,SAND;AAOD,OARD,MAQO;AACL,aAAKzB,KAAL,CAAW2B,YAAX,IAA2B,KAAK3B,KAAL,CAAW2B,YAAX,CAAwBF,MAAxB,EAAgC,KAAKzB,KAAL,CAAWe,EAA3C,CAA3B;AACA,aAAKf,KAAL,CAAWmB,OAAX,CAAmBS,UAAnB,CAA8B;AAC5BP,UAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWe,EADS;AAE5BU,UAAAA,MAAM,EAAEA;AAFoB,SAA9B;AAID;AACF,KAhBD;AAiBA,KAAC,GAAG5C,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,iBAApC,EAAuD,CAACoD,CAAD,EAAIC,IAAJ,KAAa;AAClE,YAAMC,WAAW,GAAG,KAAK/B,KAAL,CAAW+B,WAA/B;AACAA,MAAAA,WAAW,IAAIA,WAAW,CAACD,IAAI,CAACf,EAAN,EAAUe,IAAI,CAACE,QAAf,EAAyBF,IAAI,CAACT,MAA9B,CAA1B;AACAQ,MAAAA,CAAC,CAACI,eAAF;AACD,KAJD;AAKA,KAAC,GAAGpD,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,kBAApC,EAAwD,MAAM;AAC5D,WAAKoC,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAJD;AAKA,KAAC,GAAGpB,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,kBAApC,EAAwD,MAAM;AAC5D,WAAKoC,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAJD;AAKA,KAAC,GAAGpB,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,YAApC,EAAkDyD,MAAM,IAAI;AAC1D,YAAMb,MAAM,GAAG,KAAKrB,KAAL,CAAWe,EAA1B;AACA,YAAMA,EAAE,GAAG,CAAC,GAAGzB,EAAE,CAACb,OAAP,GAAX;AACA,WAAK0D,gBAAL;AACA,UAAIL,IAAI,GAAG,CAAC,GAAGlD,cAAc,CAACH,OAAnB,EAA4B;AACrCsC,QAAAA;AADqC,OAA5B,EAERmB,MAFQ,CAAX;AAGA,WAAKlC,KAAL,CAAWmB,OAAX,CAAmBiB,OAAnB,CAA2B;AACzBf,QAAAA,MADyB;AAEzBS,QAAAA;AAFyB,OAA3B;AAIA,WAAK9B,KAAL,CAAWqC,SAAX,CAAqBP,IAArB,EAA2BT,MAA3B;AACD,KAZD;AAaA,KAAC,GAAGxC,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,aAApC,EAAmD,CAAC;AAClD6D,MAAAA;AADkD,KAAD,KAE7C;AACJ,YAAMC,eAAe,GAAG,KAAKvC,KAAL,CAAWuC,eAAnC;AACAA,MAAAA,eAAe,IAAIA,eAAe,CAACD,OAAO,CAACvB,EAAT,EAAauB,OAAO,CAACjB,MAArB,CAAlC;AACD,KALD;AAMA,KAAC,GAAGxC,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,kBAApC,EAAwD+D,sBAAsB,IAAI;AAChF,aAAO,KAAKxC,KAAL,CAAWyC,SAAX,IAAwBD,sBAAsB,CAACE,SAAvB,KAAqC,KAAKA,SAAzE;AACD,KAFD;AAGA,KAAC,GAAG7D,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,WAApC,EAAiD,CAAC4C,MAAD,EAASsB,MAAT,KAAoB;AACnE,YAAMC,aAAa,GAAG,KAAK5C,KAAL,CAAW4C,aAAjC;AACA,YAAMC,UAAU,GAAGF,MAAM,CAACE,UAA1B;AAAA,YACMP,OAAO,GAAGK,MAAM,CAACL,OADvB;;AAGA,UAAI,KAAK1B,KAAL,CAAWT,cAAf,EAA+B;AAC7B,aAAKU,QAAL,CAAc;AACZV,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGD;;AAED,UAAI0C,UAAU,IAAI,IAAlB,EAAwB;AACtB,cAAMC,OAAO,GAAG,CAAC,GAAGlE,cAAc,CAACH,OAAnB,EAA4B,EAA5B,EAAgC,CAAC,GAAGW,UAAU,CAACX,OAAf,EAAwB6D,OAAxB,CAAhC,EAAkE;AAChFjB,UAAAA;AADgF,SAAlE,CAAhB;AAGA,cAAM0B,QAAQ,GAAGH,aAAa,GAAGA,aAAa,CAACN,OAAO,CAACvB,EAAT,EAAauB,OAAO,CAACjB,MAArB,EAA6BA,MAA7B,EAAqCwB,UAArC,EAAiDC,OAAjD,CAAhB,GAA4E,IAA1G;;AAEA,YAAIC,QAAQ,KAAKC,SAAb,IAA0B,CAAC,CAACD,QAAhC,EAA0C;AACxC,eAAK/C,KAAL,CAAWmB,OAAX,CAAmB8B,mBAAnB,CAAuC;AACrCC,YAAAA,UAAU,EAAEZ,OAAO,CAACjB,MADiB;AAErC8B,YAAAA,QAAQ,EAAE9B,MAF2B;AAGrCI,YAAAA,MAAM,EAAEa,OAAO,CAACvB,EAHqB;AAIrCqC,YAAAA,KAAK,EAAEP;AAJ8B,WAAvC;AAMA,eAAK7C,KAAL,CAAWqD,qBAAX,CAAiCf,OAAO,CAACjB,MAAzC,EAAiDA,MAAjD,EAAyDiB,OAAO,CAACvB,EAAjE,EAAqE8B,UAArE;AACD;;AAED,eAAOE,QAAP;AACD;AACF,KA7BD;AA8BA,KAAC,GAAGlE,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,YAApC,EAAkD6E,WAAW,IAAI;AAC/D,WAAKtD,KAAL,CAAWmB,OAAX,CAAmBoC,UAAnB,CAA8B;AAC5BlC,QAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWe,EADS;AAE5Be,QAAAA,IAAI,EAAEwB;AAFsB,OAA9B;AAIA,WAAKtD,KAAL,CAAWwD,YAAX,CAAwB,KAAKxD,KAAL,CAAWe,EAAnC,EAAuCuC,WAAvC;AACD,KAND;AAOA,KAAC,GAAGzE,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,qBAApC,EAA2D0B,cAAc,IAAI;AAC3E,YAAMsD,WAAW,GAAG,KAAKzD,KAAzB;AAAA,YACMe,EAAE,GAAG0C,WAAW,CAAC1C,EADvB;AAAA,YAEM2C,KAAK,GAAGD,WAAW,CAACC,KAF1B;AAAA,YAGMC,gBAAgB,GAAGF,WAAW,CAACE,gBAHrC;AAAA,YAIMC,QAAQ,GAAGH,WAAW,CAACG,QAJ7B;AAAA,YAKMC,kBAAkB,GAAGJ,WAAW,CAACI,kBALvC;AAAA,YAMMC,aAAa,GAAGL,WAAW,CAACK,aANlC;AAAA,YAOMC,aAAa,GAAGN,WAAW,CAACM,aAPlC;AAAA,YAQMC,aAAa,GAAGP,WAAW,CAACO,aARlC;AAAA,YASMC,QAAQ,GAAGR,WAAW,CAACQ,QAT7B;AAAA,YAUMC,SAAS,GAAGT,WAAW,CAACS,SAV9B;AAAA,YAWMC,UAAU,GAAGV,WAAW,CAACU,UAX/B;AAAA,YAYMC,CAAC,GAAGX,WAAW,CAACW,CAZtB;AAaA,YAAMC,WAAW,GAAG,KAAKzD,KAAzB;AAAA,YACMX,WAAW,GAAGoE,WAAW,CAACpE,WADhC;AAAA,YAEMC,SAAS,GAAGmE,WAAW,CAACnE,SAF9B;AAGA,YAAMoE,aAAa,GAAGpE,SAAS,GAAG,EAAH,GAAQwD,KAAvC;AACA,YAAMa,QAAQ,GAAG,KAAKC,SAAL,CAAeF,aAAf,EAA8BX,gBAA9B,EAAgDc,GAAhD,CAAoD,CAAC3C,IAAD,EAAO4C,GAAP,KAAe;AAClF,cAAMC,YAAY,GAAG,MAAM,KAAK/C,UAAL,CAAgBE,IAAI,CAACf,EAArB,CAA3B;;AAEA,cAAM6D,YAAY,GAAG9F,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACW,IAAxC,EAA8C,CAAC,GAAGnG,SAAS,CAACF,OAAd,EAAuB;AACxFsG,UAAAA,GAAG,EAAEjD,IAAI,CAACf,EAD8E;AAExFqC,UAAAA,KAAK,EAAEsB,GAFiF;AAGxFM,UAAAA,KAAK,EAAElD,IAAI,CAACkD,KAAL,IAAcd,SAHmE;AAIxFe,UAAAA,SAAS,EAAE,mBAJ6E;AAKxFC,UAAAA,QAAQ,EAAEP,YAL8E;AAMxFQ,UAAAA,OAAO,EAAEtD,CAAC,IAAI,KAAKuD,eAAL,CAAqBvD,CAArB,EAAwBC,IAAxB,CAN0E;AAOxFuD,UAAAA,QAAQ,EAAE/B,WAAW,IAAI,KAAKC,UAAL,CAAgBD,WAAhB,CAP+D;AAQxFgC,UAAAA,gBAAgB,EAAE,CAACzB,kBARqE;AASxFI,UAAAA,QAAQ,EAAEA,QAT8E;AAUxFH,UAAAA,aAAa,EAAEA,aAVyE;AAWxFF,UAAAA,QAAQ,EAAEA,QAX8E;AAYxFQ,UAAAA,CAAC,EAAEA;AAZqF,SAAvB,EAahEtC,IAbgE,CAA9C,CAArB;;AAeA,eAAOgC,aAAa,KAAK,CAAChC,IAAI,CAACyD,cAAL,CAAoB,WAApB,CAAD,IAAqCzD,IAAI,CAAC0D,SAA/C,CAAb,GAAyE1G,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BrF,UAAU,CAACf,OAAxC,EAAiD;AAC/HsG,UAAAA,GAAG,EAAEjD,IAAI,CAACf;AADqH,SAAjD,EAE7E6D,YAF6E,CAAzE,GAEY9F,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6B,MAA7B,EAAqC;AACtDE,UAAAA,GAAG,EAAEjD,IAAI,CAACf;AAD4C,SAArC,EAEhB6D,YAFgB,CAFnB;AAKD,OAvBgB,CAAjB;AAwBA,aAAO9F,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACsB,cAAxC,EAAwD;AAC7DC,QAAAA,GAAG,EAAE,KAAKC,YADmD;AAE7DxF,QAAAA,cAAc,EAAEA;AAF6C,OAAxD,EAGJrB,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BtF,UAAU,CAACd,OAAxC,EAAiD;AAClDmH,QAAAA,WAAW,EAAE,UADqC;AAElDlD,QAAAA,SAAS,EAAE,KAAKA,SAFkC;AAGlDmD,QAAAA,SAAS,EAAE9B,aAHuC;AAIlD+B,QAAAA,SAAS,EAAE9B,aAJuC;AAKlD+B,QAAAA,WAAW,EAAE,KAAKA,WALgC;AAMlDC,QAAAA,MAAM,EAAEnE,CAAC,IAAI,KAAKoE,SAAL,CAAelF,EAAf,EAAmBc,CAAnB,CANqC;AAOlDqE,QAAAA,WAAW,EAAE,MAAM,KAAKrF,QAAL,CAAc;AAC/BV,UAAAA,cAAc,EAAE;AADe,SAAd,CAP+B;AAUlDgG,QAAAA,WAAW,EAAE,MAAM,KAAKtF,QAAL,CAAc;AAC/BV,UAAAA,cAAc,EAAE;AADe,SAAd,CAV+B;AAalDiG,QAAAA,gBAAgB,EAAE,KAAKA,gBAb2B;AAclDC,QAAAA,eAAe,EAAEjD,KAAK,IAAI,KAAKpD,KAAL,CAAWsG,cAAX,CAA0BvF,EAA1B,EAA8BqC,KAA9B;AAdwB,OAAjD,EAeAmB,QAfA,CAHI,EAkBOX,QAAQ,IAAI,CAAC3D,WAAb,IAA4BnB,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACoC,WAAxC,EAAqD;AAC7FpB,QAAAA,OAAO,EAAE,KAAKqB,gBAD+E;AAE7FpC,QAAAA,CAAC,EAAEA,CAF0F;AAG7F/C,QAAAA,MAAM,EAAEN;AAHqF,OAArD,CAlBnC,EAsBHd,WAAW,IAAInB,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACsC,WAAxC,EAAqD;AACtEC,QAAAA,QAAQ,EAAE,KAAKvE,gBADuD;AAEtEiC,QAAAA,CAAC,EAAEA,CAFmE;AAGtE/C,QAAAA,MAAM,EAAEN,EAH8D;AAItE4F,QAAAA,KAAK,EAAE,KAAKC;AAJ0D,OAArD,CAtBZ,CAAP;AA4BD,KAtED;AAuEA,KAAC,GAAG/H,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,YAApC,EAAkD,MAAM;AACtD,YAAMsC,EAAE,GAAG,KAAKf,KAAL,CAAWe,EAAtB;AACA,WAAKf,KAAL,CAAWmB,OAAX,CAAmB0F,UAAnB,CAA8B;AAC5BxF,QAAAA,MAAM,EAAEN;AADoB,OAA9B;AAGA,WAAKf,KAAL,CAAW8G,YAAX,CAAwB/F,EAAxB;AACD,KAND;AAOA,KAAC,GAAGlC,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,aAApC,EAAmDD,KAAK,IAAI;AAC1D,WAAKwB,KAAL,CAAWmB,OAAX,CAAmB4F,UAAnB,CAA8B;AAC5BhG,QAAAA,EAAE,EAAE,KAAKf,KAAL,CAAWe,EADa;AAE5BiG,QAAAA,KAAK,EAAExI;AAFqB,OAA9B;AAIA,WAAKwB,KAAL,CAAWiH,YAAX,CAAwB,KAAKjH,KAAL,CAAWe,EAAnC,EAAuC;AACrCiG,QAAAA,KAAK,EAAExI;AAD8B,OAAvC;AAGD,KARD;AASA,KAAC,GAAGK,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,cAApC,EAAoDyI,WAAW,IAAI;AACjE,YAAM/C,UAAU,GAAG,KAAKnE,KAAL,CAAWmE,UAA9B;AACA,aAAOrF,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACgD,UAAxC,EAAoD,CAAC,GAAGxI,SAAS,CAACF,OAAd,EAAuB,EAAvB,EAA2ByI,WAA3B,EAAwC;AACjGhC,QAAAA,QAAQ,EAAE,KAAK2B,UADkF;AAEjGO,QAAAA,aAAa,EAAE,KAAKC,mBAF6E;AAGjGC,QAAAA,WAAW,EAAE,KAAKA;AAH+E,OAAxC,CAApD,CAAP;AAKD,KAPD;AAQA,KAAC,GAAGzI,gBAAgB,CAACJ,OAArB,EAA8B,IAA9B,EAAoC,qBAApC,EAA2D,MAAM;AAC/D,WAAKuB,KAAL,CAAWuH,gBAAX,IAA+B,KAAK1G,QAAL,CAAcD,KAAK,KAAK;AACrDV,QAAAA,SAAS,EAAE,CAACU,KAAK,CAACV;AADmC,OAAL,CAAnB,CAA/B;AAGD,KAJD;AAKD;;AAEDsE,EAAAA,SAAS,CAACd,KAAD,EAAQ8D,YAAR,EAAsB;AAC7B,QAAI,CAAC9D,KAAL,EAAY,OAAO,EAAP;AACZ,QAAI,CAAC8D,YAAL,EAAmB,OAAO9D,KAAP;AACnB,WAAOA,KAAK,CAAC+D,MAAN,GAAeC,IAAf,CAAoB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACjD,aAAOJ,YAAY,CAACG,KAAD,EAAQC,KAAR,CAAnB;AACD,KAFM,CAAP;AAGD;;AAEDC,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AAC1C,QAAI,CAAC,CAAC,GAAG3I,QAAQ,CAACV,OAAb,EAAsB,KAAKuB,KAAL,CAAW0D,KAAjC,EAAwCoE,SAAS,CAACpE,KAAlD,CAAL,EAA+D;AAC7D,WAAK7C,QAAL,CAAc;AACZd,QAAAA,WAAW,EAAE+H,SAAS,CAAC/H;AADX,OAAd;AAGD;AACF;;AAEY,MAAT2C,SAAS,GAAG;AACd,UAAMqF,OAAO,GAAG,KAAK/H,KAAL,CAAW+H,OAA3B;AACA,WAAO,cAAcN,MAAd,CAAqBM,OAArB,EAA8B,MAA9B,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,KAAKrH,KAA1B;AAAA,UACMd,OAAO,GAAGmI,YAAY,CAACnI,OAD7B;AAAA,UAEMK,cAAc,GAAG8H,YAAY,CAAC9H,cAFpC;AAAA,UAGMD,SAAS,GAAG+H,YAAY,CAAC/H,SAH/B;AAIA,UAAMgI,YAAY,GAAG,KAAKlI,KAA1B;AAAA,UACMe,EAAE,GAAGmH,YAAY,CAACnH,EADxB;AAAA,UAEM2C,KAAK,GAAGwE,YAAY,CAACxE,KAF3B;AAAA,UAGM6D,gBAAgB,GAAGW,YAAY,CAACX,gBAHtC;AAAA,UAIMpD,UAAU,GAAG+D,YAAY,CAAC/D,UAJhC;AAAA,UAKMgE,WAAW,GAAGD,YAAY,CAACC,WALjC;AAAA,UAMMxH,YAAY,GAAGuH,YAAY,CAACvH,YANlC;AAAA,UAOMoB,WAAW,GAAGmG,YAAY,CAACnG,WAPjC;AAAA,UAQMM,SAAS,GAAG6F,YAAY,CAAC7F,SAR/B;AAAA,UASMX,kBAAkB,GAAGwG,YAAY,CAACxG,kBATxC;AAAA,UAUMC,YAAY,GAAGuG,YAAY,CAACvG,YAVlC;AAAA,UAWMmF,YAAY,GAAGoB,YAAY,CAACpB,YAXlC;AAAA,UAYMG,YAAY,GAAGiB,YAAY,CAACjB,YAZlC;AAAA,UAaMzD,YAAY,GAAG0E,YAAY,CAAC1E,YAblC;AAAA,UAcMH,qBAAqB,GAAG6E,YAAY,CAAC7E,qBAd3C;AAAA,UAeM+E,UAAU,GAAG,CAAC,GAAG1J,yBAAyB,CAACD,OAA9B,EAAuCyJ,YAAvC,EAAqD,CAAC,IAAD,EAAO,OAAP,EAAgB,kBAAhB,EAAoC,YAApC,EAAkD,aAAlD,EAAiE,cAAjE,EAAiF,aAAjF,EAAgG,WAAhG,EAA6G,oBAA7G,EAAmI,cAAnI,EAAmJ,cAAnJ,EAAmK,cAAnK,EAAmL,cAAnL,EAAmM,uBAAnM,CAArD,CAfnB;AAgBA,UAAMG,aAAa,GAAG,CAAC,GAAGtJ,WAAW,CAACN,OAAhB,EAAyB,mBAAzB,EAA8C,KAAKuB,KAAL,CAAWiF,SAAX,IAAwB,EAAtE,CAAtB;AACA,UAAMqD,UAAU,GAAGf,gBAAgB,IAAI7D,KAAK,CAACxC,MAAN,GAAe,CAAtD;AACA,WAAOpC,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACoE,OAAxC,EAAiD,CAAC,GAAG5J,SAAS,CAACF,OAAd,EAAuB,EAAvB,EAA2B2J,UAA3B,EAAuC;AAC7FrD,MAAAA,GAAG,EAAEhE,EADwF;AAE7FoE,MAAAA,OAAO,EAAE,MAAMgD,WAAW,IAAIA,WAAW,CAACpH,EAAD,CAFoD;AAG7FyE,MAAAA,SAAS,EAAE,KAHkF;AAI7FP,MAAAA,SAAS,EAAEoD;AAJkF,KAAvC,CAAjD,EAKH,KAAKG,YAAL,CAAkB,CAAC,GAAG5J,cAAc,CAACH,OAAnB,EAA4B;AAChDsC,MAAAA,EADgD;AAEhD2C,MAAAA;AAFgD,KAA5B,EAGnB0E,UAHmB,CAAlB,CALG,EAQU,KAAKK,mBAAL,CAAyBtI,cAAzB,CARV,EAQoDL,OAAO,IAAIhB,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACuE,MAAxC,EAAgD,IAAhD,CAR/D,EAQsHJ,UAAU,IAAIxJ,MAAM,CAACL,OAAP,CAAeoG,aAAf,CAA6BV,UAAU,CAACwE,UAAxC,EAAoD;AAC7LxD,MAAAA,OAAO,EAAE,KAAKkC,mBAD+K;AAE7LnH,MAAAA,SAAS,EAAEA;AAFkL,KAApD,CARpI,CAAP;AAYD;;AAlSiC;;AAsSpCR,IAAI,CAACkJ,SAAL,GAAiB;AACfzH,EAAAA,OAAO,EAAEnC,UAAU,CAACP,OAAX,CAAmBoK,MADb;AAEf9H,EAAAA,EAAE,EAAE/B,UAAU,CAACP,OAAX,CAAmBqK,MAAnB,CAA0BC,UAFf;AAGfhB,EAAAA,OAAO,EAAE/I,UAAU,CAACP,OAAX,CAAmBqK,MAHb;AAIf9B,EAAAA,KAAK,EAAEhI,UAAU,CAACP,OAAX,CAAmB4B,IAJX;AAKf+C,EAAAA,KAAK,EAAEpE,UAAU,CAACP,OAAX,CAAmBuK,MALX;AAMfrF,EAAAA,gBAAgB,EAAE3E,UAAU,CAACP,OAAX,CAAmBwK,IANtB;AAOfjE,EAAAA,KAAK,EAAEhG,UAAU,CAACP,OAAX,CAAmBoK,MAPX;AAQf3E,EAAAA,SAAS,EAAElF,UAAU,CAACP,OAAX,CAAmBoK,MARf;AASf5E,EAAAA,QAAQ,EAAEjF,UAAU,CAACP,OAAX,CAAmBoK,MATd;AAUfK,EAAAA,UAAU,EAAElK,UAAU,CAACP,OAAX,CAAmBoK,MAVhB;AAWfM,EAAAA,UAAU,EAAEnK,UAAU,CAACP,OAAX,CAAmBoK,MAXhB;AAYfnF,EAAAA,KAAK,EAAE1E,UAAU,CAACP,OAAX,CAAmB2K,KAZX;AAafC,EAAAA,KAAK,EAAErK,UAAU,CAACP,OAAX,CAAmBqK,MAbX;AAcf/I,EAAAA,WAAW,EAAEf,UAAU,CAACP,OAAX,CAAmBuK,MAdjB;AAefxD,EAAAA,SAAS,EAAExG,UAAU,CAACP,OAAX,CAAmB6K,IAff;AAgBf/B,EAAAA,gBAAgB,EAAEvI,UAAU,CAACP,OAAX,CAAmB6K,IAhBtB;AAiBf7G,EAAAA,SAAS,EAAEzD,UAAU,CAACP,OAAX,CAAmB6K,IAjBf;AAkBfjG,EAAAA,qBAAqB,EAAErE,UAAU,CAACP,OAAX,CAAmBwK,IAlB3B;AAmBflH,EAAAA,WAAW,EAAE/C,UAAU,CAACP,OAAX,CAAmBwK,IAnBjB;AAoBfvH,EAAAA,kBAAkB,EAAE1C,UAAU,CAACP,OAAX,CAAmBwK,IApBxB;AAqBftH,EAAAA,YAAY,EAAE3C,UAAU,CAACP,OAAX,CAAmBwK,IArBlB;AAsBf5G,EAAAA,SAAS,EAAErD,UAAU,CAACP,OAAX,CAAmBwK,IAtBf;AAuBfzF,EAAAA,YAAY,EAAExE,UAAU,CAACP,OAAX,CAAmBwK,IAvBlB;AAwBfnC,EAAAA,YAAY,EAAE9H,UAAU,CAACP,OAAX,CAAmBwK,IAxBlB;AAyBfhC,EAAAA,YAAY,EAAEjI,UAAU,CAACP,OAAX,CAAmBwK,IAzBlB;AA0Bfd,EAAAA,WAAW,EAAEnJ,UAAU,CAACP,OAAX,CAAmBwK,IA1BjB;AA2BftI,EAAAA,YAAY,EAAE3B,UAAU,CAACP,OAAX,CAAmBwK,IA3BlB;AA4BfrF,EAAAA,QAAQ,EAAE5E,UAAU,CAACP,OAAX,CAAmB6K,IA5Bd;AA6BfC,EAAAA,aAAa,EAAEvK,UAAU,CAACP,OAAX,CAAmB6K,IA7BnB;AA8BfxF,EAAAA,aAAa,EAAE9E,UAAU,CAACP,OAAX,CAAmB6K,IA9BnB;AA+BfvF,EAAAA,aAAa,EAAE/E,UAAU,CAACP,OAAX,CAAmBqK,MA/BnB;AAgCf9E,EAAAA,aAAa,EAAEhF,UAAU,CAACP,OAAX,CAAmBqK,MAhCnB;AAiCfU,EAAAA,WAAW,EAAExK,UAAU,CAACP,OAAX,CAAmB6K,IAjCjB;AAkCflF,EAAAA,CAAC,EAAEpF,UAAU,CAACP,OAAX,CAAmBwK,IAAnB,CAAwBF;AAlCZ,CAAjB;AAoCArJ,IAAI,CAAC+J,YAAL,GAAoB;AAClBzE,EAAAA,KAAK,EAAE,EADW;AAElBkE,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,UAAU,EAAE,EAHM;AAIlBE,EAAAA,KAAK,EAAErG,SAJW;AAKlBY,EAAAA,QAAQ,EAAE,KALQ;AAMlBqD,EAAAA,YAAY,EAAE,MAAM,CAAE,CANJ;AAOlB5E,EAAAA,SAAS,EAAE,MAAM,CAAE,CAPD;AAQlBmB,EAAAA,YAAY,EAAE,MAAM,CAAE;AARJ,CAApB;;AAWA,MAAMkG,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxI,EAAAA,OAAO,EAAE,CAAC,GAAGlC,MAAM,CAAC2K,kBAAX,EAA+BnK,WAA/B,EAA4CkK,QAA5C;AAD6B,CAAL,CAAnC;;AAIA,IAAIE,QAAQ,GAAG,CAAC,GAAG3K,WAAW,CAAC4K,OAAhB,EAAyB,IAAzB,EAA+BJ,kBAA/B,EAAmDhK,IAAnD,CAAf;;AAEAnB,OAAO,CAACE,OAAR,GAAkBoL,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass Lane extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      loading: false,\n      currentPage: this.props.currentPage,\n      addCardMode: false,\n      collapsed: false,\n      isDraggingOver: false\n    });\n    (0, _defineProperty2.default)(this, \"handleScroll\", evt => {\n      const node = evt.target;\n      const elemScrollPosition = node.scrollHeight - node.scrollTop - node.clientHeight;\n      const onLaneScroll = this.props.onLaneScroll; // In some browsers and/or screen sizes a decimal rest value between 0 and 1 exists, so it should be checked on < 1 instead of < 0\n\n      if (elemScrollPosition < 1 && onLaneScroll && !this.state.loading) {\n        const currentPage = this.state.currentPage;\n        this.setState({\n          loading: true\n        });\n        const nextPage = currentPage + 1;\n        onLaneScroll(nextPage, this.props.id).then(moreCards => {\n          if ((moreCards || []).length > 0) {\n            this.props.actions.paginateLane({\n              laneId: this.props.id,\n              newCards: moreCards,\n              nextPage: nextPage\n            });\n          }\n\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"laneDidMount\", node => {\n      if (node) {\n        node.addEventListener('scroll', this.handleScroll);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"removeCard\", cardId => {\n      if (this.props.onBeforeCardDelete && typeof this.props.onBeforeCardDelete === 'function') {\n        this.props.onBeforeCardDelete(() => {\n          this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n          this.props.actions.removeCard({\n            laneId: this.props.id,\n            cardId: cardId\n          });\n        });\n      } else {\n        this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n        this.props.actions.removeCard({\n          laneId: this.props.id,\n          cardId: cardId\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"handleCardClick\", (e, card) => {\n      const onCardClick = this.props.onCardClick;\n      onCardClick && onCardClick(card.id, card.metadata, card.laneId);\n      e.stopPropagation();\n    });\n    (0, _defineProperty2.default)(this, \"showEditableCard\", () => {\n      this.setState({\n        addCardMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableCard\", () => {\n      this.setState({\n        addCardMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewCard\", params => {\n      const laneId = this.props.id;\n      const id = (0, _v.default)();\n      this.hideEditableCard();\n      let card = (0, _objectSpread2.default)({\n        id\n      }, params);\n      this.props.actions.addCard({\n        laneId,\n        card\n      });\n      this.props.onCardAdd(card, laneId);\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleDragStart = this.props.handleDragStart;\n      handleDragStart && handleDragStart(payload.id, payload.laneId);\n    });\n    (0, _defineProperty2.default)(this, \"shouldAcceptDrop\", sourceContainerOptions => {\n      return this.props.droppable && sourceContainerOptions.groupName === this.groupName;\n    });\n    (0, _defineProperty2.default)(this, \"onDragEnd\", (laneId, result) => {\n      const handleDragEnd = this.props.handleDragEnd;\n      const addedIndex = result.addedIndex,\n            payload = result.payload;\n\n      if (this.state.isDraggingOver) {\n        this.setState({\n          isDraggingOver: false\n        });\n      }\n\n      if (addedIndex != null) {\n        const newCard = (0, _objectSpread2.default)({}, (0, _cloneDeep.default)(payload), {\n          laneId\n        });\n        const response = handleDragEnd ? handleDragEnd(payload.id, payload.laneId, laneId, addedIndex, newCard) : true;\n\n        if (response === undefined || !!response) {\n          this.props.actions.moveCardAcrossLanes({\n            fromLaneId: payload.laneId,\n            toLaneId: laneId,\n            cardId: payload.id,\n            index: addedIndex\n          });\n          this.props.onCardMoveAcrossLanes(payload.laneId, laneId, payload.id, addedIndex);\n        }\n\n        return response;\n      }\n    });\n    (0, _defineProperty2.default)(this, \"updateCard\", updatedCard => {\n      this.props.actions.updateCard({\n        laneId: this.props.id,\n        card: updatedCard\n      });\n      this.props.onCardUpdate(this.props.id, updatedCard);\n    });\n    (0, _defineProperty2.default)(this, \"renderDragContainer\", isDraggingOver => {\n      const _this$props = this.props,\n            id = _this$props.id,\n            cards = _this$props.cards,\n            laneSortFunction = _this$props.laneSortFunction,\n            editable = _this$props.editable,\n            hideCardDeleteIcon = _this$props.hideCardDeleteIcon,\n            cardDraggable = _this$props.cardDraggable,\n            cardDragClass = _this$props.cardDragClass,\n            cardDropClass = _this$props.cardDropClass,\n            tagStyle = _this$props.tagStyle,\n            cardStyle = _this$props.cardStyle,\n            components = _this$props.components,\n            t = _this$props.t;\n      const _this$state = this.state,\n            addCardMode = _this$state.addCardMode,\n            collapsed = _this$state.collapsed;\n      const showableCards = collapsed ? [] : cards;\n      const cardList = this.sortCards(showableCards, laneSortFunction).map((card, idx) => {\n        const onDeleteCard = () => this.removeCard(card.id);\n\n        const cardToRender = _react.default.createElement(components.Card, (0, _extends2.default)({\n          key: card.id,\n          index: idx,\n          style: card.style || cardStyle,\n          className: \"react-trello-card\",\n          onDelete: onDeleteCard,\n          onClick: e => this.handleCardClick(e, card),\n          onChange: updatedCard => this.updateCard(updatedCard),\n          showDeleteButton: !hideCardDeleteIcon,\n          tagStyle: tagStyle,\n          cardDraggable: cardDraggable,\n          editable: editable,\n          t: t\n        }, card));\n\n        return cardDraggable && (!card.hasOwnProperty('draggable') || card.draggable) ? _react.default.createElement(_Draggable.default, {\n          key: card.id\n        }, cardToRender) : _react.default.createElement(\"span\", {\n          key: card.id\n        }, cardToRender);\n      });\n      return _react.default.createElement(components.ScrollableLane, {\n        ref: this.laneDidMount,\n        isDraggingOver: isDraggingOver\n      }, _react.default.createElement(_Container.default, {\n        orientation: \"vertical\",\n        groupName: this.groupName,\n        dragClass: cardDragClass,\n        dropClass: cardDropClass,\n        onDragStart: this.onDragStart,\n        onDrop: e => this.onDragEnd(id, e),\n        onDragEnter: () => this.setState({\n          isDraggingOver: true\n        }),\n        onDragLeave: () => this.setState({\n          isDraggingOver: false\n        }),\n        shouldAcceptDrop: this.shouldAcceptDrop,\n        getChildPayload: index => this.props.getCardDetails(id, index)\n      }, cardList), editable && !addCardMode && _react.default.createElement(components.AddCardLink, {\n        onClick: this.showEditableCard,\n        t: t,\n        laneId: id\n      }), addCardMode && _react.default.createElement(components.NewCardForm, {\n        onCancel: this.hideEditableCard,\n        t: t,\n        laneId: id,\n        onAdd: this.addNewCard\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"removeLane\", () => {\n      const id = this.props.id;\n      this.props.actions.removeLane({\n        laneId: id\n      });\n      this.props.onLaneDelete(id);\n    });\n    (0, _defineProperty2.default)(this, \"updateTitle\", value => {\n      this.props.actions.updateLane({\n        id: this.props.id,\n        title: value\n      });\n      this.props.onLaneUpdate(this.props.id, {\n        title: value\n      });\n    });\n    (0, _defineProperty2.default)(this, \"renderHeader\", pickedProps => {\n      const components = this.props.components;\n      return _react.default.createElement(components.LaneHeader, (0, _extends2.default)({}, pickedProps, {\n        onDelete: this.removeLane,\n        onDoubleClick: this.toggleLaneCollapsed,\n        updateTitle: this.updateTitle\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"toggleLaneCollapsed\", () => {\n      this.props.collapsibleLanes && this.setState(state => ({\n        collapsed: !state.collapsed\n      }));\n    });\n  }\n\n  sortCards(cards, sortFunction) {\n    if (!cards) return [];\n    if (!sortFunction) return cards;\n    return cards.concat().sort(function (card1, card2) {\n      return sortFunction(card1, card2);\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _isEqual.default)(this.props.cards, nextProps.cards)) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n    }\n  }\n\n  get groupName() {\n    const boardId = this.props.boardId;\n    return \"TrelloBoard\".concat(boardId, \"Lane\");\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loading = _this$state2.loading,\n          isDraggingOver = _this$state2.isDraggingOver,\n          collapsed = _this$state2.collapsed;\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          cards = _this$props2.cards,\n          collapsibleLanes = _this$props2.collapsibleLanes,\n          components = _this$props2.components,\n          onLaneClick = _this$props2.onLaneClick,\n          onLaneScroll = _this$props2.onLaneScroll,\n          onCardClick = _this$props2.onCardClick,\n          onCardAdd = _this$props2.onCardAdd,\n          onBeforeCardDelete = _this$props2.onBeforeCardDelete,\n          onCardDelete = _this$props2.onCardDelete,\n          onLaneDelete = _this$props2.onLaneDelete,\n          onLaneUpdate = _this$props2.onLaneUpdate,\n          onCardUpdate = _this$props2.onCardUpdate,\n          onCardMoveAcrossLanes = _this$props2.onCardMoveAcrossLanes,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"id\", \"cards\", \"collapsibleLanes\", \"components\", \"onLaneClick\", \"onLaneScroll\", \"onCardClick\", \"onCardAdd\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneDelete\", \"onLaneUpdate\", \"onCardUpdate\", \"onCardMoveAcrossLanes\"]);\n    const allClassNames = (0, _classnames.default)('react-trello-lane', this.props.className || '');\n    const showFooter = collapsibleLanes && cards.length > 0;\n    return _react.default.createElement(components.Section, (0, _extends2.default)({}, otherProps, {\n      key: id,\n      onClick: () => onLaneClick && onLaneClick(id),\n      draggable: false,\n      className: allClassNames\n    }), this.renderHeader((0, _objectSpread2.default)({\n      id,\n      cards\n    }, otherProps)), this.renderDragContainer(isDraggingOver), loading && _react.default.createElement(components.Loader, null), showFooter && _react.default.createElement(components.LaneFooter, {\n      onClick: this.toggleLaneCollapsed,\n      collapsed: collapsed\n    }));\n  }\n\n}\n\nLane.propTypes = {\n  actions: _propTypes.default.object,\n  id: _propTypes.default.string.isRequired,\n  boardId: _propTypes.default.string,\n  title: _propTypes.default.node,\n  index: _propTypes.default.number,\n  laneSortFunction: _propTypes.default.func,\n  style: _propTypes.default.object,\n  cardStyle: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  titleStyle: _propTypes.default.object,\n  labelStyle: _propTypes.default.object,\n  cards: _propTypes.default.array,\n  label: _propTypes.default.string,\n  currentPage: _propTypes.default.number,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  droppable: _propTypes.default.bool,\n  onCardMoveAcrossLanes: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  editable: _propTypes.default.bool,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  cardDropClass: _propTypes.default.string,\n  canAddLanes: _propTypes.default.bool,\n  t: _propTypes.default.func.isRequired\n};\nLane.defaultProps = {\n  style: {},\n  titleStyle: {},\n  labelStyle: {},\n  label: undefined,\n  editable: false,\n  onLaneUpdate: () => {},\n  onCardAdd: () => {},\n  onCardUpdate: () => {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)(laneActions, dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Lane);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}