{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshilidzi-PC\\\\Documents\\\\GitHub\\\\Givee\\\\Give-a-Lot\\\\frontend\\\\givealot\\\\src\\\\views\\\\dashboard\\\\sidebar\\\\Components\\\\Calendar\\\\Calendar.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport \"./styles/Calendar.css\";\nimport { Scheduler, Appointments, AppointmentForm, AppointmentTooltip, WeekView, MonthView, EditRecurrenceMenu, AllDayPanel, ConfirmationDialog } from '@devexpress/dx-react-scheduler-material-ui';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      currentDate: new Date().toDateString(),\n      email: 'basic@gmail.com',\n      eventAdded: false,\n      addedAppointment: {},\n      appointmentChanges: {},\n      editingAppointment: undefined,\n      serverDomain: 'https://localhost:8080'\n    };\n    this.commitChanges = this.commitChanges.bind(this);\n    this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\n    this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\n    this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\n  }\n\n  changeAddedAppointment(addedAppointment) {\n    this.setState({\n      addedAppointment\n    });\n  }\n\n  changeAppointmentChanges(appointmentChanges) {\n    this.setState({\n      appointmentChanges\n    });\n  }\n\n  changeEditingAppointment(editingAppointment) {\n    this.setState({\n      editingAppointment\n    });\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n      console.log(data);\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n        let startTime = data[data.length - 1].startDate.toString().split(\" \")[4];\n        let endTime = data[data.length - 1].endDate.toString().split(\" \")[4];\n        let title = data[data.length - 1].title;\n        let description = data[data.length - 1].notes;\n        let startDateYear = data[data.length - 1].startDate.toString().split(\" \")[3];\n        let startDateMonth = data[data.length - 1].startDate.toString().split(\" \")[1];\n        let startDateDay = data[data.length - 1].startDate.toString().split(\" \")[2];\n        let eventStartDate = startDateYear + '-' + startDateMonth + '-' + startDateDay;\n        let endDateYear = data[data.length - 1].endDate.toString().split(\" \")[3];\n        let endDateMonth = data[data.length - 1].endDate.toString().split(\" \")[1];\n        let endDateDay = data[data.length - 1].endDate.toString().split(\" \")[2];\n        let eventEndDate = endDateYear + '-' + endDateMonth + '-' + endDateDay;\n        const eventDayAndTime = {\n          eventTitle: title,\n          eventDescription: description,\n          eventStartTime: startTime,\n          eventEndTime: endTime,\n          eventStartDate: eventStartDate,\n          eventEndDate: eventEndDate,\n          // userId: this.state.userId,\n          userEmail: this.state.email\n        }; // console.log(eventDayAndTime)\n\n        let config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n          }\n        };\n        axios.post(this.state.serverDomain + '/event/calender/add', eventDayAndTime, config).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      if (changed) {\n        let eventId = data[data.length - 1].eventId;\n        console.log(eventId);\n        let testing = changed.undefined;\n        console.log({\n          testing\n        });\n\n        if (testing.title !== undefined) {\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          }; // let eventId = data[data.length-1].eventId;\n\n          const titleUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newTitle\": testing.title\n          };\n          axios.post(this.state.serverDomain + '/event/calender/edit/title', titleUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        if (testing.startDate !== undefined) {\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          };\n          let startDateMonth = testing.startDate.toString().split(\" \")[1];\n          let startDateYear = testing.startDate.toString().split(\" \")[3];\n          let startDateDay = testing.startDate.toString().split(\" \")[2];\n          let eventStartDate = startDateYear + '-' + startDateMonth + '-' + startDateDay;\n          const startDateUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newDate\": eventStartDate\n          };\n          axios.post(this.state.serverDomain + '/event/calender/edit/date/start', startDateUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        if (testing.endDate !== undefined) {\n          // console.log(testing.endDate)\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          };\n          let endDateMonth = testing.endDate.toString().split(\" \")[1];\n          let endDateYear = testing.endDate.toString().split(\" \")[3];\n          let endDateDay = testing.endDate.toString().split(\" \")[2];\n          let eventEndDate = endDateYear + '-' + endDateMonth + '-' + endDateDay;\n          const endDateUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newDate\": eventEndDate\n          };\n          axios.post(this.state.serverDomain + '/event/calender/edit/date/end', endDateUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        if (testing.startDate !== undefined) {\n          let startTime = testing.startDate.toString().split(\" \")[4];\n          console.log(startTime);\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          };\n          const startTimeUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newTime\": startTime\n          };\n          console.log(startTimeUpdate);\n          axios.post(this.state.serverDomain + '/event/calender/edit/time/start', startTimeUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        if (testing.endDate !== undefined) {\n          let endTime = testing.endDate.toString().split(\" \")[4]; // console.log(endTime)\n\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          };\n          const endTimeUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newTime\": endTime\n          };\n          console.log(endTimeUpdate);\n          axios.post(this.state.serverDomain + '/event/calender/edit/time/end', endTimeUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        if (testing.notes !== undefined) {\n          console.log(testing.notes);\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*'\n            }\n          };\n          const descriptionUpdate = {\n            \"userEmail\": this.state.email,\n            \"eventId\": eventId,\n            \"newDescription\": testing.notes\n          };\n          console.log(descriptionUpdate);\n          axios.post(this.state.serverDomain + '/event/calender/edit/description', descriptionUpdate, config).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  getEvents() {\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.get(this.state.serverDomain + '/event/get/calender/' + this.state.email, config).then(response => {\n      console.log(response);\n      this.setState({\n        data: response.data.object\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      currentDate,\n      data,\n      addedAppointment,\n      appointmentChanges,\n      editingAppointment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Scheduler, {\n          data: data,\n          height: 660,\n          remoteFiltering: true,\n          children: [/*#__PURE__*/_jsxDEV(ViewState, {\n            currentDate: currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(EditingState, {\n            onCommitChanges: this.commitChanges,\n            addedAppointment: addedAppointment,\n            onAddedAppointmentChange: this.changeAddedAppointment,\n            appointmentChanges: appointmentChanges,\n            onAppointmentChangesChange: this.changeAppointmentChanges,\n            editingAppointment: editingAppointment,\n            onEditingAppointmentChange: this.changeEditingAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MonthView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AllDayPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(EditRecurrenceMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Appointments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AppointmentTooltip, {\n            showOpenButton: true,\n            showDeleteButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/src/views/dashboard/sidebar/Components/Calendar/Calendar.js"],"names":["React","Paper","ViewState","EditingState","Scheduler","Appointments","AppointmentForm","AppointmentTooltip","WeekView","MonthView","EditRecurrenceMenu","AllDayPanel","ConfirmationDialog","axios","Demo","PureComponent","constructor","props","state","data","currentDate","Date","toDateString","email","eventAdded","addedAppointment","appointmentChanges","editingAppointment","undefined","serverDomain","commitChanges","bind","changeAddedAppointment","changeAppointmentChanges","changeEditingAppointment","setState","added","changed","deleted","console","log","startingAddedId","length","id","startTime","startDate","toString","split","endTime","endDate","title","description","notes","startDateYear","startDateMonth","startDateDay","eventStartDate","endDateYear","endDateMonth","endDateDay","eventEndDate","eventDayAndTime","eventTitle","eventDescription","eventStartTime","eventEndTime","userEmail","config","headers","post","then","response","catch","error","eventId","testing","titleUpdate","startDateUpdate","endDateUpdate","startTimeUpdate","endTimeUpdate","descriptionUpdate","filter","appointment","componentDidMount","getEvents","get","object","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\nimport \"./styles/Calendar.css\"\r\nimport {\r\n    Scheduler,\r\n    Appointments,\r\n    AppointmentForm,\r\n    AppointmentTooltip,\r\n    WeekView,\r\n    MonthView,\r\n    EditRecurrenceMenu,\r\n    AllDayPanel,\r\n    ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport axios from \"axios\";\r\n\r\nexport default class Demo extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            currentDate: new Date().toDateString(),\r\n            email: 'basic@gmail.com',\r\n            eventAdded: false,\r\n            addedAppointment: {},\r\n            appointmentChanges: {},\r\n            editingAppointment: undefined,\r\n            serverDomain : 'https://localhost:8080'\r\n        };\r\n\r\n        this.commitChanges = this.commitChanges.bind(this);\r\n        this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\r\n        this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\r\n        this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\r\n    }\r\n\r\n    changeAddedAppointment(addedAppointment) {\r\n        this.setState({ addedAppointment });\r\n    }\r\n\r\n    changeAppointmentChanges(appointmentChanges) {\r\n        this.setState({ appointmentChanges });\r\n    }\r\n\r\n    changeEditingAppointment(editingAppointment) {\r\n        this.setState({ editingAppointment });\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n\r\n        this.setState((state) => {\r\n            let { data } = state;\r\n            console.log(data)\r\n            if (added) {\r\n                const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n                data = [...data, { id: startingAddedId, ...added }];\r\n                let startTime = data[data.length-1].startDate.toString().split(\" \")[4];\r\n                let endTime = data[data.length-1].endDate.toString().split(\" \")[4];\r\n                let title = data[data.length-1].title;\r\n                let description = data[data.length-1].notes;\r\n                let startDateYear = data[data.length-1].startDate.toString().split(\" \")[3];\r\n                let startDateMonth = data[data.length-1].startDate.toString().split(\" \")[1];\r\n                let startDateDay = data[data.length-1].startDate.toString().split(\" \")[2];\r\n                let eventStartDate = startDateYear +'-' + startDateMonth + '-' + startDateDay;\r\n\r\n                let endDateYear = data[data.length-1].endDate.toString().split(\" \")[3];\r\n                let endDateMonth = data[data.length-1].endDate.toString().split(\" \")[1];\r\n                let endDateDay = data[data.length-1].endDate.toString().split(\" \")[2];\r\n                let eventEndDate = endDateYear +'-' + endDateMonth + '-' + endDateDay;\r\n\r\n                const eventDayAndTime = {\r\n                    eventTitle: title,\r\n                    eventDescription: description,\r\n                    eventStartTime: startTime,\r\n                    eventEndTime: endTime,\r\n                    eventStartDate: eventStartDate,\r\n                    eventEndDate: eventEndDate,\r\n                    // userId: this.state.userId,\r\n                    userEmail : this.state.email\r\n                }\r\n                // console.log(eventDayAndTime)\r\n\r\n                let config = {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        'Access-Control-Allow-Origin': '*',\r\n                    }\r\n                }\r\n                axios.post(this.state.serverDomain + '/event/calender/add', eventDayAndTime ,config)\r\n                    .then(response =>{\r\n                        console.log(response)\r\n                    })\r\n                    .catch(error =>{\r\n                        console.log(error)\r\n                    })\r\n            }\r\n            if (changed) {\r\n                let eventId = data[data.length-1].eventId\r\n                console.log(eventId)\r\n                let testing = changed.undefined\r\n                console.log({ testing } )\r\n                if(testing.title !== undefined){\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    // let eventId = data[data.length-1].eventId;\r\n                    const titleUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTitle\" : testing.title\r\n                    }\r\n\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/title', titleUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.startDate !== undefined){\r\n\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n\r\n                    let startDateMonth = testing.startDate.toString().split(\" \")[1];\r\n                    let startDateYear = testing.startDate.toString().split(\" \")[3];\r\n                    let startDateDay = testing.startDate.toString().split(\" \")[2];\r\n                    let eventStartDate = startDateYear +'-' + startDateMonth + '-' + startDateDay;\r\n\r\n                    const startDateUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDate\" : eventStartDate\r\n                    }\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/date/start', startDateUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.endDate !== undefined){\r\n                    // console.log(testing.endDate)\r\n\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let endDateMonth = testing.endDate.toString().split(\" \")[1];\r\n                    let endDateYear = testing.endDate.toString().split(\" \")[3];\r\n                    let endDateDay = testing.endDate.toString().split(\" \")[2];\r\n                    let eventEndDate = endDateYear +'-' + endDateMonth + '-' + endDateDay;\r\n                    const endDateUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDate\" : eventEndDate\r\n                    }\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/date/end', endDateUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.startDate !== undefined){\r\n                    let startTime =testing.startDate.toString().split(\" \")[4];\r\n                    console.log(startTime)\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    const startTimeUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTime\" : startTime\r\n                    }\r\n                    console.log(startTimeUpdate)\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/time/start', startTimeUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.endDate !== undefined){\r\n                    let endTime =testing.endDate.toString().split(\" \")[4];\r\n                    // console.log(endTime)\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    const endTimeUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTime\" : endTime\r\n                    }\r\n                    console.log(endTimeUpdate)\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/time/end', endTimeUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.notes !== undefined){\r\n                    console.log(testing.notes)\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    const descriptionUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDescription\" : testing.notes\r\n                    }\r\n                    console.log(descriptionUpdate)\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/description', descriptionUpdate ,config)\r\n                        .then(response =>{\r\n                            console.log(response)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n\r\n            }\r\n            if (deleted !== undefined) {\r\n                data = data.filter(appointment => appointment.id !== deleted);\r\n            }\r\n            return { data };\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.getEvents();\r\n    }\r\n\r\n    getEvents(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get(this.state.serverDomain +'/event/get/calender/'+this.state.email,  config)\r\n            .then(response =>{\r\n                console.log(response)\r\n                this.setState({data: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentDate, data, addedAppointment, appointmentChanges, editingAppointment,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"calendar\">\r\n                    <Paper>\r\n                        <Scheduler\r\n                            data={data}\r\n                            height={660}\r\n                            remoteFiltering={true}\r\n                        >\r\n                            <ViewState\r\n                                currentDate={currentDate}\r\n                            />\r\n                            <EditingState\r\n                                onCommitChanges={this.commitChanges}\r\n                                addedAppointment={addedAppointment}\r\n                                onAddedAppointmentChange={this.changeAddedAppointment}\r\n                                appointmentChanges={appointmentChanges}\r\n                                onAppointmentChangesChange={this.changeAppointmentChanges}\r\n                                editingAppointment={editingAppointment}\r\n                                onEditingAppointmentChange={this.changeEditingAppointment}\r\n                            />\r\n                            <MonthView />\r\n                            <AllDayPanel />\r\n                            <EditRecurrenceMenu />\r\n                            <ConfirmationDialog />\r\n                            <Appointments />\r\n                            <AppointmentTooltip\r\n                                showOpenButton\r\n                                showDeleteButton\r\n                            />\r\n                            <AppointmentForm />\r\n                        </Scheduler>\r\n                    </Paper>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}