{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshilidzi-PC\\\\Documents\\\\GitHub\\\\Givee\\\\Give-a-Lot\\\\frontend\\\\givealot\\\\src\\\\components\\\\admin\\\\adminUsers\\\\AdminUsers.js\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, Row, Col, Card, CardBody } from 'mdbreact';\nimport axios from \"axios\";\nimport \"./AdminUsers.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AdminUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      await axios.get('http://jsonplaceholder.typicode.com/users').then(response => response.data).then(data => {\n        this.setState({\n          posts: data\n        });\n      }).then(async () => {\n        this.setState({\n          tableRows: this.assemblePosts(),\n          isLoading: false\n        });\n        console.log(this.state.tableRows);\n      });\n    };\n\n    this.componentDidMount = async () => {\n      await axios.get('http://jsonplaceholder.typicode.com/users').then(response => response.data).then(data => {\n        this.setState({\n          posts: data\n        });\n      }).then(async () => {\n        this.setState({\n          tableRows: this.assemblePosts(),\n          isLoading: false\n        });\n        console.log(this.state.tableRows);\n      });\n    };\n\n    this.assemblePosts = () => {\n      let posts = this.state.posts.map(post => {\n        return {\n          number: post.name,\n          title: post.username,\n          user: post.email\n        };\n      });\n      return posts;\n    };\n\n    this.state = {\n      posts: [],\n      error: \"\",\n      tableRows: [],\n      isLoading: true\n    };\n  }\n\n  render() {\n    const data = {\n      columns: [{\n        label: '#',\n        field: 'number'\n      }, {\n        label: 'Title',\n        field: 'title'\n      }, {\n        label: 'User ID',\n        field: 'user'\n      } // {\n      //     label:'Body',\n      //     field:'body',\n      // },\n      ],\n      rows: this.state.tableRows\n    }; // const { posts } = this.state\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n                  paging: true,\n                  striped: true,\n                  bordered: true // scrollY\n                  ,\n                  hover: true,\n                  entriesOptions: [5, 20, 25],\n                  entries: 10,\n                  maxHeight: \"500px\",\n                  pagesAmount: 4,\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default AdminUsers;","map":{"version":3,"sources":["C:/Users/Tshilidzi-PC/Documents/GitHub/Givee/Give-a-Lot/frontend/givealot/src/components/admin/adminUsers/AdminUsers.js"],"names":["React","Component","MDBDataTable","Row","Col","Card","CardBody","axios","AdminUsers","constructor","props","componentWillMount","get","then","response","data","setState","posts","tableRows","assemblePosts","isLoading","console","log","state","componentDidMount","map","post","number","name","title","username","user","email","error","render","columns","label","field","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBDataTable, Row, Col, Card, CardBody } from 'mdbreact';\r\nimport axios from \"axios\";\r\nimport \"./AdminUsers.css\"\r\n\r\nexport class AdminUsers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts:[],\r\n            error: \"\",\r\n            tableRows: [],\r\n            isLoading:true,\r\n        }\r\n\r\n    }\r\n    componentWillMount=async() => {\r\n        await axios.get('http://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.data)\r\n            .then(data => {\r\n                this.setState({ posts: data })\r\n            })\r\n            .then(async() => {\r\n                this.setState({ tableRows:this.assemblePosts(), isLoading:false })\r\n                console.log(this.state.tableRows);\r\n            });\r\n    }\r\n    componentDidMount=async() => {\r\n        await axios.get('http://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.data)\r\n            .then(data => {\r\n                this.setState({ posts: data })\r\n            })\r\n            .then(async() => {\r\n                this.setState({ tableRows:this.assemblePosts(), isLoading:false })\r\n                console.log(this.state.tableRows);\r\n            });\r\n    }\r\n\r\n    assemblePosts= () => {\r\n\r\n        let posts =this.state.posts.map((post) => {\r\n            return (\r\n                {\r\n                    number: post.name,\r\n                    title: post.username,\r\n                    user: post.email,\r\n\r\n                }\r\n            )\r\n        });\r\n        return posts;\r\n    }\r\n    render() {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label:'#',\r\n                    field:'number',\r\n                },\r\n                {\r\n                    label:'Title',\r\n                    field:'title',\r\n                },\r\n                {\r\n                    label:'User ID',\r\n                    field:'user',\r\n                },\r\n                // {\r\n                //     label:'Body',\r\n                //     field:'body',\r\n                // },\r\n            ],\r\n            rows:this.state.tableRows,\r\n        }\r\n\r\n        // const { posts } = this.state\r\n        return (\r\n            <div >\r\n                <div>\r\n                    <Row className=\"mb-4\">\r\n                        <Col md=\"12\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <MDBDataTable\r\n                                        paging={true}\r\n                                        striped\r\n                                        bordered\r\n                                        // scrollY\r\n                                        hover\r\n                                        entriesOptions={[5, 20, 25]}\r\n                                        entries={10}\r\n                                        maxHeight=\"500px\"\r\n                                        pagesAmount={4}\r\n                                        data={data}\r\n                                    />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminUsers\r\n\r\n"]},"metadata":{},"sourceType":"module"}