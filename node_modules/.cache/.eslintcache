[{"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\index.js":"1","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\App.js":"2","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\apiContext\\ApiContext.js":"3","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\apiContext\\FrontEndContext.js":"4","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Browse.js":"5","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\home\\Home.js":"6","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\SignUp.js":"7","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\TermsAndConditions.js":"8","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerUser\\RegisterUser.js":"9","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\EmailSent.js":"10","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\Password.js":"11","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\Dashboard.js":"12","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\verifyCertificate\\VerifyCertificate.js":"13","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\default\\Default404.js":"14","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\ResetSuccess.js":"15","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\ResetPassword.js":"16","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerOrganisation\\OrganisationRegistration.js":"17","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\ViewOrganisation.js":"18","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerUser\\UserSuccess.js":"19","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Featured.js":"20","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Users\\Users.js":"21","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\OrganisationsDash.js":"22","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\Org.js":"23","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\AddOrg.js":"24","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Calendar\\Calendar.js":"25","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Validate\\Validate.js":"26","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Timeline\\Timeline.js":"27","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\Reports.js":"28","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Validate\\OrgValidate.js":"29","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Certificate.js":"30","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade1.js":"31","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade2.js":"32","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade4.js":"33","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade3.js":"34","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade5.js":"35","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Profile\\Profile.js":"36","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade0.js":"37","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\BlurImages\\BlurImages.js":"38","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Login.js":"39","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\Organisation.js":"40","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\TermsLogo.js":"41","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\Logo.js":"42","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\OrganisationRecommended.js":"43","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Sidebar.js":"44","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\loader\\Loader.js":"45","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\BrowseBySector\\Sector.js":"46","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\chatbot\\Chatbot.js":"47","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Footer\\Footer.js":"48","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\FullPageLoader.js":"49","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Navbar\\Navbar.js":"50","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Email\\Email.js":"51","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\DashLogo.js":"52","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\Accordions.js":"53","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\SearchResults\\SearchResults.js":"54","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\OrganisationTimeLineItem\\OrganisationTimeLineItem.js":"55","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\SearchResults\\SearchResult.js":"56","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Cards.js":"57","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Chart.js":"58","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\DemoSidebar\\AdminSidebar.js":"59","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\DemoSidebar\\OrgSidebar.js":"60","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrgCalender\\OrgCalendar.js":"61","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\AdminReports\\AdminReports.js":"62"},{"size":198,"mtime":1632544509927,"results":"63","hashOfConfig":"64"},{"size":7936,"mtime":1633223463017,"results":"65","hashOfConfig":"64"},{"size":347,"mtime":1634165893118,"results":"66","hashOfConfig":"64"},{"size":356,"mtime":1634165893119,"results":"67","hashOfConfig":"64"},{"size":11019,"mtime":1633329062483,"results":"68","hashOfConfig":"64"},{"size":4811,"mtime":1634165893243,"results":"69","hashOfConfig":"64"},{"size":3461,"mtime":1632544515323,"results":"70","hashOfConfig":"64"},{"size":5305,"mtime":1633223463239,"results":"71","hashOfConfig":"64"},{"size":10544,"mtime":1633223463243,"results":"72","hashOfConfig":"64"},{"size":5424,"mtime":1633223463206,"results":"73","hashOfConfig":"64"},{"size":5106,"mtime":1633223463209,"results":"74","hashOfConfig":"64"},{"size":5955,"mtime":1633232704588,"results":"75","hashOfConfig":"64"},{"size":6040,"mtime":1634165893245,"results":"76","hashOfConfig":"64"},{"size":556,"mtime":1632553663149,"results":"77","hashOfConfig":"64"},{"size":2106,"mtime":1633223463213,"results":"78","hashOfConfig":"64"},{"size":6352,"mtime":1633223463212,"results":"79","hashOfConfig":"64"},{"size":25749,"mtime":1634165893244,"results":"80","hashOfConfig":"64"},{"size":20941,"mtime":1634176187558,"results":"81","hashOfConfig":"64"},{"size":1809,"mtime":1633223463244,"results":"82","hashOfConfig":"64"},{"size":8000,"mtime":1634165893183,"results":"83","hashOfConfig":"64"},{"size":4223,"mtime":1634165893241,"results":"84","hashOfConfig":"64"},{"size":13036,"mtime":1634165893218,"results":"85","hashOfConfig":"64"},{"size":12495,"mtime":1634165893199,"results":"86","hashOfConfig":"64"},{"size":15947,"mtime":1634165893199,"results":"87","hashOfConfig":"64"},{"size":13628,"mtime":1634165893161,"results":"88","hashOfConfig":"64"},{"size":4345,"mtime":1634165893242,"results":"89","hashOfConfig":"64"},{"size":7030,"mtime":1634165893240,"results":"90","hashOfConfig":"64"},{"size":3673,"mtime":1634165893239,"results":"91","hashOfConfig":"64"},{"size":57090,"mtime":1634169967583,"results":"92","hashOfConfig":"64"},{"size":6741,"mtime":1634181425846,"results":"93","hashOfConfig":"64"},{"size":9204,"mtime":1634165893173,"results":"94","hashOfConfig":"64"},{"size":12549,"mtime":1634165893174,"results":"95","hashOfConfig":"64"},{"size":11647,"mtime":1634180675704,"results":"96","hashOfConfig":"64"},{"size":32320,"mtime":1634165893175,"results":"97","hashOfConfig":"64"},{"size":4064,"mtime":1634165893181,"results":"98","hashOfConfig":"64"},{"size":22004,"mtime":1634165893238,"results":"99","hashOfConfig":"64"},{"size":8952,"mtime":1634165893163,"results":"100","hashOfConfig":"64"},{"size":3064,"mtime":1634182840911,"results":"101","hashOfConfig":"64"},{"size":8114,"mtime":1633314241189,"results":"102","hashOfConfig":"64"},{"size":1781,"mtime":1632721190758,"results":"103","hashOfConfig":"64"},{"size":396,"mtime":1632544515283,"results":"104","hashOfConfig":"64"},{"size":372,"mtime":1632544515254,"results":"105","hashOfConfig":"64"},{"size":1832,"mtime":1632721190774,"results":"106","hashOfConfig":"64"},{"size":8683,"mtime":1632544515084,"results":"107","hashOfConfig":"108"},{"size":453,"mtime":1632544515252,"results":"109","hashOfConfig":"64"},{"size":365,"mtime":1632544510806,"results":"110","hashOfConfig":"64"},{"size":1333,"mtime":1634165893143,"results":"111","hashOfConfig":"64"},{"size":1599,"mtime":1632544510916,"results":"112","hashOfConfig":"64"},{"size":489,"mtime":1632544514131,"results":"113","hashOfConfig":"64"},{"size":3283,"mtime":1634165893141,"results":"114","hashOfConfig":"64"},{"size":4782,"mtime":1632544513172,"results":"115","hashOfConfig":"108"},{"size":450,"mtime":1633232704242,"results":"116","hashOfConfig":"64"},{"size":7159,"mtime":1632544514093,"results":"117","hashOfConfig":"64"},{"size":3083,"mtime":1633314241104,"results":"118","hashOfConfig":"64"},{"size":1224,"mtime":1632544511184,"results":"119","hashOfConfig":"64"},{"size":1030,"mtime":1633181810965,"results":"120","hashOfConfig":"64"},{"size":7417,"mtime":1634165893182,"results":"121","hashOfConfig":"64"},{"size":860,"mtime":1632544513177,"results":"122","hashOfConfig":"64"},{"size":4780,"mtime":1633314241149,"results":"123","hashOfConfig":"64"},{"size":5179,"mtime":1633314241159,"results":"124","hashOfConfig":"64"},{"size":13330,"mtime":1634165893184,"results":"125","hashOfConfig":"64"},{"size":3955,"mtime":1634165893159,"results":"126","hashOfConfig":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"160bfd8",{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":8,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},"1gnqtv4",{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\index.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\App.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\apiContext\\ApiContext.js",["284"],"import React,{useState, createContext} from 'react';\r\n\r\nexport const ApiContext = createContext();\r\n\r\nexport const ApiUrlProvider = (props) => {\r\n    let current_url = 'https://givealotcharities.herokuapp.com'\r\n    return(\r\n        <ApiContext.Provider value={current_url}>\r\n            {props.children}\r\n        </ApiContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\apiContext\\FrontEndContext.js",["285"],"import React,{useState, createContext} from 'react';\r\n\r\nexport const FrontEndContext = createContext();\r\n\r\nexport const FrontendUrlProvider = (props) => {\r\n    let current_url = 'https://givealot.netlify.app'\r\n    return(\r\n        <FrontEndContext.Provider value={current_url}>\r\n            {props.children}\r\n        </FrontEndContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Browse.js",["286","287","288","289","290"],"import React, {useState, useEffect, useContext} from 'react';\r\n\r\n/* assets import */\r\nimport filterBtn_mobile from '../../assets/filter_list_black_24dp.svg';\r\nimport ui_message_art from '../../assets/feedback-2044700_1280.jpg';\r\n/* assets import end */\r\n\r\n/* components import */\r\nimport Organisation from './Components/Organisation/Organisation';\r\nimport OrganisationRecommended from './Components/Organisation/OrganisationRecommended';\r\nimport Sector from \"./Components/BrowseBySector/Sector\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport Loader from \"../loader/Loader\";\r\n/* components import end */\r\n\r\n/*css imports */\r\nimport  './Styles/browse_general.css';\r\nimport  './Styles/browse_desktop.css';\r\nimport {ApiContext} from \"../../apiContext/ApiContext\";\r\nimport Chatbot from \"../chatbot/Chatbot\";\r\n\r\n\r\nfunction Browse ()\r\n{\r\n    const [organisations, setOrganisations] = useState([]);\r\n    const [recommendedOrganisations, setRecommendedOrganisations] = useState([]);\r\n    const [pageLoaded, setPageLoaded] = React.useState(false);\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n\r\n    const mobile_popUpControl_hide = event =>\r\n    {\r\n        event.preventDefault();\r\n        var dark_backdrop_active_for_mobile = document.getElementById(\"dark_backdrop_active_for_mobile\");\r\n        var browse_filters = document.getElementById(\"browse_filters\");\r\n\r\n        dark_backdrop_active_for_mobile.style.display = \"none\";\r\n        browse_filters.style.display = \"none\";\r\n    }\r\n\r\n    const mobile_popUpControl_display = event =>\r\n    {\r\n        event.preventDefault();\r\n        var dark_backdrop_active_for_mobile = document.getElementById(\"dark_backdrop_active_for_mobile\");\r\n        var browse_filters = document.getElementById(\"browse_filters\");\r\n\r\n        dark_backdrop_active_for_mobile.style.display = \"block\";\r\n        browse_filters.style.display = \"block\";\r\n    }\r\n\r\n    /* fetch request - organisations by sections - start*/\r\n\r\n    /* \r\n        REMEMBER HOOKS: ELSE GOOD LUCK TRYING TO SOLVE THE \r\n                        INEVITABLE SHIT SHOW. \r\n\r\n        TODO: update login to use tokens on the request URL\r\n    */\r\n    useEffect(() => {\r\n        fetch( serverDomain + \"/v1/browse/sectors\")\r\n        .then(async response =>{\r\n\r\n            const data = await response.json();\r\n\r\n            if(!response.ok) /* error handling here */\r\n            {            \r\n                if(response.status === 500)\r\n                {\r\n                    window.location.assign(\"/browse\");\r\n                }\r\n                else if(response.status === 401)\r\n                {\r\n\r\n                }\r\n\r\n                if(typeof data !== 'undefined')\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n            if(data.message === \"success\") /*successfully fetched*/\r\n            {\r\n                setOrganisations(data.object);\r\n                setPageLoaded(true);\r\n            }\r\n            else\r\n            {\r\n\r\n                setOrganisations([]);\r\n            }\r\n        })\r\n        \r\n        .catch(error => {\r\n\r\n        });\r\n    }\r\n    ,[])\r\n    /* fetch request - organisations by sections - end*/\r\n\r\n    let organisations_by_sector = [];\r\n    if(organisations !== undefined)\r\n    {\r\n        for (let i = 0; i < organisations.length; i++)\r\n        {\r\n            let sector = organisations[i].sector;\r\n            let organisations_for_the_sector = [];\r\n\r\n            for (let k = 0; k < organisations[i].organisations.length; k++)\r\n            {\r\n                let orgId = organisations[i].organisations[k].orgId;\r\n                let orgName = organisations[i].organisations[k].orgName;\r\n                let dateAdded = organisations[i].organisations[k].dateAdded;\r\n                let imgUrl = serverDomain + \"/v1/organisation/image/get/logo/\" + orgId;\r\n                let orgDescription = organisations[i].organisations[k].orgDescription;\r\n                let certificate_level = organisations[i].organisations[k].certificate_level;\r\n\r\n                organisations_for_the_sector.push(<Organisation orgId = {orgId}\r\n                                                                orgName= {orgName}\r\n                                                                dateAdded = {dateAdded}\r\n                                                                imgUrl = {imgUrl}\r\n                                                                certificate_level = {certificate_level}\r\n                                                                orgDescription = {orgDescription}\r\n                                                                key={orgId}/>);\r\n            }\r\n            /*\r\n              Note for future reference: sector takes a list of organisations as prop\r\n            */\r\n\r\n            organisations_by_sector.push(<Sector sector={sector}\r\n                                                 organisations_for_sec={organisations_for_the_sector}\r\n                                                 key={sector}/>);\r\n        }\r\n    }\r\n\r\n    /* fetch request - recommended - start*/\r\n    /*\r\n        REMEMBER HOOKS: ELSE GOOD LUCK TRYING TO SOLVE THE\r\n                        INEVITABLE SHIT SHOW.\r\n\r\n        TODO: update login to use tokens on the request URL\r\n    */\r\n    let user_id = \"default\"; /*TODO: pull this id from dom storage, if user is not logged in, use default*/\r\n\r\n    useEffect(() => {\r\n            fetch(serverDomain + \"/v1/browse/sectors/recommendations/\"+user_id)\r\n                .then(async response =>{\r\n\r\n                    const data = await response.json();\r\n\r\n                    if(!response.ok) /* error handling here */\r\n                    {\r\n                        if(response.status === 500)\r\n                        {\r\n\r\n                        }\r\n                        else if(response.status === 401)\r\n                        {\r\n\r\n                        }\r\n\r\n                        if(typeof data !== 'undefined')\r\n                        {\r\n                        }\r\n                    }\r\n\r\n\r\n                    if(data.message === \"success\") /*successfully fetched*/\r\n                    {\r\n                        setRecommendedOrganisations(data.object);\r\n                    }\r\n                    else\r\n                    {\r\n                        setRecommendedOrganisations([]);\r\n                    }\r\n                })\r\n\r\n                .catch(error => {\r\n\r\n                });\r\n        }\r\n        ,[])\r\n    /* fetch request - recommended - end*/\r\n\r\n    let organisations_recommended = [];\r\n    if(recommendedOrganisations !== undefined)\r\n    {\r\n\r\n        for (let k = 0; k < recommendedOrganisations.length; k++)\r\n        {\r\n            let orgId = recommendedOrganisations[k].orgId;\r\n            let orgName = recommendedOrganisations[k].orgName;\r\n            let dateAdded = recommendedOrganisations[k].dateAdded;\r\n            let imgUrl = serverDomain + \"/v1/organisation/image/get/logo/\" + orgId;\r\n            let certificate_level = recommendedOrganisations[k].certificate_level;\r\n            let org_sector = recommendedOrganisations[k].sector;\r\n            let orgDescription = recommendedOrganisations[k].orgDescription;\r\n\r\n            organisations_recommended.push(<OrganisationRecommended orgId = {orgId}\r\n                                                                    orgName= {orgName}\r\n                                                                    dateAdded = {dateAdded}\r\n                                                                    imgUrl = {imgUrl}\r\n                                                                    certificate_level = {certificate_level}\r\n                                                                    org_sector = {org_sector}\r\n                                                                    orgDescription = {orgDescription}\r\n                                                                    key={orgId}/>);\r\n        }\r\n    }\r\n    return (\r\n        <div id={\"main_browse_page\"}>\r\n\r\n            {pageLoaded === false && <Loader />}\r\n            <Navbar/>\r\n            <Chatbot />\r\n            <div id=\"browse_body\">\r\n\r\n                <div id=\"dark_backdrop_active_for_mobile\" onClick={mobile_popUpControl_hide}>\r\n                    {/*this is used on the mobile version of the application,\r\n                       helps minimise the the filters */}\r\n                </div>\r\n\r\n                <div id=\"filters_mobile\" onClick={mobile_popUpControl_display}>\r\n                    <p >filters</p><img  src={filterBtn_mobile} alt={\"filter-icon\"} />\r\n                </div>\r\n                \r\n                <section id=\"browse_body_main\">\r\n                    <div id=\"browse_organisations\">\r\n\r\n\r\n                        {organisations_recommended.length > 0 &&\r\n                            <>\r\n                                <div className=\"browse_sector\">\r\n                                    <p className=\"browse_sector_name\">recommended for you</p>\r\n                                </div>\r\n                                <div id=\"reco_organisations\">\r\n                                    {organisations_recommended}\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        {organisations_by_sector.length > 0 &&\r\n                            <div id=\"ui_element_message\">\r\n                            <img src={ui_message_art} alt={\"\"}/>\r\n                            <div id=\"ui_element_message_text\">\r\n                                <p id=\"ui_element_message_head\">Find a cause that you care about</p>\r\n                                <p id=\"ui_element_message_subtext\">The following organisations have been individually\r\n                                    reviewed by Give A Lot<img/></p>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div id=\"default_organisations\">\r\n                            {organisations_by_sector}\r\n                        </div>\r\n\r\n                        {/* this block was not a part of the initial design */}\r\n\r\n                        {organisations_by_sector.length > 0 &&\r\n                        <div id=\"ui_element_message\">\r\n                            <img src={ui_message_art} alt={\"\"}/>\r\n                            <div id=\"ui_element_message_text\">\r\n                                    <p id=\"ui_element_message_head\">Find a cause that you care about</p>\r\n                                    <p id=\"ui_element_message_subtext\">The following organisations have been individually\r\n                                    reviewed by Give A Lot<img/></p>\r\n                            </div>\r\n                            </div>\r\n                        }\r\n                        {/* this block was not a part of the initial design - end */}\r\n                    </div>\r\n                </section>\r\n\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Browse;","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\home\\Home.js",["291","292","293","294"],"import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport backgroundImg from '../../assets/homeBackground.jpg';\r\nimport logo from \"../../assets/logo/logo3_1.png\";\r\n\r\nimport home_desktop from './Styles/home_desktop.css'\r\nimport {Box} from \"@material-ui/core\";\r\nimport Chatbot from \"../chatbot/Chatbot\";\r\n\r\n\r\nconst styles = {\r\n    main: {\r\n        backgroundImage: `url(${backgroundImg})`\r\n    }\r\n}\r\n\r\n/* \r\n    Note to self: Remember to use Context to update login status\r\n*/\r\nfunction Home() \r\n{\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [btnDisplayText, setBtnDisplayText] = useState(\"Login\");\r\n    const [currentUserId, setCurrentUserId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n            if(localStorage.getItem(\"id\") !== undefined && localStorage.getItem(\"role\") !== undefined)\r\n            {\r\n                if(localStorage.getItem(\"role\") === \"organisation\" )\r\n                {\r\n                    setBtnDisplayText(\"portal\");\r\n                }\r\n                else if( localStorage.getItem(\"role\") === \"admin\")\r\n                {\r\n                    setBtnDisplayText(\"dashboard\");\r\n                }\r\n                else if(localStorage.getItem(\"role\") === \"general\")\r\n                {\r\n                    setBtnDisplayText(\"logout\");\r\n                }\r\n                else\r\n                {\r\n                    setBtnDisplayText(\"login\");\r\n                }\r\n            }\r\n        }\r\n        ,[])\r\n\r\n    return (\r\n        <Box id=\"banner\" style={styles.main}>\r\n            <Box id=\"banner_filter\">\r\n                    <Chatbot />\r\n                <Box id=\"homeNav\">\r\n                    <img id=\"logo\" src={logo} alt={\"logo\"}/>\r\n                    {\r\n                        btnDisplayText === \"portal\" ?\r\n                            <Link to=\"/profile\">\r\n                                <Button className=\"loginDashBtn\" variant={\"contained\"}\r\n                                        startIcon={<DashboardIcon />}>\r\n                                    {btnDisplayText}\r\n\r\n                                </Button>\r\n                            </Link>\r\n                            :\r\n                        btnDisplayText === \"dashboard\" ?\r\n                        <Link to=\"/featured\">\r\n                            <Button className=\"loginDashBtn\" variant={\"contained\"}\r\n                                    startIcon={<DashboardIcon />}>\r\n                                {btnDisplayText}\r\n\r\n                            </Button>\r\n                        </Link>\r\n                            :\r\n                        btnDisplayText === \"logout\" ?\r\n                        <Link to=\"/login\">\r\n                            <Button className=\"loginDashBtn\" variant={\"contained\"}\r\n                            startIcon={<ExitToAppIcon />} onClick={() =>{\r\n                                localStorage.clear();\r\n                                localStorage.setItem(\"id\",\"default\")\r\n                            }\r\n                            }>\r\n                                {btnDisplayText}\r\n                            </Button>\r\n                        </Link>\r\n                            :\r\n                        <Link to=\"/login\">\r\n                        <Button className=\"loginDashBtn\" variant={\"contained\"}\r\n                                startIcon={<AccountCircleIcon/>}>\r\n                            {btnDisplayText}\r\n                        </Button>\r\n                        </Link>\r\n                    }\r\n                </Box>\r\n\r\n                <Box id=\"main_content_container\">\r\n                    <div>\r\n                        <p id=\"main_head\">Safe and verified donations</p>\r\n                        <p id=\"supporting_head\">Your hub for verified charities</p>\r\n                    </div>\r\n\r\n                    <Box id=\"main_content_btns\">\r\n                       <Link to={\"/verifyCertificate\"}>\r\n                           <Button className=\"main_content_btns_inputTag\" variant=\"contained\" name={currentUserId} >\r\n                               verify certificate\r\n                           </Button>\r\n                        </Link>\r\n                        <Link to={\"/browse\"}>\r\n                            <Button className=\"main_content_btns_inputTag\" variant=\"contained\" name={currentUserId}>\r\n                                browse organisations\r\n                            </Button>\r\n                        </Link>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\SignUp.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\TermsAndConditions.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerUser\\RegisterUser.js",["295"],"import React, { Component } from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport \"./Styles/RegisterUser.css\";\r\nimport backgroundImg from \"../../../assets/homeBackground.jpg\";\r\nimport Logo from \"../../login/Components/Logo\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport axios from \"axios\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nimport {ApiContext} from \"../../../apiContext/ApiContext\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    main: {\r\n        backgroundImage: `url(${backgroundImg})`\r\n    }\r\n}\r\n\r\nclass RegisterUser extends Component {\r\n\r\n    static contextType = ApiContext;\r\n\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        fnameError: \"\",\r\n        lnameError: \"\",\r\n        emailError: \"\",\r\n        passwordError: \"\",\r\n        serverDomain : this.context\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    validate = () => {\r\n        let fnameError = \"\";\r\n        let lnameError = \"\";\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!this.state.firstName) {\r\n            fnameError = \"first name is required\";\r\n        }\r\n        if (!this.state.lastName) {\r\n            lnameError = \"Last name is required\";\r\n        }\r\n\r\n        if (!this.state.email.includes(\"@\")) {\r\n            emailError = \"invalid email\";\r\n        }\r\n\r\n        if(this.state.password.length <8) {\r\n            passwordError=\"passwords must be 8 characters long and above\";\r\n        }\r\n\r\n        if (emailError || fnameError|| lnameError || passwordError) {\r\n            this.setState({ emailError, fnameError,lnameError, passwordError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n\r\n        const isValid = this.validate();\r\n\r\n        if (isValid)\r\n        {\r\n            const data = {\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            };\r\n\r\n            document.getElementById(\"emailError\").style.display = \"none\";\r\n            document.getElementById(\"registrationInfoPrompt\").style.display = \"none\";\r\n            document.getElementById(\"registrationInfoPromptWait\").style.display = \"flex\";\r\n            axios.post(this.state.serverDomain + '/v1/user/register/user', data)\r\n                .then(response =>\r\n                {\r\n                    if(response)\r\n                    {\r\n                        if(response.data.message.includes(\"success\"))\r\n                        {\r\n                            document.getElementById(\"registrationInfoPromptWait\").style.display = \"none\";\r\n                            document.getElementById(\"registrationInfoPrompt\").style.display = \"flex\";\r\n                            setTimeout(function(){\r\n                                window.location.assign(\"/login\");\r\n                            }, 3000);\r\n                        }\r\n                        else\r\n                        {\r\n                            alert(response.data.message);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error =>{\r\n                    if(error.response)\r\n                    {\r\n                        console.log(error.response)\r\n                        if(error.response.data.message.includes(\"the_email_already_been_taken\"))\r\n                        {\r\n                            document.getElementById(\"registrationInfoPromptWait\").style.display = \"none\";\r\n                            document.getElementById(\"registrationInfoPrompt\").style.display = \"none\";\r\n                            document.getElementById(\"emailError\").style.display = \"flex\";\r\n                        }\r\n                        else\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.error(error)\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"registerUser\" style={styles.main}>\r\n                    <div  id={\"banner_filter\"}>\r\n                        <Logo/>\r\n                        <Link to={\"/signUp\"}>\r\n                            <ArrowBackIcon style={{color: \"white\", marginLeft: \"30px\", fontSize: \"xx-large\"}}/>\r\n                        </Link>\r\n                        <div className=\"registerUserCard\">\r\n                            <Alert severity=\"error\" id={\"emailError\"}>the provided email is already taken...</Alert>\r\n                            <Alert severity=\"success\" id={\"registrationInfoPrompt\"}>registration complete - please wait for redirection</Alert>\r\n                            <Alert severity=\"info\" id={\"registrationInfoPromptWait\"}>please wait...</Alert>\r\n                            <div className=\"wrapp\">\r\n                                <form className=\"registerUserForm\" onSubmit={this.handleSubmit}>\r\n                               <span className=\"registerUserHeader\">\r\n                                   Sign Up\r\n                               </span>\r\n                                    <div className=\"names\">\r\n                                        <div className=\"registerUserInput1\" data-validate=\"Username is required\">\r\n                                        <span className=\"registerUserInputLabel\">\r\n                                            First Name\r\n                                        </span>\r\n                                            <div>\r\n                                                <TextField\r\n                                                    className=\"nameFields validate\"\r\n                                                    type=\"text\"\r\n                                                    name=\"firstName\"\r\n                                                    variant={\"outlined\"}\r\n                                                    placeholder=\"Enter your first name\"\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <span className=\"error\">{this.state.fnameError}</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"registerUserInput1\" data-validate=\"Username is required\">\r\n                                    <span className=\"registerUserInputLabel\">\r\n                                        Last Name\r\n                                    </span>\r\n                                            <div>\r\n                                                <TextField\r\n                                                    className=\"nameFields validate\"\r\n                                                    type=\"text\"\r\n                                                    name=\"lastName\"\r\n                                                    variant={\"outlined\"}\r\n                                                    placeholder=\"Enter your last name\"\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <span className=\"error\">{this.state.lnameError}</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"registerUserInput\" data-validate=\"surname is required\">\r\n                                    <span className=\"registerUserInputLabel\">\r\n                                        Email\r\n                                    </span>\r\n                                        <div>\r\n                                            <TextField\r\n                                                className=\"registerUserInnerInput validate\"\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                variant={\"outlined\"}\r\n                                                placeholder=\"Enter your Email\"\r\n                                                // value={this.state.email}\r\n                                                onChange={this.handleChange}/>\r\n\r\n                                        </div>\r\n                                        <span className=\"error\">{this.state.emailError}</span>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"registerUserInput\" data-validate=\"Username is required\">\r\n                                    <span className=\"registerUserInputLabel\">\r\n                                        Password\r\n                                    </span>\r\n\r\n                                        <TextField\r\n                                            className=\"registerUserInnerInput validate\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            minLength=\"8\"\r\n                                            variant={\"outlined\"}\r\n                                            placeholder=\"Enter your password\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n\r\n                                        <span className=\"error\">{this.state.passwordError}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"wrapp-btn\">\r\n                                        <button className=\"registerUser-btn\" type=\"submit\" onClick={this.handleSubmit}>\r\n                                            Sign Up\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RegisterUser;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\EmailSent.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\Password.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\Dashboard.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\verifyCertificate\\VerifyCertificate.js",["296","297","298"],"import React, {Component, useState} from 'react'\r\nimport backgroundImg from \"../../assets/homeBackground.jpg\";\r\nimport Logo from \"../login/Components/Logo\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport \"./styles/VerifyCert.css\"\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {ApiContext} from \"../../apiContext/ApiContext\";\r\n\r\nconst styles = {\r\n    main: {\r\n        backgroundImage: `url(${backgroundImg})`\r\n    }\r\n}\r\n\r\nexport class VerifyCertificate extends Component {\r\n    static contextType = ApiContext;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            selectedFile: '',\r\n            certificateOrganisationId : '',\r\n            serverDomain : this.context,\r\n        };\r\n    }\r\n\r\n    onChange = (e) =>\r\n    {\r\n        switch (e.target.name)\r\n        {\r\n            case 'selectedFile':\r\n                this.setState({ selectedFile: e.target.files[0] });\r\n                break;\r\n            default:\r\n                this.setState({ [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { selectedFile } = this.state;\r\n        let formData = new FormData();\r\n        formData.append('selectedFile', selectedFile);\r\n\r\n        let AlertPrompt = document.getElementById(\"AlertPrompt\");\r\n        let AlertPromptWait = document.getElementById(\"AlertPromptWait\");\r\n        let AlertServerError = document.getElementById(\"AlertServerError\");\r\n\r\n        let AlertBadCertificate = document.getElementById(\"AlertBadCertificate\");\r\n        let AlertGoodCertificate = document.getElementById(\"AlertGoodCertificate\");\r\n\r\n        AlertPrompt.style.display = \"none\";\r\n        AlertBadCertificate.style.display = \"none\";\r\n        AlertServerError.style.display = \"none\";\r\n        AlertGoodCertificate.style.display = \"none\";\r\n        AlertPromptWait.style.display = \"flex\";\r\n\r\n        fetch(\r\n            \"https://givealotcharities.herokuapp.com\"+ '/certificate/compare',\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n            console.log('Success:', result);\r\n                if(parseInt(result) === -1)\r\n                {\r\n                    AlertBadCertificate.style.display = \"flex\";\r\n                    AlertPromptWait.style.display = \"none\";\r\n                }\r\n                else if (parseInt(result) > -1)\r\n                {\r\n                    this.setState(\r\n                        {\r\n                            certificateOrganisationId : result\r\n                        }\r\n                    )\r\n                    AlertGoodCertificate.style.display = \"flex\";\r\n                    AlertBadCertificate.style.display = \"none\";\r\n                    AlertPromptWait.style.display = \"none\";\r\n                }\r\n                else\r\n                {\r\n                    AlertBadCertificate.style.display = \"none\";\r\n                    AlertPromptWait.style.display = \"none\";\r\n                    AlertGoodCertificate.style.display = \"none\";\r\n                    AlertServerError.style.display = \"flex\";\r\n                }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { selectedFile } = this.state;\r\n        return (\r\n            <div className=\"verifyCert\" style={styles.main}>\r\n                <div  id={\"banner_filter\"}>\r\n                    <Logo/>\r\n                    <Link to={\"/\"}>\r\n                        <ArrowBackIcon style={{color: \"white\", marginLeft: \"30px\", fontSize: \"xx-large\"}}/>\r\n                    </Link>\r\n                    <div className=\"fileUpload\" >\r\n                        <div>\r\n                            <h3 className=\"verify\">Verify Certificate</h3>\r\n                        </div>\r\n                        <div className=\"upload\">\r\n                            <div className=\"Upload\">\r\n                                <span className=\"Title\">Upload Certificate</span>\r\n                                <div className=\"Content\">\r\n                                    <div>\r\n                                        <form onSubmit={this.onSubmit}>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                name=\"selectedFile\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <button type=\"submit\">Submit</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Alert severity=\"error\" id={\"AlertBadCertificate\"}>this certificate is invalid...</Alert>\r\n                        <Alert severity=\"error\" id={\"AlertServerError\"}>Internal server error</Alert>\r\n                        <Alert severity=\"info\" id={\"AlertPrompt\"}>Please upload a Give a lot certificate (.PDF)</Alert>\r\n                        <Alert severity=\"info\" id={\"AlertPromptWait\"}>Please wait...</Alert>\r\n                        <Alert severity=\"success\"  id={\"AlertGoodCertificate\"}>Organisation verified\r\n\r\n                            <Link to={\"/organisation/\" + this.state.certificateOrganisationId}>\r\n                                <Button\r\n                                    id={\"goodAlertBtn\"}\r\n                                    variant={\"contained\"}\r\n                                >\r\n                                    visit\r\n                                </Button>\r\n                            </Link>\r\n                        </Alert>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerifyCertificate\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\default\\Default404.js",["299","300","301"],"import {useContext, useState} from \"react\";\r\nimport {FrontEndContext} from \"../../apiContext/FrontEndContext\";\r\n\r\nfunction Default404()\r\n{\r\n    /*const [frontEndDomain, setFrontEndDomain] = useState(useContext(FrontEndContext));\r\n    if (localStorage.getItem(\"role\")){\r\n        if (localStorage.getItem(\"role\") === \"admin\" || localStorage.getItem(\"role\") === \"organisation\"){\r\n            window.location.href = frontEndDomain + \"/dashboard/\"\r\n        }\r\n    }*/\r\n    return (\r\n    <div>\r\n        404\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Default404;\r\n\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\ResetSuccess.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\ResetPassword.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerOrganisation\\OrganisationRegistration.js",["302","303","304","305","306"],"import OrganisationRegistration_css from './Styles/OrganisationRegistration.css'\r\nimport {Box} from \"@material-ui/core\";\r\nimport backgroundImg from \"../../../assets/homeBackground.jpg\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {ApiContext} from \"../../../apiContext/ApiContext\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from \"../../../assets/logo/logo3_1.png\";\r\nimport Logo from \"../../login/Components/Logo\";\r\nconst styles = {\r\n    main: {\r\n        backgroundImage: `url(${backgroundImg})`\r\n    }\r\n}\r\nfunction OrganisationRegistration()\r\n{\r\n    let [registration_sector_options, set_registration_sector_options] = useState([\"test 1\",\"test 2\", \"test 3\"]);\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n\r\n    let registration_form_orgName = null;\r\n    let registration_form_orgEmail = null;\r\n    let registration_form_orgPassword = null;\r\n    let registration_form_orgSlogan = null;\r\n    let registration_form_orgDescription = null;\r\n    let orgSector_dropdown = null;\r\n    let registration_form_orgContact_person = null;\r\n    let registration_form_orgContact_number = null;\r\n    let image_tmp = null;\r\n\r\n    const validate_organisation_credentials = event =>\r\n    {\r\n        event.preventDefault();\r\n        registration_form_orgName = document.getElementById(\"registration_form_orgName\").value;\r\n        registration_form_orgEmail = document.getElementById(\"registration_form_orgEmail\").value;\r\n        registration_form_orgPassword = document.getElementById(\"registration_form_orgPassword\").value;\r\n        let isValidated = true;\r\n\r\n        if(registration_form_orgName.length === 0)\r\n        {\r\n            isValidated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[0].style.display = 'block';\r\n        }\r\n        else\r\n        {\r\n            document.getElementsByClassName(\"registration_form_required\")[0].style.display = 'none';\r\n        }\r\n\r\n        if(registration_form_orgEmail.length === 0)\r\n        {\r\n            isValidated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[1].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[1].innerText = \"this field is required*\";\r\n        }\r\n        else if(!registration_form_orgEmail.includes('@'))\r\n        {\r\n            isValidated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[1].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[1].innerText = \"invalid email address\";\r\n        }\r\n        else\r\n        {\r\n            document.getElementsByClassName(\"registration_form_required\")[1].style.display = 'none';\r\n            let config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'Access-Control-Allow-Origin': '*',\r\n                }\r\n            }\r\n\r\n            const email_check_req_body = {\r\n                email: registration_form_orgEmail\r\n            }\r\n            axios.post(serverDomain + '/v1/organisation/check/email',email_check_req_body, config)\r\n            .then(response =>{\r\n                if(response.data === true)\r\n                {\r\n                    document.getElementById(\"email_exists_toast\").style.display = \"flex\";\r\n                }\r\n                else\r\n                {\r\n                    document.getElementById(\"email_exists_toast\").style.display = \"none\";\r\n                    if(registration_form_orgPassword.length < 8)\r\n                    {\r\n                        isValidated = false;\r\n                        document.getElementsByClassName(\"registration_form_required\")[2].style.display = 'block';\r\n                        document.getElementsByClassName(\"registration_form_required\")[2].innerText = \"must be at least 8 characters long\";\r\n                    }\r\n                    else\r\n                    {\r\n                        document.getElementsByClassName(\"registration_form_required\")[2].style.display = 'none';\r\n                    }\r\n\r\n                    if(isValidated === true)\r\n                    {\r\n                        let current_view = document.getElementById(\"register_organisation_outter_container_credentials\");\r\n                        let next_view = document.getElementById(\"register_organisation_outter_container_info\");\r\n                        current_view.style.display = \"none\";\r\n                        next_view.style.display = \"block\";\r\n                    }\r\n                }\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n    const go_back_from_info = event =>\r\n    {\r\n        event.preventDefault();\r\n        let current_view = document.getElementById(\"register_organisation_outter_container_info\");\r\n        let prev_view = document.getElementById(\"register_organisation_outter_container_credentials\");\r\n        current_view.style.display = \"none\";\r\n        prev_view.style.display = \"block\";\r\n    }\r\n\r\n    const validate_organisation_info = event =>\r\n    {\r\n        event.preventDefault();\r\n        registration_form_orgSlogan = document.getElementById(\"registration_form_orgSlogan\").value;\r\n        registration_form_orgDescription = document.getElementById(\"registration_form_orgDescription\").value;\r\n        orgSector_dropdown = document.getElementById(\"orgSector_dropdown\").value;\r\n        let is_validated = true;\r\n\r\n        if(registration_form_orgSlogan.length === 0)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[3].style.display = 'flex';\r\n        }\r\n        else document.getElementsByClassName(\"registration_form_required\")[3].style.display = 'none';\r\n\r\n        if(orgSector_dropdown.length === 0 || orgSector_dropdown === \"organisation sector\")\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[4].style.display = 'flex';\r\n        }\r\n        else document.getElementsByClassName(\"registration_form_required\")[4].style.display = 'none';\r\n\r\n        if(registration_form_orgDescription.length === 0)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[5].style.display = 'flex';\r\n            document.getElementsByClassName(\"registration_form_required\")[5].innerText = \"this field is required* \";\r\n        }\r\n        else if(registration_form_orgDescription.length < 200)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[5].style.display = 'flex';\r\n            document.getElementsByClassName(\"registration_form_required\")[5].innerText = \"description has to be at least 200 characters\";\r\n        }\r\n        else document.getElementsByClassName(\"registration_form_required\")[5].style.display = 'none';\r\n\r\n        if(is_validated)\r\n        {\r\n            let current_view = document.getElementById(\"register_organisation_outter_container_info\");\r\n            let next_view = document.getElementById(\"register_organisation_outter_container_contact\");\r\n            current_view.style.display = \"none\";\r\n            next_view.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    const go_back_from_contact_info = event =>\r\n    {\r\n        event.preventDefault();\r\n        let current_view = document.getElementById(\"register_organisation_outter_container_contact\");\r\n        let prev_view = document.getElementById(\"register_organisation_outter_container_info\");\r\n        current_view.style.display = \"none\";\r\n        prev_view.style.display = \"block\";\r\n    }\r\n\r\n    const  validate_organisation_contact_info = event =>\r\n    {\r\n        event.preventDefault();\r\n        registration_form_orgContact_person = document.getElementById(\"registration_form_orgContact_person\").value;\r\n        registration_form_orgContact_number = document.getElementById(\"registration_form_orgContact_number\").value;\r\n        let is_validated = true;\r\n\r\n        if(registration_form_orgContact_person.length === 0)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[6].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[6].innerText = \"this field is required *\";\r\n        }\r\n        else if(registration_form_orgContact_person.split(\" \").length < 2 ||\r\n            (registration_form_orgContact_person.split(\" \").length > 1 &&\r\n            registration_form_orgContact_person.split(\" \")[1].length === 0))\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[6].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[6].innerText = \"both name and surname are required\";\r\n        }\r\n        else document.getElementsByClassName(\"registration_form_required\")[6].style.display = 'none';\r\n\r\n        if(registration_form_orgContact_number.length === 0)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[7].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[7].innerText = \"this field is required *\";\r\n        }\r\n        else if(registration_form_orgContact_number.length !== 10)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName(\"registration_form_required\")[7].style.display = 'block';\r\n            document.getElementsByClassName(\"registration_form_required\")[7].innerText = \"invalid cellphone number\";\r\n        }\r\n        else document.getElementsByClassName(\"registration_form_required\")[7].style.display = 'none';\r\n\r\n        if(is_validated)\r\n        {\r\n            let current_view = document.getElementById(\"register_organisation_outter_container_contact\");\r\n            let next_view = document.getElementById(\"register_organisation_outter_container_photo\");\r\n            current_view.style.display = \"none\";\r\n            next_view.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    const go_back_from_contact_photo = event =>\r\n    {\r\n        event.preventDefault();\r\n        let current_view = document.getElementById(\"register_organisation_outter_container_photo\");\r\n        let prev_view = document.getElementById(\"register_organisation_outter_container_contact\");\r\n\r\n        current_view.style.display = \"none\";\r\n        prev_view.style.display = \"block\";\r\n    }\r\n\r\n    const validate_registration = event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        image_tmp = document.getElementById(\"registration_form_orgPhoto\").files[0];\r\n        let is_validated = true;\r\n\r\n        if(image_tmp === null || image_tmp === undefined)\r\n        {\r\n            is_validated = false;\r\n            document.getElementsByClassName('registration_form_required')[8].style.display = \"block\";\r\n        }\r\n        else document.getElementsByClassName('registration_form_required')[8].style.display = \"none\";\r\n\r\n\r\n        if(is_validated)\r\n        {\r\n            const formData = new FormData();\r\n\r\n            formData.append('orgName', registration_form_orgName);\r\n            formData.append('slogan', registration_form_orgSlogan);\r\n            formData.append('orgDescription', registration_form_orgDescription);\r\n            formData.append('orgSector', orgSector_dropdown);\r\n            formData.append('orgEmail', registration_form_orgEmail);\r\n            formData.append('contactPerson', registration_form_orgContact_person);\r\n            formData.append('contactNumber', registration_form_orgContact_number);\r\n            formData.append('password', registration_form_orgPassword);\r\n            formData.append('image', image_tmp);\r\n\r\n\r\n            document.getElementById('final_registration_toasts_org_succ').style.display = \"none\";\r\n            document.getElementById('final_registration_toasts_org_info').style.display = \"flex\";\r\n            document.getElementById('final_registration_toasts_org_error').style.display = \"none\";\r\n            document.getElementsByClassName('registration_form_container_final')[0].style.display = \"none\";\r\n            document.getElementsByClassName(\"profile_photo_upload_registration_organisation\")[0].innerText = \"setting you up\";\r\n            fetch(\r\n                serverDomain + '/v1/organisation/add/org',\r\n                {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                }\r\n            )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n\r\n                if(result.code.includes(\"add_org_200_ok\"))\r\n                {\r\n                    document.getElementById('final_registration_toasts_org_succ').style.display = \"flex\";\r\n                    document.getElementById('final_registration_toasts_org_info').style.display = \"none\";\r\n                    document.getElementById('final_registration_toasts_org_error').style.display = \"none\";\r\n\r\n                    setTimeout(function(){\r\n                        window.location.assign(\"/login\");\r\n                    }, 3000);\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                document.getElementById('final_registration_toasts_org_succ').style.display = \"none\";\r\n                document.getElementById('final_registration_toasts_org_info').style.display = \"none\";\r\n                document.getElementById('final_registration_toasts_org_error').style.display = \"error\";\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get(serverDomain + '/v1/organisation/get/sectors', config)\r\n            .then(response =>{\r\n\r\n                set_registration_sector_options(response.data.sectors)\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <div id={\"reg_org_main_page\"} style={styles.main}>\r\n\r\n            <Box id={\"banner_filter\"}>\r\n                {/*credentials*/}\r\n                <Logo/>\r\n                <Link to={\"/login\"}>\r\n                    <ArrowBackIcon style={{color: \"white\", marginLeft: \"30px\", fontSize: \"xx-large\"}}/>\r\n                </Link>\r\n\r\n                <Box id={\"register_organisation_outter_container_credentials\"} className={\"register_organisation_outter_container\"}>\r\n                    <Alert id={\"email_exists_toast\"} severity={\"error\"}>\r\n                        email already exists\r\n                    </Alert>\r\n                    <p className={\"register_organisation_heading\"}>\r\n                        Credentials\r\n                    </p>\r\n                    <div className={\"registration_form_container\"}>\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgName\"\r\n                                label=\"organisation name\"\r\n                                variant={\"outlined\"}\r\n                                type=\"text\"\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgEmail\"\r\n                                label=\"email\"\r\n                                variant={\"outlined\"}\r\n                                type=\"email\"\r\n                                variant={\"outlined\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgPassword\"\r\n                                label=\"password\"\r\n                                type=\"password\"\r\n                                variant={\"outlined\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <Button\r\n                        variant={\"contained\"}\r\n                        className={\"registration_form_btn\"}\r\n                        onClick={validate_organisation_credentials}\r\n                        color={\"primary\"}\r\n                        >\r\n                            next\r\n                        </Button>\r\n                    </div>\r\n                </Box>\r\n                <Box id={\"register_organisation_outter_container_info\"} className={\"register_organisation_outter_container \"}>\r\n                    <p className={\"register_organisation_heading\"}>\r\n                        About your organisation\r\n                    </p>\r\n                    <div className={\"registration_form_container\"}>\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgSlogan\"\r\n                                label=\"provide your slogan\"\r\n                                type=\"text\"\r\n                                variant={\"outlined\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <select className=\"registration_form_input\" id={\"orgSector_dropdown\"}>\r\n                                <option key=\"registration_form_input_dropdown\" className={\"registration_form_input_options\"}>organisation sector</option>\r\n                                {registration_sector_options.map((item) =>\r\n                                    <option className={\"registration_form_input_options\"} key={item} value={item}>{item}</option>\r\n                                )}\r\n                            </select>\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                    <div className={\"registration_form_input_container\"}>\r\n                        <TextField\r\n                            id=\"registration_form_orgDescription\"\r\n                            label=\"describe your organisation\"\r\n                            multiline\r\n                            rows={4}\r\n                            required\r\n                            variant={\"outlined\"}\r\n                        />\r\n                        <span className={\"registration_form_required\"}>this field is required *</span>\r\n                    </div>\r\n\r\n                        <Box className={\"registration_form_btn_multi_container\"}>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={go_back_from_info}\r\n                                color={\"primary\"}\r\n                            >\r\n                                back\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={validate_organisation_info}\r\n                                color={\"primary\"}\r\n                            >\r\n                                next\r\n                            </Button>\r\n                        </Box>\r\n                    </div>\r\n                </Box>\r\n                <Box id={\"register_organisation_outter_container_contact\"} className={\"register_organisation_outter_container\"}>\r\n                    <p className={\"register_organisation_heading\"}>\r\n                        contact person\r\n                    </p>\r\n                    <div className={\"registration_form_container\"}>\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgContact_person\"\r\n                                label=\"name and surname\"\r\n                                type=\"text\"\r\n                                variant={\"outlined\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <div className={\"registration_form_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgContact_number\"\r\n                                label=\"phone no i.g 0112345679\"\r\n                                type=\"number\"\r\n                                variant={\"outlined\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <Box className={\"registration_form_btn_multi_container\"}>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={go_back_from_contact_info}\r\n                                color={\"primary\"}\r\n                            >\r\n                                back\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={validate_organisation_contact_info}\r\n                                color={\"primary\"}\r\n                            >\r\n                                next\r\n                            </Button>\r\n                        </Box>\r\n                    </div>\r\n                </Box>\r\n                <Box id={\"register_organisation_outter_container_photo\"} className={\"register_organisation_outter_container\"}>\r\n                    <p className={\"register_organisation_heading profile_photo_upload_registration_organisation\"}>\r\n                        profile photo\r\n                    </p>\r\n\r\n\r\n                    <Alert id={\"final_registration_toasts_org_succ\"} severity={\"success\"}>\r\n                        successfully registered, redirecting...\r\n                    </Alert>\r\n                    <Alert id={\"final_registration_toasts_org_error\"} severity={\"error\"}>\r\n                        failed to register...\r\n                    </Alert>\r\n                    <Alert id={\"final_registration_toasts_org_info\"} severity={\"info\"}>\r\n                        this will take a minute, please wait...\r\n                    </Alert>\r\n\r\n\r\n                    <div className={\"registration_form_container registration_form_container_final\"}>\r\n\r\n                        <div className={\"registration_form_input_container\"}>\r\n                            <TextField\r\n                                className={\"registration_form_input\"}\r\n                                id=\"registration_form_orgPhoto\"\r\n                                label=\"choose photo\"\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                variant={\"standard\"}\r\n                            />\r\n                            <span className={\"registration_form_required\"}>this field is required *</span>\r\n                        </div>\r\n\r\n                        <Box className={\"registration_form_btn_multi_container\"}>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={go_back_from_contact_photo}\r\n                                color={\"primary\"}\r\n                            >\r\n                                back\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                className={\"registration_form_btn_multi\"}\r\n                                onClick={validate_registration}\r\n                                color={\"primary\"}\r\n                            >\r\n                                register\r\n                            </Button>\r\n                        </Box>\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrganisationRegistration;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\ViewOrganisation.js",["307","308","309","310","311","312","313","314","315","316"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\n\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\nimport '../../Styles/view_organisation.css';\r\nimport {Accordion, AccordionDetails,Box, TextField} from \"@material-ui/core\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport OrganisationTimeLineItem from '../OrganisationTimeLineItem/OrganisationTimeLineItem'\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Loader from \"../../../loader/Loader\";\r\nimport {ApiContext} from \"../../../../apiContext/ApiContext\";\r\nimport axios from \"axios\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Chatbot from \"../../../chatbot/Chatbot\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\n/*timeline*/\r\n\r\nfunction trim_description(descr)\r\n{\r\n    let summary = \"\";\r\n    let complete_descr = \"\";\r\n    if(descr !== undefined) {\r\n        if (descr.length > 50) {\r\n            summary = \"\";\r\n            let i;\r\n            let upperbound = 200;\r\n            for (i = 0; i < upperbound && i < descr.length; i++) {\r\n                if (i + 1 === upperbound && descr[i] !== \" \")\r\n                    upperbound++;\r\n                summary = summary + descr[i];\r\n            }\r\n\r\n            summary = summary + \"[expand to read more]\";\r\n\r\n            for (let k = i; k < descr.length; k++) {\r\n                complete_descr = complete_descr + descr[k];\r\n            }\r\n\r\n        }\r\n    }\r\n    return [summary, complete_descr];\r\n}\r\nfunction ViewOrganisation()\r\n{\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [pageLoaded, setPageLoaded] = React.useState(true);\r\n    const [organisationData, setOrganisationData] = React.useState([]);\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let [timelineEvents, setTimelineEvents] = useState([]);\r\n    let [curr_organisation_id, set_curr_organisation_id] = useState(localStorage.getItem('id'));\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    let {id} = useParams();\r\n    let image_id = id + \"\";\r\n    let showReportFormTrack = false;\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const reportOrganisation = event =>\r\n    {\r\n        event.preventDefault();\r\n        let orgId = id;\r\n        let userId = localStorage.getItem(\"id\");\r\n        let reportType = document.getElementById(\"report-title-input\").value;\r\n        let reportDescription = document.getElementById(\"report-description-input\").value;\r\n\r\n        let reportRequest = {\r\n            orgId : orgId,\r\n            userId : userId,\r\n            reportType : reportType,\r\n            description : reportDescription\r\n        }\r\n\r\n        if(userId === null || userId === \"default\")\r\n        {\r\n            alert(\"please sign in if you want to report an organisation\");\r\n            window.location.assign(\"/login\");\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('report_wait_alert').style.display = \"flex\";\r\n            document.getElementById('report_error_alert').style.display = \"none\";\r\n            document.getElementById('report_server_error_alert').style.display = \"none\";\r\n            axios.post(serverDomain + '/report/org/', reportRequest)\r\n            .then(response =>\r\n            {\r\n                if(response)\r\n                {\r\n                    document.getElementById('report_success_alert').style.display = \"flex\";\r\n                    document.getElementById('report_wait_alert').style.display = \"none\";\r\n                    setTimeout(function(){\r\n                        document.getElementById('report_success_alert').style.display = \"none\";\r\n                    }, 3000);\r\n                }\r\n            })\r\n            .catch(error =>\r\n            {\r\n                document.getElementById('report_wait_alert').style.display = \"none\";\r\n                if(error.response)\r\n                {\r\n                    document.getElementById('report_error_alert').style.display = \"flex\";\r\n                }\r\n                else\r\n                {\r\n                    document.getElementById('report_server_error_alert').style.display = \"flex\";\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n            let tmp_selected_user;\r\n            if(localStorage.getItem(\"role\") !== \"general\")\r\n                tmp_selected_user = \"default\";\r\n            else tmp_selected_user = localStorage.getItem(\"id\");\r\n\r\n            fetch( serverDomain + \"/v1/organisation/sel/organisation/\" + id + \"/\" + tmp_selected_user)\r\n            .then(async response =>\r\n            {\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) /* error handling here */\r\n                {\r\n                    if (response.status === 500) {\r\n                    } else if (response.status === 401) {\r\n                    }\r\n                    if (typeof data !== 'undefined') {\r\n                    }\r\n                }\r\n\r\n                if (data.message === \"success\") /*successfully fetched*/\r\n                {\r\n                    setOrganisationData(data.response);\r\n                    setPageLoaded(true);\r\n                }\r\n                else\r\n                {\r\n                    setOrganisationData([]);\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                alert(\"failed - select - sector\")\r\n            });\r\n\r\n            fetch( serverDomain + \"/event/get/timeline/\" + id)\r\n                .then(async response =>{\r\n\r\n                    const data = await response.json();\r\n\r\n                    if(!response.ok) /* error handling here */\r\n                    {\r\n                        if(response.status === 500)\r\n                        {}\r\n                        else if(response.status === 401)\r\n                        {}\r\n\r\n                        if(typeof data !== 'undefined')\r\n                        {}\r\n                    }\r\n\r\n                    if(data.message === \"success\") /*successfully fetched*/\r\n                        setTimelineEvents(data.object)\r\n                    else\r\n                    {}\r\n                })\r\n\r\n                .catch(error => {\r\n                    alert(\"failed - organisations - sector\")\r\n                });\r\n        }\r\n        ,[])\r\n    /* fetch request - organisations by sections - end*/\r\n\r\n\r\n\r\n    let description = [];\r\n    description[0] = \"\";\r\n    description[1] = \"\";\r\n\r\n    if(organisationData !== undefined)\r\n    {\r\n        description = trim_description(organisationData.orgDescription);\r\n    }\r\n\r\n    let fetched_timeline_events = [];\r\n    if(timelineEvents !== undefined)\r\n    {\r\n        for (let i = 0; i < timelineEvents.length; i++)\r\n        {\r\n            let timeline_event_date = timelineEvents[i].eventDate;\r\n            let timeline_event_title = timelineEvents[i].eventTitle;\r\n            let timeline_event_id = timelineEvents[i].eventId;\r\n            let timeline_event_description = timelineEvents[i].eventShortDescription;\r\n\r\n            fetched_timeline_events.push(\r\n                <OrganisationTimeLineItem id={timeline_event_id}\r\n                                          date={timeline_event_date}\r\n                                          title={timeline_event_title}\r\n                                          description={timeline_event_description}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    let number_of_images = 0;\r\n    if(organisationData !== undefined)\r\n    {\r\n        number_of_images = organisationData.numberOfImages;\r\n\r\n    }\r\n\r\n    let images = [];\r\n\r\n    for(let i = 1; i < number_of_images+1; i++)\r\n    {\r\n        let image = {\r\n            original : serverDomain + \"/media/version/gallery/images/\"+id+\"/\" + i,\r\n            originalClass: \"galleryOriginal\",\r\n            originalHeight: 310,\r\n            originalWidth: 400,\r\n            thumbnail: serverDomain + \"/media/version/gallery/images/\"+id+\"/\" + i,\r\n            thumbnailHeight: 60,\r\n            thumbnailWidth: 20,\r\n\r\n            thumbnailClass: \"galleryThumbnail\"\r\n        }\r\n        images.push(image);\r\n    }\r\n\r\n    return (\r\n       <div id={\"view_organisation_container_outer\"}>\r\n           {pageLoaded === false && <Loader />}\r\n           <Chatbot />\r\n           <Navbar/>\r\n           <Container maxWidth={\"xl\"}  id=\"view_organisation_container\">\r\n               <Container maxWidth={\"sm\"} id=\"view_organisation\">\r\n                   <div id=\"view_header\">\r\n                       <div id=\"view_organisations_card\">\r\n                           <h1>{organisationData.orgName}</h1>\r\n                           <h4>{organisationData.slogan}</h4>\r\n                       </div>\r\n\r\n                       <img src={ serverDomain + \"/v1/organisation/image/get/logo/\" + id} id={\"imageCover\"}/>\r\n\r\n                       <div id={\"id_social_media\"}>\r\n                           {organisationData.istagramURl ?\r\n                               <Button id={\"instaIcon\"} size={\"small\"} startIcon={<InstagramIcon/>}\r\n                                    onClick={() => {\r\n                                        window.open(organisationData.istagramURl);\r\n                                    }}>\r\n                               instagram\r\n                           </Button>\r\n                               :\r\n                               <Button id={\"instaIcon\"}\r\n                                       disabled\r\n                                       size={\"small\"}\r\n                                       className={\"disabledBTN\"}\r\n                                       startIcon={<InstagramIcon/>}>\r\n                                   instagram\r\n                               </Button>\r\n                           }\r\n\r\n                           {organisationData.facebookUrl ?\r\n                               <Button id={\"FacebookIcon\"}\r\n                                       size={\"small\"}\r\n                                       startIcon={<FacebookIcon/>}\r\n                                        onClick={() => {\r\n                                            window.open(organisationData.facebookUrl);\r\n                                        }}>\r\n                                    facebook\r\n                               </Button>\r\n                               :\r\n                               <Button id={\"FacebookIcon\"}\r\n                                       disabled\r\n                                       size={\"small\"}\r\n                                       className={\"disabledBTN\"}\r\n                                       startIcon={<FacebookIcon/>}>\r\n                                    facebook\r\n                               </Button>\r\n                           }\r\n\r\n                           {organisationData.twitterUrl ?\r\n                               <Button id={\"TwitterIcon\"} size={\"small\"} startIcon={<TwitterIcon/>}\r\n                                    onClick={() => {\r\n                                        window.open(organisationData.twitterUrl);\r\n                                    }}>\r\n                                  twitter\r\n                               </Button>\r\n                               :\r\n                               <Button id={\"TwitterIcon\"}\r\n                                       disabled\r\n                                       size={\"small\"}\r\n                                       className={\"disabledBTN\"}\r\n                                       startIcon={<TwitterIcon/>}>\r\n                                   twitter\r\n                               </Button>\r\n                           }\r\n                       </div>\r\n                   </div>\r\n\r\n                   <div id=\"view_organisation_meta_body\">\r\n                       <p id=\"view_organisation_meta_body_about\">about us</p>\r\n\r\n                       <Accordion elevation={0} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                           <AccordionSummary\r\n                               expandIcon={<ExpandMoreIcon />}\r\n                               aria-controls=\"panel1bh-content\"\r\n                               id=\"panel1bh-header\"\r\n                           >\r\n                               {/*  <Typography className={classes.heading}>General settings</Typography> */}\r\n                               <Typography className={classes.secondaryHeading}>{description[0]}</Typography>\r\n                           </AccordionSummary>\r\n                           <AccordionDetails>\r\n                               <Typography>\r\n                                   {description[1]}\r\n                               </Typography>\r\n                           </AccordionDetails>\r\n                       </Accordion>\r\n                   </div>\r\n\r\n                   {images.length > 0 ?\r\n                       <>\r\n                           <p id=\"view_organisation_meta_body_about\">gallery</p>\r\n                           <div id=\"view_organisation_gallery\">\r\n                           <p>{images.length} pictures</p>\r\n                           <ImageGallery\r\n                               showFullscreenButton={false}\r\n                               showPlayButton={false}\r\n                               showIndex={true}\r\n                               autoPlay={true}\r\n                               items={images}/>\r\n                           </div>\r\n                       </>\r\n\r\n                       :\r\n\r\n                       <></>\r\n                   }\r\n\r\n               </Container>\r\n\r\n               <Container maxWidth=\"sm\" id=\"view_organisation_right\">\r\n                   <Box maxWidth={500} id=\"certificate_container\" color=\"text.primary\">\r\n                       <div>\r\n                           <div id={\"view_header_meta_content\"}>\r\n                               <div><p>Certificate level</p></div>\r\n                               <img src={\"https://avatars.dicebear.com/api/initials/\" + organisationData.certificateLevel + \".svg?w=500\"} />\r\n                           </div>\r\n\r\n                           <Box id={\"donateSection\"}>\r\n                               <img src={serverDomain + \"/media/version/qr_code/\" + id} width={128} height={128}/>\r\n\r\n                               {\r\n                                   organisationData.donationLink ?\r\n                                       <Button variant={\"contained\"}>donate</Button>\r\n\r\n                                       :\r\n\r\n                                       <Button variant={\"contained\"}\r\n                                               disabled\r\n                                               className={\"disabledBTN\"}>donate</Button>\r\n                               }\r\n\r\n                           </Box>\r\n                       </div>\r\n\r\n                       <p id={\"certificate_award_message\"}>\r\n                          The following certificate was awarded by Give A Lot to <em>{organisationData.orgName}</em> upon reviewing\r\n                          their organisation and the information they provided to Give A Lot.\r\n                       </p>\r\n\r\n                       <img src={serverDomain + \"/media/version/cert_png/\" + id}  />\r\n\r\n                       <Button variant=\"contained\" color=\"secondary\"\r\n                               onClick={(e) => {\r\n                                   e.preventDefault();\r\n                                   window.open(serverDomain +'/certificate/download/' + id);\r\n                               }}\r\n                       >\r\n                           Download certificate\r\n                       </Button>\r\n                   </Box>\r\n\r\n\r\n                   <Box id={\"report_organisation_container\"}>\r\n                       <p>\r\n                           Your satisfaction matters to us,\r\n                           report an organisation if you have any suspicions.\r\n                       </p>\r\n                       <Button\r\n                        variant={\"outlined\"}\r\n                        color={\"secondary\"}\r\n                        /*onClick={reportFormToggle}*/\r\n                           onClick={handleClickOpen}\r\n                       >\r\n                           Report\r\n                       </Button>\r\n                       <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                           <DialogTitle id=\"report_organisation_heading_browse\">please complete your report</DialogTitle>\r\n                           <Box id={\"report_form_container\"}>\r\n\r\n                               <Alert\r\n                                   id={\"report_success_alert\"}\r\n                                   severity={\"success\"}\r\n                               >\r\n                                   successfully reported\r\n                               </Alert>\r\n\r\n                               <Alert\r\n                                   id={\"report_wait_alert\"}\r\n                                   severity={\"info\"}\r\n                               >\r\n                                   please wait...\r\n                               </Alert>\r\n\r\n                               <Alert\r\n                                   id={\"report_error_alert\"}\r\n                                   severity={\"error\"}\r\n                               >\r\n                                   all fields are required!!!\r\n                               </Alert>\r\n\r\n                               <Alert\r\n                                   id={\"report_server_error_alert\"}\r\n                                   severity={\"error\"}\r\n                               >\r\n                                   server error :-(\r\n                               </Alert>\r\n\r\n                               <TextField\r\n                                   className={\"report_form_input\"}\r\n                                   id={\"report-title-input\"}\r\n                                   variant={\"outlined\"}\r\n                                   label=\"What is your accusation?\"\r\n                                   placeholder={\"example, imposter\"}\r\n                                   type=\"text\"\r\n                               />\r\n\r\n                               <TextField\r\n                                   className={\"report_form_input\"}\r\n                                   variant={\"outlined\"}\r\n                                   id={\"report-description-input\"}\r\n                                   label=\"describe the event\"\r\n                                   placeholder=\"Describe the accusation in detail\"\r\n                                   maxRows={3}\r\n                                   multiline\r\n                               />\r\n\r\n                               <Button\r\n                                   variant={\"contained\"}\r\n                                   color={\"primary\"}\r\n                                   class=\"g-recaptcha\"\r\n                                   data-sitekey=\"reCAPTCHA_site_key\"\r\n                                   data-action='submit'\r\n                                   data-callback='reportOrganisation'\r\n                                   onClick={reportOrganisation}\r\n\r\n                               >\r\n                                   submit\r\n                               </Button>\r\n                           </Box>\r\n                       </Dialog>\r\n\r\n\r\n                   </Box>\r\n\r\n                   <p id=\"view_organisation_meta_body_about\">timeline</p>\r\n\r\n                   <Box id={\"organisation_timeline\"}>\r\n                        <Timeline align=\"alternate\">\r\n                            {fetched_timeline_events}\r\n                        </Timeline>\r\n                   </Box>\r\n               </Container>\r\n           </Container>\r\n            <Footer />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ViewOrganisation;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\registration\\registerUser\\UserSuccess.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Featured.js",["317"],"import React, { Component } from 'react'\r\nimport \"./Styles/Featured.css\"\r\nimport Chart from \"./Chart\"\r\nimport Cards from \"./Cards\"\r\nimport axios from \"axios\";\r\nimport {ApiContext, ApiUrlProvider} from \"../../../../../apiContext/ApiContext\";\r\nimport AdminSidebar from \"../DemoSidebar/AdminSidebar\";\r\nexport class Featured extends Component {\r\n\r\n    static contextType = ApiContext;\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UsersPerMonth: '',\r\n            OrganisationsPerMonth: '',\r\n            userData: [],\r\n            adminUserEmail: localStorage.getItem('curr_user_email'),\r\n            OrgData: [],\r\n            serverDomain: \"https://givealotcharities.herokuapp.com\",\r\n            frontEndDomain: 'https://givealot.netlify.app/'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.OrganisationsPerMonth();\r\n        this.UsersPerMonth();\r\n    }\r\n\r\n    UsersPerMonth(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const UserPerMonth = {\r\n            \"adminUserEmail\":this.state.adminUserEmail\r\n        }\r\n\r\n        axios.post(this.state.serverDomain + '/v1/user/get/num_users/per_month', UserPerMonth, config)\r\n            .then(response =>{\r\n                // console.log(response)\r\n                this.setState({ userData:[\r\n                        {\r\n                            name: \"jan\",\r\n                            \"Registered Users\": response.data.object.jan,\r\n                        },\r\n                        {\r\n                            name: \"feb\",\r\n                            \"Registered Users\": response.data.object.feb,\r\n                        },\r\n                        {\r\n                            name: \"mar\",\r\n                            \"Registered Users\": response.data.object.mar,\r\n                        },\r\n                        {\r\n                            name: \"apr\",\r\n                            \"Registered Users\": response.data.object.apr,\r\n                        },\r\n                        {\r\n                            name: \"may\",\r\n                            \"Registered Users\": response.data.object.may,\r\n                        },\r\n                        {\r\n                            name: \"jun\",\r\n                            \"Registered Users\": response.data.object.jun,\r\n                        },\r\n                        {\r\n                            name: \"jul\",\r\n                            \"Registered Users\": response.data.object.jul,\r\n                        },\r\n                        {\r\n                            name: \"aug\",\r\n                            \"Registered Users\": response.data.object.aug,\r\n                        },\r\n                        {\r\n                            name: \"sept\",\r\n                            \"Registered Users\": response.data.object.sept,\r\n                        },\r\n                        {\r\n                            name: \"oct\",\r\n                            \"Registered Users\": response.data.object.oct,\r\n                        },\r\n                        {\r\n                            name: \"nov\",\r\n                            \"Registered Users\": response.data.object.nov,\r\n                        },\r\n                        {\r\n                            name: \"dec\",\r\n                            \"Registered Users\": response.data.object.dec,\r\n                        }\r\n                    ]\r\n\r\n                })\r\n\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    OrganisationsPerMonth(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const OrgPerMonth = {\r\n            \"adminUserEmail\":this.state.adminUserEmail\r\n        }\r\n        axios.post(this.state.serverDomain + '/v1/organisation/get/num_organisations/per_month', OrgPerMonth, config)\r\n            .then(response =>{\r\n                // console.log(response)\r\n                this.setState({ OrgData:[\r\n                        {\r\n                            name: \"jan\",\r\n                            \"Registered Organisations\": response.data.object.jan,\r\n                        },\r\n                        {\r\n                            name: \"feb\",\r\n                            \"Registered Organisations\": response.data.object.feb,\r\n                        },\r\n                        {\r\n                            name: \"mar\",\r\n                            \"Registered Organisations\": response.data.object.mar,\r\n                        },\r\n                        {\r\n                            name: \"apr\",\r\n                            \"Registered Organisations\": response.data.object.apr,\r\n                        },\r\n                        {\r\n                            name: \"may\",\r\n                            \"Registered Organisations\": response.data.object.may,\r\n                        },\r\n                        {\r\n                            name: \"jun\",\r\n                            \"Registered Organisations\": response.data.object.jun,\r\n                        },\r\n                        {\r\n                            name: \"jul\",\r\n                            \"Registered Organisations\": response.data.object.jul,\r\n                        },\r\n                        {\r\n                            name: \"aug\",\r\n                            \"Registered Organisations\": response.data.object.aug,\r\n                        },\r\n                        {\r\n                            name: \"sept\",\r\n                            \"Registered Organisations\": response.data.object.sept,\r\n                        },\r\n                        {\r\n                            name: \"oct\",\r\n                            \"Registered Organisations\": response.data.object.oct,\r\n                        },\r\n                        {\r\n                            name: \"nov\",\r\n                            \"Registered Organisations\": response.data.object.nov,\r\n                        },\r\n                        {\r\n                            name: \"dec\",\r\n                            \"Registered Organisations\": response.data.object.dec,\r\n                        }\r\n                    ]\r\n\r\n            })\r\n\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if(localStorage.getItem(\"id\") === null ||\r\n            localStorage.getItem(\"id\") === undefined ||\r\n            localStorage.getItem(\"id\") === 'default')\r\n        {\r\n\r\n            window.location.href = this.state.frontEndDomain + \"/login\";\r\n        }\r\n        const { userData, OrgData } = this.state\r\n        return (\r\n\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <AdminSidebar />\r\n                </div>\r\n\r\n                <div className=\"featured\">\r\n\r\n                    <div className=\"featuredBody\">\r\n                        <div className=\"featuredTop\">\r\n                            <Cards />\r\n                            <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                                <div className=\"dashGraph\">\r\n                                    <Chart data={userData} title=\"Users who registered on the system\" grid dataKey=\"Registered Users\" />\r\n                                </div>\r\n                                <div className=\"dashGraph\">\r\n                                    <Chart data={OrgData} title=\"Organisations who registered on the system\" grid dataKey=\"Registered Organisations\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Featured\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Users\\Users.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\OrganisationsDash.js",["318"],"import React , { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button'\r\nimport \"../../styles/Organisations.css\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddOrg from \"./AddOrg\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport AdminSidebar from \"../DemoSidebar/AdminSidebar\";\r\n\r\nexport class OrganisationsDash extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            org:[],\r\n            error: \"\",\r\n            sector: \"\",\r\n            open: false,\r\n            openAdd: false,\r\n            getSector: [],\r\n            adminId: localStorage.getItem('id'),\r\n            openSector: false,\r\n            serverDomain: 'https://givealotcharities.herokuapp.com',\r\n            frontEndDomain: 'https://givealot.netlify.app'\r\n        }\r\n    }\r\n\r\n    openDialog() {\r\n        this.setState({ open: true });\r\n    }\r\n    openDialogAdd() {\r\n        this.setState({ openAdd: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleCloseAdd = () => {\r\n        this.setState({ openAdd: false });\r\n    };\r\n    handleCloseSector = () => {\r\n        this.setState({ openSector: false });\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSectors();\r\n        this.getOrganisations();\r\n    }\r\n    getOrganisations(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const adminUsersRequestBodyOrgs = {\r\n            \"adminId\" : this.state.adminId\r\n        }\r\n        axios.post(this.state.serverDomain + '/v1/organisation/get/organisations',adminUsersRequestBodyOrgs , config)\r\n            .then(response =>{\r\n                console.log(response)\r\n                this.setState({org: response.data.response})\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n    getSectors(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get(this.state.serverDomain + '/v1/organisation/get/sectors',  config)\r\n            .then(response =>{\r\n                this.setState({getSector: response.data.sectors})\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    submitSector = (e) =>{\r\n        e.preventDefault();\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const AddSector = {\r\n            \"sector\" : this.state.sector,\r\n            \"adminId\" : this.state.adminId\r\n        }\r\n        axios.post(this.state.serverDomain + '/v1/organisation/add/sector', AddSector ,config)\r\n            .then(response =>{\r\n                this.setState({ openSector: true });\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render () {\r\n        if(localStorage.getItem(\"id\") === null ||\r\n            localStorage.getItem(\"id\") === undefined ||\r\n            localStorage.getItem(\"id\") === 'default')\r\n        {\r\n            window.location.href = this.state.frontEndDomain + \"/login\";\r\n        }\r\n\r\n        const { org, getSector, sector } = this.state\r\n        return(\r\n            <div className=\"trythis\">\r\n\r\n                <div>\r\n                    <AdminSidebar />\r\n                </div>\r\n                <div className=\"OrganisationsDash\">\r\n                    <div className=\"userTitle\">\r\n                        All Organisations on Givealot\r\n                    </div>\r\n                    <div className=\"OrgAdd\">\r\n                        <div className=\"orgAddBtn\" style={{display: \"flex\", alignItems: \"center\", alignContent: \"space-between\"}}>\r\n                            <Button variant=\"contained\" className=\"buttonAdd\" onClick={this.openDialogAdd.bind(this)}>\r\n                                Add Organisation\r\n                                <AddCircleOutlinedIcon/>\r\n                            </Button>\r\n                            <Dialog onClose={this.handleCloseAdd.bind(this)} open={this.state.openAdd}>\r\n                                <DialogTitle>Add Organisation</DialogTitle>\r\n                                <DialogContent>\r\n                                    <AddOrg />\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <Button variant=\"contained\" className=\"buttonAddSector\" onClick={this.openDialog.bind(this)}>\r\n                                Create Sector\r\n                                <AddCircleOutlinedIcon/>\r\n                            </Button>\r\n                            <Dialog onClose={this.handleClose.bind(this)} open={this.state.open} style={{width: \"100%\"}}>\r\n                                <DialogTitle style={{color: \"#957b9e\"}}>Create a Sector</DialogTitle>\r\n                                <DialogContent style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n                                    <div>\r\n                                        <form onSubmit={this.submitSector}>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Sector\"\r\n                                                placeholder=\"Sector\"\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                                name=\"sector\"\r\n                                                onChange={this.changeHandler}\r\n                                                value={sector}\r\n                                            />\r\n                                            <Button variant=\"contained\" className=\"buttonAdd\" type=\"submit\"\r\n                                                    onSubmit={this.submitSector}\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                            <Dialog onClose={this.handleCloseSector.bind(this)} open={this.state.openSector}>\r\n                                                <DialogTitle>Sector Added</DialogTitle>\r\n                                                <DialogContent>\r\n                                                    <Button variant=\"contained\" color=\"primary\"\r\n                                                            onClick={this.handleCloseSector.bind(this)}\r\n                                                            style={{paddingTop: \"0.5em\", paddingBottom: \"0.5em\"}}\r\n                                                    >\r\n                                                        Close\r\n                                                    </Button>\r\n                                                </DialogContent>\r\n                                            </Dialog>\r\n                                        </form>\r\n                                        <Divider style={{marginTop: \"2em\"}}/>\r\n                                        <div>\r\n                                            <div style={{marginBottom: \"1em\",marginTop: \"1em\", color: \"#957b9e\",fontSize: \"x-large\"}}>View Available Sectors</div>\r\n                                            <div>\r\n                                                {getSector.map((sector) =>{\r\n                                                    return(\r\n                                                        <li key={sector} value={sector}>\r\n                                                            {sector}\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                        </div>\r\n                        {/*<div className=\"header__input\">*/}\r\n                        {/*    <input placeholder=\"search organisation\" type=\"text\" />*/}\r\n                        {/*    <SearchIcon/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n                    <div className=\"table\">\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table >\r\n                                        <TableHead style={{backgroundColor: \"#957b9e\"}}>\r\n                                            <TableRow>\r\n                                                <TableCell></TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Name</TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Email</TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Contact Person</TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Contact Number</TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Sector</TableCell>\r\n                                                <TableCell style={{color: \"white\", fontWeight: \"bold\"}}>Status</TableCell>\r\n                                                <TableCell></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {org.map((item) =>{\r\n                                                return(\r\n                                                    <TableRow key={item.orgId}>\r\n                                                        <TableCell><Avatar aria-label=\"recipe\" src={item.logo} /> </TableCell>\r\n                                                        <TableCell>{item.orgName}</TableCell>\r\n                                                        <TableCell>{item.orgEmail}</TableCell>\r\n                                                        <TableCell>{item.contactPerson}</TableCell>\r\n                                                        <TableCell>{item.contactNumber}</TableCell>\r\n                                                        <TableCell>{item.orgSector}</TableCell>\r\n                                                        <TableCell>{item.status}</TableCell>\r\n                                                        <TableCell>\r\n                                                            <Link to={\"/org/\" + item.orgId} className=\"link\">\r\n                                                                <EditIcon />\r\n                                                            </Link>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n\r\n    </div>\r\n\r\n            );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default OrganisationsDash\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\Org.js",["319","320"],"import React, { Component } from 'react'\r\nimport \"../../styles/Organisations.css\"\r\nimport axios from \"axios\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {CalendarToday, LocationSearching, MailOutline, PermIdentity, PhoneAndroid, DescriptionOutlined} from \"@material-ui/icons\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AdminSidebar from \"../DemoSidebar/AdminSidebar\";\r\n\r\nexport class Org extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            orgS:{},\r\n            orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1],\r\n            investigate: '',\r\n            open: false,\r\n            openInvestigate: false,\r\n            openSuspend: false,\r\n            serverDomain: 'https://givealotcharities.herokuapp.com'\r\n        }\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    handleCloseInvest = () => {\r\n        this.setState({ openInvestigate: false });\r\n    }\r\n    handleCloseSuspend = () => {\r\n        this.setState({ openSuspend: false });\r\n    }\r\n\r\n    componentDidMount(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get(this.state.serverDomain  + '/v1/organisation/admin/sel/organisation/'+this.state.orgId, config)\r\n            .then(response =>{\r\n                this.setState({orgS: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    handleActivate() {\r\n        this.setState({ open: true });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const activate = {\r\n            orgID : window.location.pathname.split('/')[window.location.pathname.split('/').length - 1]\r\n        }\r\n        axios.put(this.state.serverDomain  + '/v1/organisation/activate/orgId',activate ,config)\r\n            .then(response =>{\r\n                console.log(response)\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    handleInvestigate () {\r\n        console.log(this.state.openInvestigate)\r\n        this.setState({ openInvestigate: true });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const investigate = {\r\n            orgID : window.location.pathname.split('/')[window.location.pathname.split('/').length - 1]\r\n        }\r\n        axios.put(this.state.serverDomain  + '/v1/organisation/investigate/orgId',investigate ,config)\r\n            .then(response =>{\r\n                console.log(response)\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleSuspend() {\r\n        this.setState({ openSuspend: true });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const suspend = {\r\n            orgID : window.location.pathname.split('/')[window.location.pathname.split('/').length - 1]\r\n        }\r\n        axios.put(this.state.serverDomain  + '/v1/organisation/suspend/orgId',suspend ,config)\r\n            .then(response =>{\r\n                console.log(response)\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { orgS } = this.state\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <AdminSidebar />\r\n                </div>\r\n            <div className=\"org\">\r\n                <img src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\" style={{width: \"100%\", height: \"30%\"}}/>\r\n                <div className=\"orgCard\">\r\n                    <Card className=\"card1\">\r\n                        <CardContent>\r\n                            <Typography color=\"textPrimary\" gutterBottom>\r\n                                <div className=\"userTitleContainerOrg\">\r\n                                    <div className=\"userTitleOrg\">View Information</div>\r\n                                </div>\r\n                                <div >\r\n                                    <div className=\"userShowTop\">\r\n                                        <div className=\"userShowTopTitle\">\r\n                                            <span className=\"userShowUsername\">{orgS.orgName}</span>\r\n                                            <span className=\"userShowUserTitle\">{orgS.slogan}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"userShowBottom\">\r\n                                        <span className=\"userShowTitle\">Account Details</span>\r\n                                        <div className=\"userShowInfo\">\r\n                                            <PermIdentity className=\"userShowIcon\" />\r\n                                            <span className=\"userShowInfoTitle\">{orgS.orgName}</span>\r\n                                        </div>\r\n                                        <div className=\"userShowInfo\">\r\n                                            <CalendarToday className=\"userShowIcon\" />\r\n                                            <span className=\"userShowInfoTitle\">{orgS.dateAdded}</span>\r\n                                        </div>\r\n                                        <span className=\"userShowTitle\">Contact Details</span>\r\n\r\n                                        <div className=\"userShowInfo\">\r\n                                            <PhoneAndroid className=\"userShowIcon\" />\r\n                                            <span className=\"userShowInfoTitle\">{orgS.contactPerson}</span>\r\n                                        </div>\r\n                                        <div className=\"userShowInfo\">\r\n                                            <PhoneAndroid className=\"userShowIcon\" />\r\n                                            <span className=\"userShowInfoTitle\">{orgS.contactNumber}</span>\r\n                                        </div>\r\n                                        <div className=\"userShowInfo\">\r\n                                            <MailOutline className=\"userShowIcon\" />\r\n                                            <span className=\"userShowInfoTitle\">{orgS.orgEmail}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"card2\">\r\n                        <CardContent>\r\n                            <Typography color=\"textPrimary\" gutterBottom>\r\n                                <div className=\"userShowBottom\">\r\n                                    <span className=\"userShowTitle\">Status & Sector</span>\r\n                                    <div className=\"userShowInfo\">\r\n                                        <LocationSearching className=\"userShowIcon\" />\r\n                                        <span className=\"userShowInfoTitle\">{orgS.orgSector}</span>\r\n                                    </div>\r\n                                    <div className=\"userShowInfo\">\r\n                                        <LocationSearching className=\"userShowIcon\" />\r\n                                        <span className=\"userShowInfoTitle\">{orgS.status}</span>\r\n                                    </div>\r\n                                    <span className=\"userShowTitle\">Description</span>\r\n                                    <div className=\"userShowInfoO\">\r\n                                        <p className=\"userShowInfoTitle\">\r\n                                            {orgS.orgDescription}\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <Typography className=\"_orgButtons\">\r\n                            <div>\r\n                                <Button  type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                                         onClick={this.handleActivate.bind(this)}\r\n                                >\r\n                                    Activate\r\n                                </Button>\r\n                                <Dialog onClose={this.handleClose.bind(this)} open={this.state.open}>\r\n                                    <DialogTitle>Organisation Successfully Activated</DialogTitle>\r\n                                    <DialogContent>\r\n                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                onClick={this.handleClose.bind(this)}\r\n                                                style={{paddingTop: \"0.5em\", paddingBottom: \"0.5em\"}}\r\n                                        >\r\n                                            Close\r\n                                        </Button>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Button type=\"submit\" variant=\"contained\" style={{color: \"white\", backgroundColor: \"orange\"}}\r\n                                        onClick={this.handleInvestigate.bind(this)}\r\n                                >\r\n                                    Investigate\r\n                                </Button>\r\n                                <Dialog onClose={this.handleCloseInvest.bind(this)} open={this.state.openInvestigate}>\r\n                                    <DialogTitle>Organisation Investigate</DialogTitle>\r\n                                    <DialogContent>\r\n                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                onClick={this.handleCloseInvest.bind(this)}\r\n                                                style={{paddingTop: \"0.5em\", paddingBottom: \"0.5em\"}}\r\n                                        >\r\n                                            Close\r\n                                        </Button>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"\r\n                                        onClick={this.handleSuspend.bind(this)}\r\n                                >\r\n                                    Suspend\r\n                                </Button>\r\n                                <Dialog onClose={this.handleCloseSuspend.bind(this)} open={this.state.openSuspend}>\r\n                                    <DialogTitle>Organisation Suspended</DialogTitle>\r\n                                    <DialogContent>\r\n                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                onClick={this.handleCloseSuspend.bind(this)}\r\n                                                style={{paddingTop: \"0.5em\", paddingBottom: \"0.5em\"}}\r\n                                        >\r\n                                            Close\r\n                                        </Button>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                            </div>\r\n\r\n                        </Typography>\r\n\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Org\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrganisationsDash\\AddOrg.js",["321","322","323","324"],"import React, { Component } from 'react'\r\nimport \"../../styles/Organisations.css\"\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport axios from \"axios\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst initialState = {\r\n    orgName : \"\",\r\n    orgNameError: '',\r\n    slogan : \"\",\r\n    sloganError: '',\r\n    orgDescription : \"\",\r\n    orgDescriptionError: \"\",\r\n    orgSector : \"\",\r\n    orgSectorError: '',\r\n    orgEmail : \"\",\r\n    orgEmailError : \"\",\r\n    contactPerson : \"\",\r\n    contactPersonError : \"\",\r\n    contactNumber : \"\",\r\n    contactNumberError: '',\r\n    password : \"\",\r\n    passwordError: '',\r\n    image: '',\r\n    imageError: '',\r\n    sectorS: [],\r\n    openAdd: false,\r\n    serverDomain: \"https://givealotcharities.herokuapp.com\"\r\n};\r\n\r\nexport class AddOrg extends Component {\r\n    state = initialState;\r\n\r\n    validated = () => {\r\n        let isErrors = false;\r\n\r\n            let orgNameError = '';\r\n            let orgEmailError = \"\";\r\n            let passwordError = '';\r\n            let sloganError = '';\r\n            let orgSectorError = '';\r\n            let orgDescriptionError = '';\r\n            let contactPersonError = \"\";\r\n            let contactNumberError = '';\r\n            let imageError = '';\r\n\r\n        if(this.state.orgEmail.indexOf('@') === -1){\r\n            orgEmailError = 'Please enter a valid email address';\r\n        }\r\n        if(this.state.password.length < 4){\r\n            passwordError = 'Password must be at least 4 characters long';\r\n        }\r\n        if(this.state.orgName.length < 1){\r\n            orgNameError = 'orgName cannot be blank';\r\n        }\r\n        if(this.state.slogan.length < 1){\r\n            sloganError = 'slogan cannot be blank';\r\n        }\r\n\r\n        if(this.state.orgSector.length < 1){\r\n            orgSectorError = 'Sector cannot be blank';\r\n        }\r\n\r\n        if(this.state.orgDescription.length < 1){\r\n            orgDescriptionError = 'Description cannot be blank';\r\n        }\r\n        if (!this.state.contactNumber.match(/^[0-9]{10}$/)) {\r\n            contactNumberError = \"Please enter valid mobile number\";\r\n        }\r\n        if(this.state.contactPerson.length < 1){\r\n            contactPersonError = 'Contact person cannot be blank';\r\n        }\r\n        if (!this.state.orgEmail.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\r\n            orgEmailError = \"Please enter email address\";\r\n        }\r\n\r\n        if (orgEmailError || contactPersonError || contactNumberError || orgDescriptionError || orgSectorError || sloganError || orgNameError || passwordError) {\r\n            this.setState({ orgEmailError, contactPersonError,contactNumberError, orgDescriptionError, orgSectorError, sloganError, orgNameError, passwordError});\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n    handleCloseAdd = () => {\r\n        this.setState({ openAdd: false });\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSectorS();\r\n    }\r\n\r\n    getSectorS(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.get(this.state.serverDomain + '/v1/organisation/get/sectors',  config)\r\n            .then(response =>{\r\n                this.setState({sectorS: response.data.sectors})\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        const isValid = this.validated();\r\n        if (isValid) {\r\n            let config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'Access-Control-Allow-Origin': '*',\r\n                }\r\n            }\r\n            console.log(this.state)\r\n            axios.post(this.state.serverDomain + '/v1/organisation/add/org', this.state, config)\r\n                .then(response =>{\r\n                    console.log(response)\r\n                    this.setState({ openAdd: true });\r\n                })\r\n                .catch(error =>{\r\n                    console.log(error)\r\n                })\r\n            this.setState(initialState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {orgName, slogan, orgEmail, password, orgSector, contactPerson, contactNumber, orgDescription, sectorS} = this.state\r\n\r\n        return (\r\n            <div className=\"add\">\r\n                <div  style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"1em\", flexGrow: 2, width: \"50%\"}}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Organisation Name\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Organisation Name\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            minLength=\"8\"\r\n                                            maxLength=\"20\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"orgName\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={orgName}\r\n                                        />\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.orgNameError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Slogan\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Slogan\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            minLength=\"15\"\r\n                                            maxLength=\"50\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"slogan\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={slogan}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.sloganError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Email\"\r\n                                            type=\"email\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Email\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"orgEmail\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={orgEmail}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.orgEmailError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Password\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            minLength=\"8\"\r\n                                            maxLength=\"15\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"password\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={password}\r\n\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.passwordError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <Select\r\n                                            variant=\"outlined\"\r\n                                            native\r\n                                            style={{ margin: 8 }}\r\n                                            label=\"Sector\"\r\n                                            fullWidth\r\n                                            placeholder=\"Placeholder\"\r\n                                            name=\"orgSector\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={orgSector}\r\n                                        >\r\n                                            <option key=\"kidsNextDoors\">Enter Sector</option>\r\n                                            {sectorS.map((item) =>\r\n                                                <option key={item} value={item}>{item}</option>\r\n                                            )}\r\n                                        </Select>\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.orgSectorError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Contact Person\"\r\n                                            type=\"text\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Contact Person\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"contactPerson\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={contactPerson}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.contactPersonError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            label=\"Contact Number\"\r\n                                            type=\"text\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Contact Number\"\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"contactNumber\"\r\n                                            // minLength=\"8\"\r\n                                            maxLength=\"10\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={contactNumber}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.contactNumberError}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Description\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            margin=\"normal\"\r\n                                            minLength=\"50\"\r\n                                            maxLength=\"100\"\r\n                                            variant=\"outlined\"\r\n                                            id=\"outlined-textarea\"\r\n                                            label=\"Description\"\r\n                                            name=\"orgDescription\"\r\n                                            onChange={this.changeHandler}\r\n                                            value={orgDescription}\r\n                                        />\r\n                                    </Grid>\r\n                                    <span className=\"error\">{this.state.orgDescriptionError}</span>\r\n                                </div>\r\n\r\n                                <Grid>\r\n                                    <Button variant=\"contained\" type=\"submit\" className=\"addBtn\"\r\n                                            onClick={this.submitHandler.bind(this)}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <Dialog onClose={this.handleCloseAdd.bind(this)} open={this.state.openAdd}>\r\n                                        <DialogTitle>NGO Number Accepted</DialogTitle>\r\n                                        <DialogContent>\r\n                                            <Button variant=\"contained\" color=\"primary\"\r\n                                                    onClick={this.handleCloseAdd.bind(this)}\r\n                                                    style={{paddingTop: \"0.5em\", paddingBottom: \"0.5em\"}}\r\n                                            >\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogContent>\r\n                                    </Dialog>\r\n                                </Grid>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddOrg\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Calendar\\Calendar.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Validate\\Validate.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Timeline\\Timeline.js",["325","326","327","328","329","330","331"],"import {Box, TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport \"./Timeline.css\"\r\nimport \"../../styles/Dashboard.css\"\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport OrganisationTimeLineItem from \"../../../../browse/Components/OrganisationTimeLineItem/OrganisationTimeLineItem\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\nimport {FrontEndContext} from \"../../../../../apiContext/FrontEndContext\";\r\n\r\nfunction OrganisationTimeline()\r\n{\r\n    const [serverDomain, setServerDomain] = useState(\"https://givealotcharities.herokuapp.com\")\r\n    let [timelineEvents, setTimelineEvents] = useState([]);\r\n    let [curr_organisation_id, set_curr_organisation_id] = useState(localStorage.getItem('id'));\r\n    const [frontEndDomain, setFrontEndDomain] = useState(\"https://givealot.netlify.app\");\r\n\r\n    if(localStorage.getItem(\"id\") === null ||\r\n        localStorage.getItem(\"id\") === undefined ||\r\n        localStorage.getItem(\"id\") === 'default')\r\n    {\r\n\r\n        window.location.href = frontEndDomain + \"/login\";\r\n    }\r\n\r\n    const addTimelineEvent = event =>\r\n    {\r\n        event.preventDefault();\r\n        let timelineTitle = document.getElementById(\"timeline-event-title-input\").value;\r\n        let timelineDate = document.getElementById(\"timeline-event-date-input\").value;\r\n        let timelineDescription = document.getElementById(\"timeline-event-description-input\").value;\r\n\r\n        const addTimeLineEventRequest =\r\n        {\r\n            orgId : localStorage.getItem('id'),\r\n            eventDate: timelineDate,\r\n            eventTitle : timelineTitle,\r\n            eventShortDescription : timelineDescription\r\n        }\r\n\r\n        console.log(addTimeLineEventRequest)\r\n\r\n        axios.post(serverDomain + '/event/add/timeline/', addTimeLineEventRequest)\r\n        .then(response =>\r\n        {\r\n            console.log(response)\r\n            if(response)\r\n            {\r\n                if(response.data.message.includes(\"success\"))\r\n                {\r\n                    window.location.href = frontEndDomain + \"/timeline\";\r\n                }\r\n                else\r\n                {\r\n                    alert(response.data.message);\r\n                }\r\n            }\r\n        })\r\n        .catch(error =>\r\n        {\r\n            alert(\"error\")\r\n            if(error.response)\r\n            {\r\n                console.log(error.response)\r\n            }\r\n            else\r\n            {\r\n                console.error(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n            fetch( serverDomain + \"/event/get/timeline/\" + curr_organisation_id)\r\n                .then(async response =>{\r\n\r\n                    const data = await response.json();\r\n\r\n                    if(!response.ok) /* error handling here */\r\n                    {\r\n                        if(response.status === 500)\r\n                        {\r\n                            alert(\"bad parameters, fatal\");\r\n                        }\r\n                        else if(response.status === 401)\r\n                        {\r\n                            alert(\"this token is unauthorized\"); /* take them back to login */\r\n                        }\r\n\r\n                        if(typeof data !== 'undefined')\r\n                        {\r\n                            alert(data.message);\r\n                        }\r\n                    }\r\n\r\n                    if(data.message === \"success\") /*successfully fetched*/\r\n                    {\r\n                        console.log(data.object);\r\n                        setTimelineEvents(data.object)\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"error occured: \" + data.code);\r\n                    }\r\n                })\r\n\r\n                .catch(error => {\r\n                    alert(\"failed - organisations - sector\")\r\n                });\r\n        }\r\n        ,[])\r\n\r\n    let fetched_timeline_events = [];\r\n    if(timelineEvents !== undefined)\r\n    {\r\n        for (let i = 0; i < timelineEvents.length; i++)\r\n        {\r\n            let timeline_event_date = timelineEvents[i].eventDate;\r\n            let timeline_event_title = timelineEvents[i].eventTitle;\r\n            let timeline_event_id = timelineEvents[i].eventId;\r\n            let timeline_event_description = timelineEvents[i].eventShortDescription;\r\n\r\n            fetched_timeline_events.push(\r\n                <OrganisationTimeLineItem id={timeline_event_id}\r\n                                          date={timeline_event_date}\r\n                                          title={timeline_event_title}\r\n                                          description={timeline_event_description}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"trythis\">\r\n            <div>\r\n                <OrgSidebar />\r\n            </div>\r\n        <div>\r\n            <Box id={\"timeline_container\"}>\r\n                <Box id={\"timeline_add_event_container\"}>\r\n                    <p id={\"timeline_title\"}>TIMELINE - REMEMBER WHAT'S IMPORTANT</p>\r\n                    <p id={\"timeline_slogan\"}>\r\n                        Keep everyone updated, add a timeline event\r\n                        for your organisation.\r\n                    </p>\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        id={\"timeline-event-title-input\"}\r\n                        variant={\"outlined\"}\r\n                        label=\"event title\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        id={\"timeline-event-date-input\"}\r\n                        variant={\"outlined\"}\r\n                        type=\"date\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={\"timeline-text-field\"}\r\n                        variant={\"outlined\"}\r\n                        id={\"timeline-event-description-input\"}\r\n                        label=\"describe the event\"\r\n                        placeholder=\"describe the event in 50 characters\"\r\n                        maxRows={2}\r\n                        multiline\r\n                    />\r\n\r\n                    <Button\r\n                        variant={\"contained\"}\r\n                        color={\"secondary\"}\r\n                        onClick={addTimelineEvent}\r\n                    >\r\n                        add event\r\n                    </Button>\r\n                </Box>\r\n\r\n                <Box id={\"timeline-event-dashboard-container\"}>\r\n                    <Timeline align=\"alternate\">\r\n                        {fetched_timeline_events}\r\n                    </Timeline>\r\n                </Box>\r\n\r\n            </Box>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganisationTimeline;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\Reports.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Validate\\OrgValidate.js",["332","333","334"],"import React, { Component } from 'react'\r\nimport \"./Validate.css\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AdminSidebar from \"../DemoSidebar/AdminSidebar\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\n\r\nexport class OrgValidate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            validation:{},\r\n            error: \"\",\r\n            openValid: false,\r\n            openValidDate: false,\r\n            openNgoNumber: false,\r\n            openNgoNumberDeny: false,\r\n            orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1],\r\n            adminId: localStorage.getItem(\"id\"),\r\n            isConfirmed: false,\r\n            isConfirmedNumber: false,\r\n            isConfirmedWebsite: false,\r\n            isConfirmedStreet: false,\r\n            isConfirmedEd: false,\r\n            isConfirmedDonate: false,\r\n            isConfirmedQr: false,\r\n            isConfirmedCommittee: false,\r\n            isConfirmedTwitter: false,\r\n            isConfirmedFacebook: false,\r\n            isConfirmedInstagram: false,\r\n            serverDomain: \"https://givealotcharities.herokuapp.com\",\r\n            popUp1:false,\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ openValid: false });\r\n\r\n    }\r\n    handleCloseDate = () => {\r\n        this.setState({ openValidDate: false });\r\n    }\r\n\r\n    handleCloseNgoNumber = () => {\r\n        this.setState({ openNgoNumber: false });\r\n    }\r\n    handleCloseNgoNumberDeny = () => {\r\n        this.setState({ openNgoNumberDeny: false });\r\n    }\r\n\r\n    acceptNgoDate() {\r\n        this.setState({ openValid: true });\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+this.state.adminId+ '/ngo_date/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmed: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n    denyNgoDate(){\r\n        this.setState({ openValidDate: true });\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/ngo_date/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmed: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptNgoNumber(){\r\n        this.setState({ openNgoNumber: true });\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/ngo_number/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedNumber: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    denyNgoNumber(){\r\n        this.setState({ openNgoNumberDeny: true });\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/ngo_number/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedNumber: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    acceptNgoWebsite(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/website/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedWebsite: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyNgoWebsite(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/website/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedWebsite: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptNgoAddress(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/address/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedStreet: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyNgoAddress(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/address/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedStreet: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptNgoEstablish(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/establishment_date/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedEd: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyNgoEstablish(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/establishment_date/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedEd: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptNgoDonateUrl(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/donation_link/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedDonate: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyNgoDonateUrl(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/donation_link/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedDonate: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptNgoQrUrl(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/qr_code/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedQr: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyNgoQrUrl(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/qr_code/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedQr: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    acceptCommitteeDetails(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/committee/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedCommittee: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyCommitteeDetails(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/committee/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedCommittee: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptSocialMedia1(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/facebook/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedFacebook: true})\r\n                this.onToastSubmit();\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denySocialMedia1(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/facebook/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedFacebook: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptSocialMedia2(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/instagram/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedInstagram: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denySocialMedia2(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/instagram/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedInstagram: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptSocialMedia3(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/twitter/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedTwitter: true})\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denySocialMedia3(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/twitter/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.setState({isConfirmedTwitter: true})\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    acceptAuditDocument(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/audit/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyAuditDocument(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/audit/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    acceptImages(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/images/true', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.onToastSubmit()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    denyImages(){\r\n        this.setState({ orgId: window.location.pathname.split('/')[window.location.pathname.split('/').length - 1] });\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"loaderValidateContainer\").style.display=\"block\";\r\n        axios.put(this.state.serverDomain + '/v1/organisation/delete/validity/confirm/'+this.state.orgId+ '/'+ this.state.adminId+ '/images/false', config)\r\n            .then(response =>{\r\n                document.getElementById(\"loaderValidateContainer\").style.display=\"none\";\r\n                this.onToastSubmitFail()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    onToastSubmit = () => {\r\n        // if(this.state.isConfirmedInstagram){\r\n\r\n            toast.success('Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        // }else{\r\n        //\r\n        //     toast.error('failed to submit', {\r\n        //         position: toast.POSITION.TOP_RIGHT\r\n        //\r\n        //     });\r\n        //\r\n        // }\r\n    }\r\n\r\n    onToastSubmitFail = () => {\r\n        // if(this.state.isConfirmedInstagram){\r\n        //\r\n        //     toast.success('Submitted ', {\r\n        //         position: toast.POSITION.TOP_RIGHT\r\n        //\r\n        //     });\r\n        //     // }else{\r\n\r\n                toast.error('failed to submit', {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n\r\n                });\r\n    }\r\n\r\n    componentDidMount(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        const adminUsersRequestBody = {\r\n            \"orgId\":this.state.orgId\r\n        }\r\n\r\n        axios.post(this.state.serverDomain + '/v1/notifications/get/level_information', adminUsersRequestBody ,config)\r\n            .then(response =>{\r\n                console.log(response)\r\n                this.setState({validation: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { validation } = this.state\r\n\r\n        const orgValidating = () => {\r\n            if (validation.level === 1) {\r\n                return (\r\n                    <div className=\"table\">\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography style={{display: \"flex\"}}>\r\n                                        <div>\r\n                                            Ngo Date:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.ngoDate}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoDate.bind(this)} disabled={this.state.isConfirmed}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyNgoDate.bind(this)} disabled={this.state.isConfirmed}\r\n                                                >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography style={{display: \"flex\"}}>\r\n                                        <div>\r\n                                            Ngo Number:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.ngoNumber}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoNumber.bind(this)} disabled={this.state.isConfirmedNumber}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyNgoNumber.bind(this)} disabled={this.state.isConfirmedNumber}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            } else if(validation.level === 2){\r\n                return (\r\n                    <div className=\"table\">\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Website:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.website}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoWebsite.bind(this)} disabled={this.state.isConfirmedWebsite}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyNgoWebsite.bind(this)} disabled={this.state.isConfirmedWebsite}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Address:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.address}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoAddress.bind(this)} disabled={this.state.isConfirmedStreet}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                onClick={this.denyNgoAddress.bind(this)} disabled={this.state.isConfirmedStreet}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            }else if(validation.level === 3){\r\n                return (\r\n                    <div className=\"table\">\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Establishment Date:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.establishmentDate}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoEstablish.bind(this)} disabled={this.state.isConfirmedEd}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyNgoEstablish.bind(this)} disabled={this.state.isConfirmedEd}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Donation Url:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.donation_url}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoDonateUrl.bind(this)} disabled={this.state.isConfirmedDonate}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                onClick={this.denyNgoDonateUrl.bind(this)} disabled={this.state.isConfirmedDonate}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            QR code Url:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {/*<img src={validation.qrCode_url}/>*/}\r\n                                            <img src={this.state.serverDomain + \"/media/version/qr_code/admin/\" + this.state.orgId}  height={120} width={120} />\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptNgoQrUrl.bind(this)} disabled={this.state.isConfirmedQr}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                onClick={this.denyNgoQrUrl.bind(this)} disabled={this.state.isConfirmedQr}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            }else if(validation.level === 4){\r\n                return (\r\n                    <div className=\"table\">\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Commitee Details:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.commiteeMembers}\r\n                                        </div>\r\n\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptCommitteeDetails.bind(this)}\r\n                                                    disabled={this.state.isConfirmedCommittee}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyCommitteeDetails.bind(this)}\r\n                                                    disabled={this.state.isConfirmedCommittee}\r\n                                                >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Twitter:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.socialMedia3}\r\n                                        </div>\r\n\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptSocialMedia3.bind(this)}\r\n                                                    disabled={this.state.isConfirmedTwitter}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denySocialMedia3.bind(this)}\r\n                                                    disabled={this.state.isConfirmedTwitter}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Facebook:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.socialMedia1}\r\n                                        </div>\r\n\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptSocialMedia1.bind(this)}\r\n                                                    disabled={this.state.isConfirmedFacebook}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denySocialMedia1.bind(this)}\r\n                                                    disabled={this.state.isConfirmedFacebook}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Instagram:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.socialMedia2}\r\n                                        </div>\r\n\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptSocialMedia2.bind(this)}\r\n                                                    disabled={this.state.isConfirmedInstagram}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denySocialMedia2.bind(this)}\r\n                                                    disabled={this.state.isConfirmedInstagram}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            }\r\n            else if(validation.level === 5){\r\n                return (\r\n                    <div className=\"table\">\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Audit Document:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            {validation.audit_document}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptAuditDocument.bind(this)}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyAuditDocument.bind(this)}\r\n                                                >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                            <CardContent>\r\n                                <Typography className=\"valid\">\r\n                                    <Typography>\r\n                                        <div>\r\n                                            Images:\r\n                                        </div>\r\n                                        <div style={{marginLeft: \"1em\"}}>\r\n                                            <img src={validation.images}/>\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"space-between\"\r\n                                    }}>\r\n                                        <Grid>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewAccept\"\r\n                                                    onClick={this.acceptImages.bind(this)}\r\n                                            >\r\n                                                Accept\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid style={{marginLeft: \"1em\"}}>\r\n                                            <Button variant=\"contained\" className=\"buttonValidViewDeny\"\r\n                                                    onClick={this.denyImages.bind(this)}\r\n                                            >\r\n                                                Deny\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Typography>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return (<div className=\"table\">\r\n                    <Card style={{margin: \"1em\", width: \"100%\"}}>\r\n                        <CardContent>\r\n                            <Typography className=\"valid\">\r\n                                <Typography>\r\n                                   No Information to update\r\n                                </Typography>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>);\r\n            }\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <AdminSidebar />\r\n                </div>\r\n\r\n                <div id='loaderValidateContainer'>\r\n                    {/*<CircularProgress id='loaderValidate'/>*/}\r\n                    <Alert\r\n                    severity={\"info\"}\r\n                    id='loaderValidate'\r\n                    >\r\n                        please wait...\r\n                    </Alert>\r\n                </div>\r\n\r\n            <div className=\"validate\">\r\n                <div className=\"validBody\">\r\n                    <div  className=\"name\">\r\n                        {validation.orgName}\r\n                    </div>\r\n                    {orgValidating()}\r\n                </div>\r\n            </div>\r\n                <div className=\"form-group\">\r\n                    <ToastContainer/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default OrgValidate\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Certificate.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade1.js",["335"],"import React, {Component} from 'react';\r\nimport \"./Style/Certificate.css\";\r\nimport 'date-fns';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Axios from \"axios\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\n\r\nconst styles = theme => ({\r\n\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#957b9e',\r\n                borderWidth: 2\r\n            },\r\n        },\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"30ch\",\r\n\r\n\r\n    },\r\n\r\n});\r\n\r\nconst initialState = {\r\n    orgId:localStorage.getItem(\"id\"),\r\n    website: \"\",\r\n    websiteError: \"\",\r\n    address:\"\",\r\n    addressError:\"\",\r\n    popUp1:false,\r\n    popUp2:false,\r\n    serverDomain: 'https://givealotcharities.herokuapp.com',\r\n    frontEndDomain: 'https://givealot.netlify.app/'\r\n};\r\nexport class Upgrade1 extends Component {\r\n\r\n    state = initialState;\r\n    static contextType = ApiContext;\r\n    constructor (props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    validate = () => {\r\n        let  websiteError = \"\";\r\n        let  addressError = \"\";\r\n\r\n\r\n        if (!this.state.website) {\r\n            websiteError = \"Website is require\";\r\n        }\r\n\r\n\r\n\r\n        if(!this.state.address) {\r\n            addressError=\"address is required\";\r\n        }\r\n\r\n        if ( websiteError || addressError) {\r\n            this.setState({ websiteError, addressError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            const web = {\r\n                orgId: this.state.orgId,\r\n                website: this.state.website,\r\n\r\n            };\r\n            const add = {\r\n                orgId: this.state.orgId,\r\n                address: this.state.address,\r\n\r\n            };\r\n            Axios\r\n                .post( this.state.serverDomain + \"/v1/organisation/add/website\", web)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp1: res.data.message});\r\n                    this.onToastOneWebsite();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp1: false});\r\n                    this.onToastOneWebsite();\r\n                });\r\n\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/address\", add)\r\n                .then(res =>{\r\n                    console.log(res)\r\n                    this.setState({popUp2: res.data.message});\r\n                    this.onToastOneAddress ();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp1: false});\r\n                    this.onToastOneAddress ();\r\n                });\r\n\r\n            const notification_update_body = {\r\n                org_id: this.state.orgId,\r\n            };\r\n\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/notifications/update/notifications\", notification_update_body)\r\n                .then(res => console.log(res))\r\n                .catch(err => console.log(err))\r\n            // clear form\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n\r\n    onToastOneWebsite = () => {\r\n        if(this.state.popUp1){\r\n\r\n            toast.success('Website Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Website', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onToastOneAddress = () => {\r\n        if(this.state.popUp2){\r\n\r\n            toast.success('Address Submitted', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Address', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        if(localStorage.getItem(\"id\") === null ||\r\n            localStorage.getItem(\"id\") === undefined ||\r\n            localStorage.getItem(\"id\") === 'default')\r\n        {\r\n\r\n            window.location.href = this.state.frontEndDomain + \"/login\";\r\n        }\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <OrgSidebar />\r\n                </div>\r\n            <div className=\"upgrade\">\r\n                <div className=\"wrap_upgrade\">\r\n                    <div>\r\n                <div className=\"upgradeTitle\">\r\n                    <p className=\"upgradeTitle1\">Current level:</p>\r\n                    <p className=\"upgradeTitle2\">One</p>\r\n                </div>\r\n\r\n                <div className=\"progress\">\r\n                    <div className=\"progress_complete\"/>\r\n                    <div className=\"progress_empty\"/>\r\n                    <div className=\"progress_empty\"/>\r\n                    <div className=\"progress_empty\"/>\r\n                    <div className=\"progress_empty\"/>\r\n                    <div className=\"progress6\"> <StarOutlineIcon fontSize=\"large\"/></div>\r\n                </div>\r\n\r\n                <Card className=\"upgrade_card\" variant=\"outlined\">\r\n                    <CardContent>\r\n                        <div className={classes.root}>\r\n                            <form onSubmit={this.handleFormSubmit}>\r\n                                <span className=\"upgrade_header\">\r\n                                    Additional credentials needed to Upgrade to level 2\r\n                                 </span>\r\n                            <div>\r\n\r\n                                <TextField\r\n                                    id=\"outlined-full-width\"\r\n                                    label=\"Website\"\r\n                                    name=\"website\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Enter your website url..\"\r\n\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <span className=\"loginError_certificate\">{this.state.websiteError}</span>\r\n                                <TextField\r\n                                    id=\"outlined-full-width\"\r\n                                    label=\"Address\"\r\n                                    name=\"address\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Enter your address..\"\r\n\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <span className=\"loginError_certificate\">{this.state.addressError}</span>\r\n                            </div>\r\n                                <div className=\"empty_space\">\r\n                                    empty space\r\n                                </div>\r\n                                <div className=\"upgrade_Button\">\r\n                                    <button className=\"upgrade-btn\" type=\"submit\" >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <ToastContainer/>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Upgrade1);\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade2.js",["336","337","338","339","340","341"],"import React, {Component} from 'react';\r\nimport \"./Style/Certificate.css\";\r\nimport 'date-fns';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { withStyles} from '@material-ui/core/styles'\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\n\r\nconst styles = theme => ({\r\n\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#957b9e',\r\n                borderWidth: 2\r\n            },\r\n        },\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"30ch\"\r\n    },\r\n\r\n});\r\n\r\nconst initialState = {\r\n    orgId:localStorage.getItem(\"id\"),\r\n    date:\"\",\r\n    startDate: new Date(),\r\n    orgInfo:\"\",\r\n    Qrcode:\"\",\r\n    QrcodeFile:null,\r\n    dateError:\"\",\r\n    paypalError:\"\",\r\n    qrError:\"\",\r\n    popUp1:false,\r\n    popUp2:false,\r\n    popUp3:false,\r\n    serverDomain: 'https://givealotcharities.herokuapp.com',\r\n};\r\n\r\n\r\nexport class Upgrade2 extends Component {\r\n\r\n    state = initialState;\r\n    static contextType = ApiContext;\r\n    constructor (props) {\r\n        super(props)\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n    }\r\n\r\n    handleDateChange(date) {\r\n        this.setState({startDate: date, date:document.getElementsByClassName(\"input3\")[0].value} )\r\n\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ QrcodeFile: event.target.files[0]})\r\n\r\n    };\r\n\r\n\r\n    validate = () => {\r\n        let dateError = \"\";\r\n        let paypalError = \"\";\r\n        let qrError=\"\";\r\n\r\n\r\n        if (!this.state.date) {\r\n            dateError = \"required\";\r\n        }\r\n\r\n\r\n        if(!this.state.orgInfo) {\r\n            paypalError=\"required\";\r\n        }\r\n\r\n        if (!this.state.QrcodeFile) {\r\n            qrError = \"required\";\r\n        }\r\n\r\n        if ( dateError || paypalError || qrError) {\r\n            this.setState({ dateError, paypalError,qrError });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            const data = {\r\n                orgId: this.state.orgId,\r\n                date: this.state.date,\r\n            };\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/estdate\", data)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp1: res.data.message});\r\n                    this. onToastDate ();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp1: false});\r\n                    this. onToastDate ();\r\n                });\r\n\r\n            const paypal = {\r\n                orgId: this.state.orgId,\r\n                orgInfo: this.state.orgInfo,\r\n            };\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/donation/info\", paypal)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp2: res.data.message});\r\n                    this. onToastPaypal ();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp2: false});\r\n                    this. onToastPaypal ();\r\n                });\r\n\r\n            console.log(this.state.QrcodeFile)\r\n            const formData = new FormData();\r\n            formData.append('image', this.state.QrcodeFile);\r\n            formData.append('orgId', this.state.orgId);\r\n            fetch(\r\n                this.state.serverDomain + '/v1/organisation/add/qrcode',\r\n                {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                    console.log('Success:', result);\r\n                    this.setState({popUp3: true});\r\n                    this. onToastCode ();\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error.response);\r\n                    this.setState({popUp3: false});\r\n                    this. onToastCode ();\r\n\r\n                });\r\n\r\n\r\n\r\n            const notification_update_body = {\r\n                org_id: this.state.orgId,\r\n            };\r\n\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/notifications/update/notifications\", notification_update_body)\r\n                .then(res => console.log(res))\r\n                .catch(err => console.log(err))\r\n        }\r\n    };\r\n\r\n    onToastDate = () => {\r\n        if(this.state.popUp1){\r\n\r\n            toast.success('Date Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Date', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onToastCode = () => {\r\n\r\n        if(this.state.popUp3){\r\n\r\n            toast.success('QrCode Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send QrCode', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onToastPaypal = () => {\r\n        if(this.state.popUp2){\r\n\r\n            toast.success('paypal Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send paypal', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <OrgSidebar />\r\n                </div>\r\n            <div className=\"upgrade\">\r\n                <div className=\"wrap_upgrade\">\r\n                    <div>\r\n                        <div className=\"upgradeTitle\">\r\n                            <p className=\"upgradeTitle1\">Current level:</p>\r\n                            <p className=\"upgradeTitle2\">Two</p>\r\n                        </div>\r\n\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress_complete\"/>\r\n                            <div className=\"progress_complete\"/>\r\n                            <div className=\"progress_empty\"/>\r\n                            <div className=\"progress_empty\"/>\r\n                            <div className=\"progress_empty\"/>\r\n                            <div className=\"progress6\"> <StarOutlineIcon fontSize=\"large\"/></div>\r\n                        </div>\r\n\r\n                        <Card className=\"upgrade_card1\" variant=\"outlined\">\r\n                            <CardContent>\r\n                                <div className={classes.root}>\r\n                                    <form onSubmit={this.handleFormSubmit}>\r\n                                        <span className=\"upgrade_header1\">\r\n                                            Additional credentials needed to Upgrade to level 3\r\n                                         </span>\r\n                                        <div>\r\n\r\n                                            <div >\r\n                                                <span className=\"upgrade_label\">\r\n                                                    NGO Establishment date\r\n                                                 </span>\r\n                                                <DatePicker\r\n\r\n                                                    className=\"upgrade_date input3\"\r\n                                                    selected={ this.state.startDate }\r\n                                                    onChange={ this.handleDateChange }\r\n                                                    name=\"startDate\"\r\n                                                    dateFormat=\"yyyy/MM/dd\"\r\n                                                    fullWidth\r\n\r\n\r\n                                                />\r\n\r\n                                            </div>\r\n                                            <span className=\"loginError_certificate\">{this.state.dateError}</span>\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Paypal link\"\r\n                                                name=\"orgInfo\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter  paypal link...\"\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                                </div>\r\n                                            <span className=\"loginError_certificate\">{this.state.paypalError}</span>\r\n                                            <div>\r\n\r\n                                                <TextField\r\n                                                    id=\"outlined-full-width\"\r\n                                                    style={{ margin: 8 }}\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    variant=\"outlined\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    label=\"QR code\"\r\n                                                    type=\"file\"\r\n                                                    name=\"Qrcode\"\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n\r\n                                            </div>\r\n                                            <span className=\"loginError_certificate\">{this.state.qrError}</span>\r\n\r\n                                        </div>\r\n                                        <div className=\"empty_space\">\r\n                                            empty space\r\n                                        </div>\r\n                                        <div className=\"upgrade_Button\">\r\n                                            <button className=\"upgrade-btn\" type=\"submit\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <ToastContainer/>\r\n                                        </div>\r\n\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Upgrade2);\r\n\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade4.js",["342"],"import React, {Component} from 'react';\r\nimport \"./Style/Certificate.css\";\r\nimport 'date-fns';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { withStyles ,makeStyles } from '@material-ui/core/styles'\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\n\r\nconst styles =theme => ({\r\n\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#957b9e',\r\n                borderWidth: 2\r\n            },\r\n        },\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"30ch\",\r\n\r\n\r\n    },\r\n\r\n});\r\n\r\n\r\nexport class Upgrade4 extends Component {\r\n    static contextType = ApiContext;\r\n    constructor (props) {\r\n        super(props)\r\n        this.state={\r\n            orgId:localStorage.getItem(\"id\"),\r\n            file: \"\",\r\n            fileError: \"\",\r\n            images:\"\",\r\n            imagesError:\"\",\r\n            popUp1:false,\r\n            popUp2:false,\r\n            serverDomain: 'https://givealotcharities.herokuapp.com',\r\n            frontEndDomain: 'https://givealot.netlify.app/',\r\n\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    handleFileChange = event => {\r\n        const formData = new FormData();\r\n\r\n        formData.append('file', event.target.files[0]);\r\n        formData.append('orgId', this.state.orgId);\r\n        let imageStates = 0;\r\n\r\n        fetch(\r\n            this.state.serverDomain + '/v1/organisation/add/audit',\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n                imageStates = 1;\r\n                if(result.message==='success'){\r\n                    this.setState({popUp1: true})\r\n                    this.onToastFile();\r\n\r\n                }\r\n\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                imageStates = 2;\r\n                this.setState({popUp1: false});\r\n                this.onToastFile();\r\n            });\r\n\r\n        if(imageStates===1)\r\n            alert(\"bring back button functionality\");\r\n        else if(imageStates === 2)\r\n            alert(\"bring back button functionality also tell the user that the image didnt submit\");\r\n\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    handleImageChange = event => {\r\n\r\n        if( event.target.files.length < 5)\r\n        {\r\n            alert(\"minimum photos not met\");\r\n            return;\r\n        }\r\n\r\n        for(let idx = 0; idx <  event.target.files.length; idx++)\r\n        {\r\n            const formData_gallery_images = new FormData();\r\n            formData_gallery_images.append('orgId', this.state.orgId);\r\n            formData_gallery_images.append('image', event.target.files[idx]);\r\n\r\n            console.log(event.target.files[idx])\r\n            fetch(\r\n                this.state.serverDomain +'/v1/organisation/add/image',\r\n                {\r\n                    method: 'POST',\r\n                    body: formData_gallery_images,\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                    console.log('Success-----:', result);\r\n                    if(result.message==='success'){\r\n                        this.setState({popUp2: true})\r\n                        this.onToastImage();\r\n                    }else {\r\n                        this.setState({popUp2: false})\r\n                        this.onToastFile();\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error-----:', error);\r\n                    this.setState({popUp2: false});\r\n                    this.onToastImage();\r\n\r\n                });\r\n\r\n            const isCheckbox = event.target.type === \"checkbox\";\r\n            this.setState({\r\n                [event.target.name]: isCheckbox\r\n                    ? event.target.checked\r\n                    : event.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    validate = () => {\r\n        let fileError = \"\";\r\n        let imagesError = \"\";\r\n\r\n        if (!this.state.file) {\r\n            fileError = \"required\";\r\n        }\r\n\r\n        if(!this.state.images) {\r\n            imagesError=\"required\";\r\n        }\r\n\r\n        if( fileError || imagesError) {\r\n            this.setState({ fileError,imagesError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n\r\n            const notification_update_body = {\r\n                org_id: this.state.orgId,\r\n            };\r\n\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/notifications/update/notifications\", notification_update_body)\r\n                .then(res => console.log(res))\r\n                .catch(err => console.log(err))\r\n\r\n        }\r\n    };\r\n\r\n\r\n    onToastFile = () => {\r\n        if(this.state.popUp1){\r\n\r\n            toast.success('File Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send File', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onToastImage= () => {\r\n        if(this.state.popUp2){\r\n\r\n            toast.success('Images Submitted', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Images', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        if(localStorage.getItem(\"id\") === null ||\r\n            localStorage.getItem(\"id\") === undefined ||\r\n            localStorage.getItem(\"id\") === 'default')\r\n        {\r\n\r\n            window.location.href = this.state.frontEndDomain + \"/login\";\r\n        }\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <OrgSidebar />\r\n                </div>\r\n            <div className=\"upgrade\">\r\n                <div className=\"wrap_upgrade\">\r\n                    <div>\r\n                <div className=\"upgradeTitle\">\r\n                    <p className=\"upgradeTitle1\">Current level:</p>\r\n                    <p className=\"upgradeTitle2\">Four</p>\r\n                </div>\r\n\r\n                <div className=\"progress\">\r\n                    <div className=\"progress_complete\"/>\r\n                    <div className=\"progress_complete\"/>\r\n                    <div className=\"progress_complete\"/>\r\n                    <div className=\"progress_complete\"/>\r\n                    <div className=\"progress_empty\"/>\r\n                    <div className=\"progress6\"> <StarOutlineIcon fontSize=\"large\"/></div>\r\n                </div>\r\n\r\n                <Card className=\"upgrade_card\" variant=\"outlined\">\r\n                    <CardContent>\r\n                        <div className={classes.root}>\r\n                            <form onSubmit={this.handleFormSubmit}>\r\n                                <span className=\"upgrade_header\">\r\n                                   Additional credentials needed to Upgrade to level 5\r\n                                 </span>\r\n                                <span className=\"images_header\">\r\n                                   Please upload Atleast 5 pictures\r\n                                 </span>\r\n                                <div>\r\n                                    <div>\r\n\r\n                                       <span className=\"upgrade_label\">\r\n                                            Upload images\r\n                                         </span>\r\n                                        <input\r\n                                            className=\"upgrade_images\"\r\n                                            accept=\"image/*\"\r\n                                            name=\"images\"\r\n                                            id=\"contained-button-file\"\r\n                                            multiple\r\n                                            type=\"file\"\r\n                                            onChange={this.handleImageChange}\r\n\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <span className=\"loginError_certificate\">{this.state.imagesError}</span>\r\n                                    <div className=\"empty_space\">\r\n                                        empty space\r\n                                    </div>\r\n                                    <div>\r\n\r\n                                        <TextField\r\n                                            id=\"outlined-full-width\"\r\n                                            style={{ margin: 8 }}\r\n                                            fullWidth\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            type=\"file\"\r\n                                            name=\"file\"\r\n                                            label=\"Audit financial document\"\r\n                                            onChange={this.handleFileChange}\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <span className=\"loginError_certificate\">{this.state.fileError}</span>\r\n                                </div>\r\n                                    <div className=\"empty_space\">\r\n                                        empty space\r\n                                    </div>\r\n                                <div className=\"upgrade_Button\">\r\n                                    <button className=\"upgrade-btn\" type=\"submit\" >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <ToastContainer/>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Upgrade4);\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade3.js",["343","344","345","346","347","348","349","350","351"],"import React, {Component} from 'react';\r\nimport \"./Style/Certificate.css\";\r\nimport 'date-fns';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { withStyles  } from '@material-ui/core/styles'\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Axios from \"axios\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#957b9e',\r\n                borderWidth: 2\r\n            },\r\n        },\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"25ch\"\r\n    },formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 198,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n});\r\n\r\nconst initialState = {\r\n    orgId:localStorage.getItem(\"id\"),\r\n    url:\"\",\r\n    urlError:\"\",\r\n    type:\"\",\r\n    typeError:\"\",\r\n    url1:\"\",\r\n    url2: \"\",\r\n    type2:\"\",\r\n    url2Error: \"\",\r\n    type2Error:\"\",\r\n    url1Error:\"\",\r\n    type1:\"\",\r\n    type1Error:\"\",\r\n    ChairpersonName:\"\",\r\n    ChairpersonNameError:\"\",\r\n    ChairpersonContacts:\"\",\r\n    ChairpersonContactsError:\"\",\r\n    managerName:\"\",\r\n    managerNameError:\"\",\r\n    managerContacts:\"\",\r\n    managerContactsError:\"\",\r\n    treasurerName:\"\",\r\n    treasurerNameError:\"\",\r\n    treasurerContacts:\"\",\r\n    treasurerContactsError:\"\",\r\n    secretaryName:\"\",\r\n    secretaryNameError:\"\",\r\n    secretaryContacts:\"\",\r\n    secretaryContactsError:\"\",\r\n    committee:\"\",\r\n    popUp1:false,\r\n    popUp2:false,\r\n    popUp3:false,\r\n    popUp4:false,\r\n    serverDomain: 'https://givealotcharities.herokuapp.com'\r\n\r\n};\r\n\r\nexport class Upgrade3 extends Component {\r\n\r\n    state = initialState;\r\n    static contextType = ApiContext;\r\n    constructor (props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    handleSocialChange = e => {\r\n        this.setState({type: e.target.value});\r\n\r\n    };\r\n\r\n    handleSocial1Change = e => {\r\n        this.setState({type1: e.target.value});\r\n\r\n    };\r\n\r\n    handleSocial2Change = e => {\r\n        this.setState({type2: e.target.value});\r\n\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    handleCommitteeChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    validate = () => {\r\n\r\n        let ChairpersonNameError = \"\";\r\n        let managerNameError = \"\";\r\n        let treasurerNameError = \"\";\r\n        let secretaryNameError = \"\";\r\n        let ChairpersonContactsError = \"\";\r\n        let managerContactsError = \"\";\r\n        let treasurerContactsError = \"\";\r\n        let secretaryContactsError = \"\";\r\n        let urlError = \"\";\r\n        let url1Error = \"\";\r\n        let typeError = \"\";\r\n        let type1Error = \"\";\r\n        let url2Error = \"\";\r\n        let type2Error = \"\";\r\n\r\n\r\n\r\n        if (!this.state.ChairpersonName) {\r\n            ChairpersonNameError = \"required\";\r\n        }\r\n\r\n        if (!this.state.managerName) {\r\n            managerNameError = \"required\";\r\n        }\r\n        if (!this.state.treasurerName) {\r\n            treasurerNameError = \"required\";\r\n        }\r\n        if (!this.state.secretaryName) {\r\n            secretaryNameError = \"required\";\r\n        }\r\n        if (!this.state.ChairpersonContacts) {\r\n            ChairpersonContactsError = \"required\";\r\n        }\r\n        if (!this.state.managerContacts) {\r\n            managerContactsError = \"required\";\r\n        }\r\n        if (!this.state.treasurerContacts) {\r\n            treasurerContactsError = \"required\";\r\n        }\r\n        if (!this.state.secretaryContacts) {\r\n            secretaryContactsError = \"required\";\r\n        }\r\n        if (!this.state.url) {\r\n            urlError = \"required\";\r\n        }\r\n\r\n        if (!this.state.url1) {\r\n            url1Error = \"required\";\r\n        }\r\n        if (!this.state.url2) {\r\n            url2Error = \"required\";\r\n        }\r\n\r\n        if (!this.state.type) {\r\n            typeError = \"required\";\r\n        }\r\n        if (!this.state.type1) {\r\n            type1Error = \"required\";\r\n        }\r\n        if (!this.state.type2) {\r\n            type2Error = \"required\";\r\n        }\r\n\r\n\r\n        if ( urlError || url1Error || url2Error || typeError || type1Error || type2Error || treasurerContactsError || secretaryContactsError || managerContactsError || ChairpersonContactsError || treasurerNameError || secretaryNameError || managerNameError || ChairpersonNameError) {\r\n            this.setState({urlError, url1Error,url2Error, typeError, type1Error ,type2Error, treasurerContactsError, secretaryContactsError,managerContactsError ,ChairpersonContactsError ,treasurerNameError, secretaryNameError, managerNameError ,ChairpersonNameError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            const com = {\r\n                orgId: this.state.orgId,\r\n                committee: this.state.ChairpersonName + \",\" + this.state.ChairpersonContacts + \",\" + this.state.managerName + \",\" + this.state.managerContacts + \",\" + this.state.treasurerName + \",\" + this.state.treasurerContacts + \",\" + this.state.treasurerName + \",\" + this.state.treasurerContacts,\r\n            };\r\n\r\n\r\n            const social = {\r\n                orgId: this.state.orgId,\r\n                socialType: this.state.type,\r\n                url: this.state.url,\r\n            };\r\n\r\n            const social1 = {\r\n                orgId: this.state.orgId,\r\n                socialType: this.state.type1,\r\n                url: this.state.url1,\r\n            };\r\n\r\n            const social2 = {\r\n                orgId: this.state.orgId,\r\n                socialType: this.state.type2,\r\n                url: this.state.url2,\r\n            };\r\n            console.log(com)\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/committee\", com)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp1: res.data.message});\r\n                    this. onToastCom ();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp1: false});\r\n                    this. onToastCom();\r\n                });\r\n\r\n            console.log(social)\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/socials\", social)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp2: res.data.message});\r\n                    this. onToastSocial();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp2: false});\r\n                    this. onToastSocial();\r\n                });\r\n\r\n            console.log(social1)\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/organisation/add/socials\", social1)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp3: res.data.message});\r\n                    this. onToastSocial1();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp3: false});\r\n                    this. onToastSocial1();\r\n                });\r\n\r\n            Axios\r\n                .post( this.state.serverDomain + \"/v1/organisation/add/socials\", social2)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({popUp4: res.data.message});\r\n                    this. onToastSocial2();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({popUp4: false});\r\n                    this. onToastSocial2();\r\n                });\r\n\r\n            const notification_update_body = {\r\n                org_id: this.state.orgId,\r\n            };\r\n\r\n            Axios\r\n                .post(this.state.serverDomain + \"/v1/notifications/update/notifications\", notification_update_body)\r\n                .then(res => console.log(res))\r\n                .catch(err => console.log(err))\r\n\r\n            // clear form\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n\r\n    onToastCom= () => {\r\n        if(this.state.popUp1){\r\n\r\n            toast.success('Committee Submitted ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Committee', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onToastSocial = () => {\r\n        if(this.state.popUp2){\r\n\r\n            toast.success('Social media1 Submitted', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Social media1 ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onToastSocial1 = () => {\r\n        if(this.state.popUp3){\r\n\r\n            toast.success('Social media2  Submitted', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Social media2 ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onToastSocial2 = () => {\r\n        if(this.state.popUp4){\r\n\r\n            toast.success('Social media3  Submitted', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n        }else{\r\n\r\n            toast.error('failed to send Social media3 ', {\r\n                position: toast.POSITION.TOP_RIGHT\r\n\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <OrgSidebar />\r\n                </div>\r\n            <div className=\"upgrade\">\r\n                <div className=\"wrap_upgrade\">\r\n                    <div>\r\n                        <div className=\"upgradeTitle\">\r\n                            <p className=\"upgradeTitle1\">Current level:</p>\r\n                            <p className=\"upgradeTitle2\">Three</p>\r\n                        </div>\r\n\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress_complete\"/>\r\n                            <div className=\"progress_complete\"/>\r\n                            <div className=\"progress_complete\"/>\r\n                            <div className=\"progress_empty\"/>\r\n                            <div className=\"progress_empty\"/>\r\n                            <div className=\"progress6\"> <StarOutlineIcon fontSize=\"large\"/></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrap_upgrade\">\r\n                    <div>\r\n                <Card className=\"upgrade_card_4\" variant=\"outlined\">\r\n                    <CardContent>\r\n                        <div className={classes.root}>\r\n                            <form onSubmit={this.handleFormSubmit}>\r\n                                <span className=\"upgrade_header\">\r\n                                    Additional credentials needed to Upgrade to level 4\r\n                                 </span>\r\n                                <div className=\"wrapIt\">\r\n\r\n                                    <div>\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Chairperson\"\r\n                                                name=\"ChairpersonName\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter full name...\"\r\n\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.ChairpersonNameError}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Chairperson\"\r\n                                                name=\"ChairpersonContacts\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter contacts...\"\r\n\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.ChairpersonContactsError}</span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Manager\"\r\n                                                name=\"managerName\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter full name...\"\r\n\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.managerNameError}</span>\r\n                                            </div>\r\n                                            <div>\r\n\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Manager\"\r\n                                                name=\"managerContacts\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter contacts...\"\r\n\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.managerContactsError}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Treasurer\"\r\n                                                name=\"treasurerName\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter full name...\"\r\n\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.treasurerNameError}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Treasurer\"\r\n                                                name=\"treasurerContacts\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter contacts...\"\r\n\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.treasurerContactsError}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Secretary\"\r\n                                                name=\"secretaryName\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter full name...\"\r\n\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.secretaryNameError}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Secretary\"\r\n                                                name=\"secretaryContacts\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter contacts...\"\r\n\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleCommitteeChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.secretaryContactsError}</span>\r\n                                        </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"WrapItsSocial\">\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n\r\n                                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                    <InputLabel id=\"demo-controlled-open-select-label\">Social media platform</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                                        id=\"demo-simple-select-outlined\"\r\n                                                        name=\"type\"\r\n                                                        value={this.type}\r\n                                                        onChange={this.handleSocialChange}\r\n                                                        label=\"Social platform\"\r\n\r\n\r\n                                                    >\r\n                                                        <MenuItem value=\"\">\r\n                                                            <em>None</em>\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value={\"Facebook\"}>Facebook</MenuItem>\r\n                                                        <MenuItem value={\"Instagram\"}>Instagram</MenuItem>\r\n                                                        <MenuItem value={\"Twitter\"}>Twitter</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <span className=\"loginError_certificate\">{this.state.typeError}</span>\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Social media url\"\r\n                                                name=\"url\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Enter your url...\"\r\n\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                                <span className=\"loginError_certificate\">{this.state.urlError}</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n\r\n                                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                    <InputLabel id=\"demo-controlled-open-select-label\">Social media platform</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                                        id=\"demo-simple-select-outlined\"\r\n                                                        value={this.type1}\r\n                                                        name=\"type1\"\r\n                                                        onChange={this.handleSocial1Change}\r\n                                                        label=\"Social platform\"\r\n\r\n\r\n                                                    >\r\n                                                        <MenuItem value=\"\">\r\n                                                            <em>None</em>\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value={\"Facebook\"}>Facebook</MenuItem>\r\n                                                        <MenuItem value={\"Instagram\"}>Instagram</MenuItem>\r\n                                                        <MenuItem value={\"Twitter\"}>Twitter</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <span className=\"loginError_certificate\">{this.state.type1Error}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                            <TextField\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Social media url\"\r\n                                                style={{ margin: 8 }}\r\n                                                name=\"url1\"\r\n                                                placeholder=\"Enter your url...\"\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <span className=\"loginError_certificate\">{this.state.url1Error}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"social_media\">\r\n                                            <div>\r\n\r\n                                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                    <InputLabel id=\"demo-controlled-open-select-label\">Social media platform</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                                        id=\"demo-simple-select-outlined\"\r\n                                                        value={this.type2}\r\n                                                        name=\"type2\"\r\n                                                        onChange={this.handleSocial2Change}\r\n                                                        label=\"Social platform\"\r\n\r\n\r\n                                                    >\r\n                                                        <MenuItem value=\"\">\r\n                                                            <em>None</em>\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value={\"Facebook\"}>Facebook</MenuItem>\r\n                                                        <MenuItem value={\"Instagram\"}>Instagram</MenuItem>\r\n                                                        <MenuItem value={\"Twitter\"}>Twitter</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <span className=\"loginError_certificate\">{this.state.type2Error}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <TextField\r\n                                                    id=\"outlined-full-width\"\r\n                                                    label=\"Social media url\"\r\n                                                    style={{ margin: 8 }}\r\n                                                    name=\"url2\"\r\n                                                    placeholder=\"Enter your url...\"\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <span className=\"loginError_certificate\">{this.state.url2Error}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"upgrade_Button\">\r\n                                            <button className=\"upgrade-btn\" type=\"submit\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <ToastContainer/>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Upgrade3);\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade5.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Profile\\Profile.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Certificate\\Upgrade0.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\BlurImages\\BlurImages.js",["352","353","354","355","356"],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Login.js",["357","358","359","360"],"import React, {useState,useContext} from 'react';\r\nimport {Link, useHistory,Redirect} from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport backgroundImg from \"../../assets/homeBackground.jpg\";\r\nimport Logo from \"./Components/Logo\";\r\nimport axios from \"axios\"\r\nimport \"./Styles/Login.css\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nimport {ApiContext} from \"../../apiContext/ApiContext\";\r\nimport {FrontEndContext} from \"../../apiContext/FrontEndContext\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    main: {\r\n        backgroundImage: `url(${backgroundImg})`\r\n\r\n    }\r\n}\r\n\r\nfunction Login ()\r\n{\r\n    let history = useHistory();\r\n    const [email_error_message,set_email_error_message] = useState(\"\");\r\n    const [password_error_message,set_password_error_message] = useState(\"\");\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext));\r\n    const [frontEndDomain, setFrontEndDomain] = useState(useContext(FrontEndContext));\r\n\r\n\r\n    const validate_email_address = event =>\r\n    {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const determine_current_user_login = event =>\r\n    {\r\n        event.preventDefault();\r\n        localStorage.clear();\r\n        let login_user_email = document.getElementById(\"login_user_email\").value.toString();\r\n        let login_user_password = document.getElementById(\"login_user_password\").value.toString();\r\n\r\n        if(!login_user_email.includes(\"@\") || login_user_email.length === 0)\r\n        {\r\n            set_email_error_message(\"email is required\")\r\n        }\r\n\r\n        if(login_user_password.length === 0)\r\n        {\r\n            set_password_error_message(\"password is required\")\r\n        }\r\n        else\r\n        {\r\n            const data = {\r\n                \"username\" : login_user_email,\r\n                \"password\" : login_user_password,\r\n                \"role\" : \"\"\r\n            }\r\n\r\n            document.getElementById(\"waitInfo\").style.display = \"flex\";\r\n            document.getElementById(\"badLogin\").style.display = \"none\";\r\n            document.getElementById(\"serverError\").style.display = \"none\";\r\n\r\n            axios.post(serverDomain + '/v1/login/user/determine', data)\r\n            .then(response =>\r\n            {\r\n                localStorage.setItem( \"id\" ,response.data.id);\r\n                localStorage.setItem( \"role\" ,response.data.jwttoken)\r\n                localStorage.setItem( \"curr_user_email\" ,response.data.curr_user_email)\r\n\r\n                if(response.data.jwttoken === \"general\")\r\n                {\r\n\r\n                    document.getElementById(\"waitInfo\").style.display = \"none\";\r\n                    window.location.href = frontEndDomain + \"/\";\r\n                }\r\n                else if(response.data.jwttoken === \"admin\")\r\n                {\r\n                    document.getElementById(\"waitInfo\").style.display = \"none\";\r\n                    window.location.href = frontEndDomain + \"/featured/\";\r\n                }\r\n                else if(response.data.jwttoken === \"organisation\")\r\n                {\r\n                    document.getElementById(\"waitInfo\").style.display = \"none\";\r\n                    window.location.href = frontEndDomain + \"/profile/\";\r\n                }\r\n            })\r\n            .catch(error =>{\r\n                if(error.response)\r\n                {\r\n                    console.log(error.response)\r\n                    if(error.response.data.message.includes(\"organisation not found\") || error.response.data.message.includes(\"user password is incorrect\"))\r\n                    {\r\n                        document.getElementById(\"badLogin\").style.display = \"flex\";\r\n                        document.getElementById(\"waitInfo\").style.display = \"none\";\r\n                    }\r\n                    else\r\n                    {\r\n                        document.getElementById(\"serverError\").style.display = \"flex\";\r\n                        document.getElementById(\"waitInfo\").style.display = \"none\";\r\n\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    document.getElementById(\"serverError\").style.display = \"flex\";\r\n                    document.getElementById(\"waitInfo\").style.display = \"none\";\r\n\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Login\" style={styles.main}>\r\n                <div  id={\"banner_filter\"}>\r\n                    <Logo/>\r\n                    <Link to={\"/\"}>\r\n                        <ArrowBackIcon style={{color: \"white\", marginLeft: \"30px\", fontSize: \"xx-large\"}}/>\r\n                    </Link>\r\n                    <div className=\"LoginCard\">\r\n                        <Alert severity=\"error\" id={\"badLogin\"}>incorrect username or password!</Alert>\r\n                        <Alert severity=\"error\" id={\"serverError\"}>server error...</Alert>\r\n                        <Alert severity=\"info\" id={\"waitInfo\"}>signing in...</Alert>\r\n                        <div className=\"wrapper\">\r\n                            <form className=\"LoginForm\" onSubmit={determine_current_user_login}>\r\n                               <span className=\"LoginHeader\">\r\n                                   Sign in\r\n                               </span>\r\n\r\n                                <div className=\"LoginInput\" data-validate=\"Username is required\">\r\n                                    <span className=\"LoginInputLabel\">\r\n                                        Email\r\n                                    </span>\r\n\r\n                                    <TextField\r\n                                        id=\"login_user_email\"\r\n                                        className=\"innerInput validate\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        variant={\"outlined\"}\r\n                                        placeholder=\"Enter your email\"\r\n                                        onChange={validate_email_address}\r\n                                    />\r\n\r\n                                    <span className=\"loginError\">{email_error_message}</span>\r\n                                </div>\r\n                                <div className=\"LoginInput\" data-validate=\"Username is required\">\r\n                                    <span className=\"LoginInputLabel\">\r\n                                        Password\r\n                                    </span>\r\n\r\n                                    <TextField\r\n                                        id={\"login_user_password\"}\r\n                                        className=\"innerInput validate\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        variant={\"outlined\"}\r\n                                        placeholder=\"Enter your password\"\r\n                                    />\r\n\r\n                                    <span className=\"loginError\">{password_error_message}</span>\r\n                                </div>\r\n\r\n                                <div className=\"wrapper-btn\">\r\n                                    <button className=\"Login-btn\" id={\"loginBTN_less_rounded\"} type=\"submit\">\r\n                                        Login\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"BottomForm\">\r\n                                    <Link to={\"/signUp\"} className=\"BottomLinker\">\r\n                                        <span> Need an account?</span>\r\n                                    </Link>\r\n\r\n                                    <Link to={\"/Password\"} className=\"BottomLinker\">\r\n                                        <span> Forgot password?</span>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\Organisation.js",["361","362","363"],"import {useHistory} from \"react-router-dom\";\r\nimport {Box, Tooltip} from \"@material-ui/core\";\r\nimport {useContext, useState} from \"react\";\r\nimport {ApiContext} from \"../../../../apiContext/ApiContext\";\r\n\r\n\r\nfunction trim_description(descr)\r\n{\r\n\r\n    let acceptableLength = 84;\r\n    if(descr !== undefined) {\r\n\r\n        if(descr.length > acceptableLength)\r\n        {\r\n            let display_dscr = \"\";\r\n            for(let i = 0; i < acceptableLength - 3; i++)\r\n            {\r\n                display_dscr += descr[i];\r\n            }\r\n            return (display_dscr + \"...\");\r\n        }\r\n        else return descr;\r\n    }\r\n}\r\n\r\nexport default function Organisation(props)\r\n{\r\n    let history = useHistory();\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n    const openOrganisation = el =>\r\n    {\r\n        el.preventDefault();\r\n        history.push(\"/organisation/\" + el.target.id);\r\n    }\r\n\r\n\r\n    let description = trim_description(props.orgDescription);\r\n\r\n\r\n    return(\r\n    <Box className =\"sector_organisation\">\r\n        <Tooltip title={props.orgName}  aria-label=\"add\">\r\n            <img src={props.imgUrl} alt={\"profile-image\"} id={props.orgId} onClick={e => openOrganisation(e,\"id\")} />\r\n        </Tooltip>\r\n        <Box className=\"sector_organisation_meta\">\r\n            <p className=\"sector_organisation_title\">{props.orgName}</p>\r\n            <p className=\"sector_organisation_descr\">\r\n                {description}\r\n            </p>\r\n            {/*<p className=\"sector_organisation_other\">{props.dateAdded}</p>*/}\r\n            <Tooltip title=\"certificate level\"  aria-label=\"add\">\r\n                <p className=\"recommended-meta-data-lvl\">{props.certificate_level}</p>\r\n            </Tooltip>\r\n        </Box>\r\n    </Box>\r\n    );\r\n}\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\TermsLogo.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\Logo.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Organisation\\OrganisationRecommended.js",["364","365"],"import {useContext, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Box, Tooltip} from \"@material-ui/core\";\r\nimport {ApiContext} from \"../../../../apiContext/ApiContext\";\r\n\r\nfunction trim_description(descr)\r\n{\r\n    let acceptableLength = 84;\r\n    if(descr !== undefined) {\r\n\r\n        if(descr.length > acceptableLength)\r\n        {\r\n            let display_dscr = \"\";\r\n            for(let i = 0; i < acceptableLength - 3; i++)\r\n            {\r\n                display_dscr += descr[i];\r\n            }\r\n            return (display_dscr + \"...\");\r\n        }\r\n        else return descr;\r\n    }\r\n}\r\n\r\nexport default function OrganisationRecommended(props)\r\n{\r\n    let history = useHistory();\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n\r\n    const openOrganisation = el =>\r\n    {\r\n        el.preventDefault();\r\n        history.push(\"/organisation/\" + el.target.id);\r\n    }\r\n\r\n    let description = trim_description(props.orgDescription);\r\n\r\n    return(\r\n        <Box className =\"recommended\">\r\n            <Tooltip title={props.orgName}  aria-label=\"add\">\r\n                <img src={props.imgUrl} alt={\"profile\"} id={props.orgId} onClick={e => openOrganisation(e,\"id\")}/>\r\n            </Tooltip>\r\n            <Box className=\"recommended-meta-data-container\">\r\n                <p className=\"recommended-meta-data-title\">{props.orgName} - <span className=\"recommended-meta-data-sector\">{props.org_sector}</span> </p>\r\n                <p className=\"recommended-meta-data-descr\">\r\n                    {description}\r\n                </p>\r\n\r\n                <Tooltip title=\"certificate level\"  aria-label=\"add\">\r\n                    <p className=\"recommended-meta-data-lvl\">{props.certificate_level}</p>\r\n                </Tooltip>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Sidebar.js",["366"],"import React from 'react'\r\nimport \"./styles/Sidebar.css\"\r\nimport {  Link} from \"react-router-dom\";\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CalendarTodayOutlinedIcon from '@material-ui/icons/CalendarTodayOutlined';\r\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\r\nimport Logo from \"../../login/Components/DashLogo\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport CardGiftcardOutlinedIcon from '@material-ui/icons/CardGiftcardOutlined';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\n\r\n/////general organisation admin\r\nconst roles = localStorage.getItem('role')\r\n\r\nfunction Sidebar(){\r\n\r\n    function handleLogOut() {\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    //assigning location variable\r\n    const location = useLocation();\r\n\r\n    //destructuring pathname from location\r\n    const { pathname } = location;\r\n\r\n    //Javascript split method to get the name of the path in array\r\n    const splitLocation = pathname.split(\"/\");\r\n\r\n    function Org(){\r\n        if(roles === 'organisation'){\r\n            return(\r\n                <div>\r\n                    <div className={splitLocation[1] === \"dashboard\" ? \"active\" : \"\"}>\r\n                        <Link to='/dashboard' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <AccountCircleOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Profile</div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"certificate\" || splitLocation[1] === \"upgrade5\" || splitLocation[1] === \"upgrade0\"|| splitLocation[1] === \"upgrade1\"|| splitLocation[1] === \"upgrade2\"|| splitLocation[1] === \"upgrade3\"|| splitLocation[1] === \"upgrade4\" ? \"active\" : \"\"}>\r\n                        <Link to='/certificate' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CardGiftcardOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Certificate</div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"report\" ? \"active\" : \"\"} >\r\n                        <Link to='/report' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <ReportOutlinedIcon/>\r\n                                <div className=\"sideIcon\" > Report </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"timeline\" ? \"active\" : \"\"} >\r\n                        <Link to='/timeline' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <TimelineIcon/>\r\n                                <div className=\"sideIcon\" > Timeline </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"blurImages\" ? \"active\" : \"\"}>\r\n                        <Link to='/blurImages' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CalendarTodayOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Blur Images </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"calendar\" ? \"active\" : \"\"}>\r\n                        <Link to='/calendar' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CalendarTodayOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Calendar </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"logout\" ? \"active\" : \"\"}  onClick={handleLogOut}>\r\n                        <Link to='/browse' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <ExitToAppOutlinedIcon/>\r\n                                <div className=\"sideIcon\" > Logout </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        else if(roles === 'admin'){\r\n            return(\r\n                <div>\r\n                    <div className={splitLocation[1] === \"dashboard\" ? \"active\" : \"\"}>\r\n                        <Link to='/dashboard' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <DashboardOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Dashboard </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"organisations\" || splitLocation[1] === 'org' ? \"active\" : \"\"}>\r\n                        <Link to='/organisations' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <PeopleOutlineIcon />\r\n                                <div className=\"sideIcon\" > Organisations </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"users\" ? \"active\" : \"\"}>\r\n                        <Link to='/users' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <PersonOutlineIcon />\r\n                                <div className=\"sideIcon\" > Users </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"validate\" || splitLocation[1] === \"orgValidate\" ? \"active\" : \"\"}>\r\n                        <Link to='/validate' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <VerifiedUserOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Validate </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"calendar\" ? \"active\" : \"\"}>\r\n                        <Link to='/calendar' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CalendarTodayOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Calendar </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"logout\" ? \"active\" : \"\"}  onClick={handleLogOut}>\r\n                        <Link to='/browse' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <ExitToAppOutlinedIcon/>\r\n                                <div className=\"sideIcon\" > Logout </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else if (roles === 'general'){\r\n            return(\r\n                <div>\r\n                    this should be an error page\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <div className=\"sidebarWrapper\">\r\n                    <div className=\"sidebarMenu\">\r\n                        <div className=\"sidebarList\">\r\n                            <Logo/>\r\n                            <div className=\"MuListPadding MuListRoot\">\r\n                                {Org()}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Sidebar\r\n",["367","368"],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\loader\\Loader.js",["369"],"import loaderStyles from './Loader.css'\r\nfunction Loader()\r\n{\r\n    return (\r\n        <div id={\"main\"}>\r\n            <div className=\"preloader\">\r\n                <div className=\"preloader__square\"></div>\r\n                <div className=\"preloader__square\"></div>\r\n                <div className=\"preloader__square\"></div>\r\n                <div className=\"preloader__square\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\BrowseBySector\\Sector.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\chatbot\\Chatbot.js",["370"],"import {Box} from \"@material-ui/core\";\r\nimport \"./Styles/Chatbot.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Chatbot()\r\n{\r\n    let bot_visible = false;\r\n    const toggleBot = event =>\r\n    {\r\n        event.preventDefault();\r\n        if(bot_visible === false) {\r\n            document.getElementById(\"iframe\").style.display = \"block\";\r\n            document.getElementById(\"iframe-givealot-toggle-btn\").innerText = \"MINIMIZE\";\r\n            bot_visible = true;\r\n        }\r\n        else if(bot_visible === true)\r\n        {\r\n            document.getElementById(\"iframe\").style.display = \"none\";\r\n            document.getElementById(\"iframe-givealot-toggle-btn\").innerText = \"ASK GIVEABOT\";\r\n            bot_visible = false;\r\n        }\r\n    }\r\n    return (\r\n        <Box id={\"iframe-container\"}>\r\n            <div id={\"iframe\"}>\r\n                <iframe src=\"https://31b4-105-208-196-65.ngrok.io/\">\r\n                    sorry, the bot is not available for you\r\n                </iframe>\r\n            </div>\r\n\r\n            <Button\r\n                id={\"iframe-givealot-toggle-btn\"}\r\n                variant={\"contained\"}\r\n                color={\"secondary\"}\r\n\r\n                onClick={toggleBot}\r\n            >\r\n                ASK GIVEABOT\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Chatbot;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Footer\\Footer.js",["371","372","373","374","375","376","377"],"import React from \"react\";\r\nimport browse_general_footer from \"../../Styles/browse_general_footer.css\"\r\n\r\nfunction Footer()\r\n{\r\n    return (\r\n        <div className=\"footer-clean\">\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <div className=\"container2\">\r\n                        <div className=\"\">\r\n                            <h3>Links</h3>\r\n                            <ul>\r\n                                <li><a href=\"#\">Home</a></li>\r\n                                <li><a href=\"#\">verify certificate</a></li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <h3>About</h3>\r\n                            <ul>\r\n                                <li><a href=\"#\">Deepsink</a></li>\r\n                                <li><a href=\"#\">Team</a></li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <h3>contact us</h3>\r\n                            <ul>\r\n                                <li><a href=\"#\">contact@givealot.org</a></li>\r\n                                <li><a href=\"#\">011 234 5678</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"social\">\r\n                            <p className=\"copyright\">Givealot © {new Date().getFullYear()}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\FullPageLoader.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\Navbar\\Navbar.js",["378"],"import {Link} from \"react-router-dom\";\r\nimport logo from \"../../../../assets/logo/logo3_1.png\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport {ApiContext} from \"../../../../apiContext/ApiContext\";\r\nimport {Box, LinearProgress} from \"@material-ui/core\";\r\n\r\nfunction Navbar()\r\n{\r\n    const [searchResultsOrganisations, setSearchResultsOrganisations] = useState([]);\r\n    const [showSearchResults, SetShowSearchResults] = useState(false);\r\n    const [searchResultsOrganisationsRelated, setSearchResultsOrganisationsRelated] = useState([]);\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext))\r\n\r\n\r\n    function searchOrganisation(e)\r\n    {\r\n        e.preventDefault();\r\n        document.getElementById(\"searchResultsProgressLoader\").style.display = \"block\";\r\n        fetch(serverDomain + \"/search/organisation/browse/\"+document.getElementById(\"browse_search_input2\").value)\r\n        .then(async response =>{\r\n            const data = await response.json();\r\n            document.getElementById(\"searchResultsProgressLoader\").style.display = \"none\";\r\n            if(!response.ok) /* error handling here */\r\n            {\r\n                if(response.status === 500)\r\n                {}\r\n                if(typeof data !== 'undefined')\r\n                {\r\n                }\r\n            }\r\n\r\n            if(data.message === \"success\")\r\n            {\r\n                setSearchResultsOrganisations(data.results);\r\n                setSearchResultsOrganisationsRelated(data.suggestions);\r\n\r\n                SetShowSearchResults(true);\r\n                document.getElementById(\"searchResults\").hidden = false;\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(\"failed search \" + error)\r\n        });\r\n    }\r\n\r\n    const onKeyUp = event =>\r\n    {\r\n        /*\r\n            code 13 represents the ENTER button\r\n        */\r\n        if (event.charCode === 13) {\r\n            searchOrganisation(event);\r\n        }\r\n    }\r\n\r\n   useEffect(() =>{\r\n\r\n    },[]);\r\n    return (\r\n\r\n        <>\r\n            <div id=\"browseNavSection\">\r\n                {showSearchResults && <SearchResults org_list={searchResultsOrganisations}\r\n                                org_suggestions={searchResultsOrganisationsRelated}/>}\r\n\r\n                <Link to={\"/\"}><img id=\"browseLogo\" src={logo} alt={\"logo\"} /></Link>\r\n                <p>browse organisations</p>\r\n                <div className=\"browse_search_input2_container\">\r\n                    <input\r\n                        id={\"browse_search_input2\"}\r\n                        placeholder=\"Search organisation\"\r\n                        type=\"text\"\r\n\r\n                        onKeyPress={onKeyUp}\r\n                    />\r\n                    <SearchIcon\r\n                        id={\"search_icon_nav\"}\r\n                        onClick={searchOrganisation}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Box sx={{ width: '100%' }} id={\"searchResultsProgressLoader\"}>\r\n                <LinearProgress color={\"secondary\"} />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Email\\Email.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\login\\Components\\DashLogo.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Report\\Accordions.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\SearchResults\\SearchResults.js",["379","380","381","382","383"],"import {Box, Paper} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport closeResults from '../Navbar/Navbar';\r\nimport {ApiContext} from \"../../../../apiContext/ApiContext\";\r\n\r\nfunction SearchResults(props)\r\n{\r\n    let curr_results = [];\r\n    const [serverDomain, setServerDomain] = useState(useContext(ApiContext));\r\n\r\n    if(props.org_list.length !== undefined)\r\n    {\r\n        for (let i = 0; i < props.org_list.length; i++) {\r\n            let orgDescription = props.org_list[i].orgDescription;\r\n            let orgName = props.org_list[i].orgName;\r\n            let orgId = props.org_list[i].orgId;\r\n            let orgImage = serverDomain + \"/v1/organisation/image/get/logo/\" + orgId;\r\n            curr_results.push(\r\n                <>\r\n                    <SearchResult key={orgId} orgDescription={orgDescription}\r\n                                                orgName={orgName}\r\n                                                orgId={orgId}\r\n                                                orgImage={orgImage}/>\r\n                    <Divider/>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    let curr_suggestions = [];\r\n    if(props.org_suggestions.length !== undefined)\r\n    {\r\n        for (let i = 0; i < props.org_suggestions.length; i++) {\r\n            let orgDescription = props.org_suggestions[i].orgDescription;\r\n            let orgName = props.org_suggestions[i].orgName;\r\n            let orgId = props.org_suggestions[i].orgId;\r\n            let orgImage = serverDomain + \"/v1/organisation/image/get/logo/\" + orgId;\r\n\r\n            curr_suggestions.push(\r\n                <>\r\n                <SearchResult key={orgId} orgDescription={orgDescription}\r\n                                orgName={orgName}\r\n                                orgId={orgId}\r\n                                orgImage={orgImage}/>\r\n                    <Divider/>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper id={\"searchResults\"}>\r\n            <Button\r\n                startIcon={<CloseIcon />}\r\n                variant={\"contained\"}\r\n                id={\"searchResultCloseBtn\"}\r\n                color={\"secondary\"}\r\n                onClick={(()=>{\r\n                    document.getElementById(\"searchResults\").hidden = true;\r\n                })}\r\n            >\r\n                close\r\n            </Button>\r\n            <p className={\"searchResults-inner-headings\"}>{curr_results.length} results</p>\r\n                {curr_results}\r\n\r\n            {curr_suggestions.length > 0 ? <p className={\"searchResults-inner-headings\"}>related results</p>\r\n                :<p className={\"searchResults-inner-headings\"}></p> }\r\n\r\n                {curr_suggestions}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SearchResults;\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\OrganisationTimeLineItem\\OrganisationTimeLineItem.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\browse\\Components\\SearchResults\\SearchResult.js",["384","385","386"],"import {Box, Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\nfunction SearchResult(props)\r\n{\r\n    let history = useHistory();\r\n    return (\r\n\r\n        <Box className={\"Result\"} onClick={()=>{\r\n            history.push(\"/organisation/\"+props.orgId)\r\n        }\r\n        }>\r\n\r\n            <Box>\r\n                <img className={\"Result-image\"} src={props.orgImage} width={200}/>\r\n            </Box>\r\n            <Box>\r\n                <Typography  className={\"search-result-org-name\"} noWrap>{props.orgName}</Typography>\r\n                <Typography className={\"search-result-org-description\"} noWrap>{props.orgDescription}</Typography>\r\n                <Typography className={\"search-result-org-date\"} noWrap>2021-09-09</Typography>\r\n                <Typography className={\"search-result-org-sector\"} noWrap>health</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchResult;","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Cards.js",["387"],"import React, { Component } from 'react'\r\nimport \"./Styles/Featured.css\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport axios from \"axios\";\r\nimport {ApiContext} from \"../../../../../apiContext/ApiContext\";\r\n\r\nexport class Cards extends Component {\r\n    static contextType = ApiContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Users: '',\r\n            Organisations: '',\r\n            notifications: '',\r\n            adminUserEmail:localStorage.getItem('curr_user_email'),\r\n            orgId: null,\r\n            reports: [],\r\n            adminId: localStorage.getItem('id'),\r\n            serverDomain: \"https://givealotcharities.herokuapp.com\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUsers();\r\n        this.getOrganisations();\r\n        this.getNotifications();\r\n        this. getReports();\r\n    }\r\n\r\n    getReports(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        const adminReportRequestBody = {\r\n            \"orgId\" : this.state.adminId\r\n        }\r\n\r\n        axios.post(this.state.serverDomain + '/report/get/appealed', adminReportRequestBody ,config)\r\n            .then(response =>{\r\n                console.log(response.data.object)\r\n                this.setState({reports: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getUsers(){\r\n        if(localStorage.getItem('role') === 'admin') {\r\n            let config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'Access-Control-Allow-Origin': '*',\r\n                }\r\n            }\r\n            const adminUsersRequestBody = {\r\n                \"adminUserEmail\": this.state.adminUserEmail\r\n            }\r\n\r\n            axios.post(this.state.serverDomain + '/v1/user/get/num_user', adminUsersRequestBody, config)\r\n                .then(response => {\r\n                    this.setState({Users: response.data.response})\r\n\r\n                })\r\n                .catch(error => {\r\n                    this.setState({error: 'Error Retrieving data'})\r\n                })\r\n        }\r\n    }\r\n\r\n    getOrganisations(){\r\n        if(localStorage.getItem('role') === 'admin'){\r\n            let config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'Access-Control-Allow-Origin': '*',\r\n                }\r\n            }\r\n            const adminUsersRequestBodyOrg = {\r\n                \"adminId\" : this.state.adminId\r\n            }\r\n            axios.post(this.state.serverDomain + '/v1/organisation/get/organisations',adminUsersRequestBodyOrg , config)\r\n                .then(response =>{\r\n                    this.setState({ Organisations: response.data.response })\r\n\r\n                })\r\n                .catch(error =>{\r\n                    alert(error)\r\n                    this.setState({error : 'Error Retrieving data'})\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    getNotifications(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const adminUsersRequestBodyNotification = {\r\n            \"adminUserEmail\" : this.state.adminUserEmail\r\n        }\r\n        axios.post(this.state.serverDomain + '/v1/notifications/get/num_notifications',adminUsersRequestBodyNotification , config)\r\n            .then(response =>{\r\n                this.setState({ notifications: response.data.response })\r\n            })\r\n            .catch(error =>{\r\n                this.setState({error : 'Error Retrieving data'})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { Users , Organisations, notifications, reports} = this.state\r\n        return (\r\n            <div style={{display: \"flex\"}} className= \"featuredCards\">\r\n                <Card variant=\"outlined\" className=\"cardElement\">\r\n                    <CardContent style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\r\n                        <div>\r\n                            <div color=\"textPrimary\">\r\n                                Users\r\n                            </div>\r\n                            <div color=\"textSecondary\">\r\n                                {Users}\r\n                            </div>\r\n                        </div>\r\n                        <div color=\"textSecondary\" className=\"cardIconUser\" >\r\n                            <PersonOutlineIcon />\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card variant=\"outlined\" className=\"cardElement\">\r\n                    <CardContent style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\r\n                        <div>\r\n                            <div color=\"textPrimary\">\r\n                                Organisations\r\n                            </div>\r\n                            <div color=\"textSecondary\">\r\n                                {Organisations.length}\r\n                            </div>\r\n                        </div>\r\n                        <div color=\"textSecondary\" className=\"cardIconOrg\" >\r\n                            <PeopleOutlineIcon />\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card variant=\"outlined\" className=\"cardElement\">\r\n                    <CardContent style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\r\n                        <div>\r\n                            <div color=\"textPrimary\">\r\n                                Reports\r\n                            </div>\r\n                            <div color=\"textSecondary\">\r\n                                {reports.length}\r\n                            </div>\r\n                        </div>\r\n                        <div color=\"textSecondary\" className=\"cardIconReports\" >\r\n                            <ReportIcon />\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card variant=\"outlined\" className=\"cardElement\">\r\n                    <CardContent style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\r\n                        <div>\r\n                            <div color=\"textPrimary\">\r\n                                Notifications\r\n                            </div>\r\n                            <div color=\"textSecondary\">\r\n                                {notifications}\r\n                            </div>\r\n                        </div>\r\n                        <div color=\"textSecondary\" className=\"cardIconNotifications\" >\r\n                            <NotificationsOutlinedIcon />\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\Featured\\Chart.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\DemoSidebar\\AdminSidebar.js",[],"C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\DemoSidebar\\OrgSidebar.js",["388","389"],"import React from 'react'\r\nimport \"../../styles/Sidebar.css\"\r\nimport {  Link} from \"react-router-dom\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CalendarTodayOutlinedIcon from '@material-ui/icons/CalendarTodayOutlined';\r\nimport Logo from \"../../../../login/Components/DashLogo\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport CardGiftcardOutlinedIcon from '@material-ui/icons/CardGiftcardOutlined';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\n\r\nconst roles = localStorage.getItem('role')\r\n\r\nfunction Sidebar(){\r\n\r\n    function handleLogOut() {\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    //assigning location variable\r\n    const location = useLocation();\r\n\r\n    //destructuring pathname from location\r\n    const { pathname } = location;\r\n\r\n    //Javascript split method to get the name of the path in array\r\n    const splitLocation = pathname.split(\"/\");\r\n\r\n    function Org(){\r\n\r\n            return(\r\n                <div>\r\n                    <div className={splitLocation[1] === \"profile\" ? \"active\" : \"\"}>\r\n                        <Link to='/profile' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <AccountCircleOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Profile</div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"certificate\" || splitLocation[1] === \"upgrade5\" || splitLocation[1] === \"upgrade0\"|| splitLocation[1] === \"upgrade1\"|| splitLocation[1] === \"upgrade2\"|| splitLocation[1] === \"upgrade3\"|| splitLocation[1] === \"upgrade4\" ? \"active\" : \"\"}>\r\n                        <Link to='/certificate' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CardGiftcardOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Certificate</div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"report\" ? \"active\" : \"\"} >\r\n                        <Link to='/report' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <ReportOutlinedIcon/>\r\n                                <div className=\"sideIcon\" > Reports </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"timeline\" ? \"active\" : \"\"} >\r\n                        <Link to='/timeline' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <TimelineIcon/>\r\n                                <div className=\"sideIcon\" > Timeline </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"blurImages\" ? \"active\" : \"\"}>\r\n                        <Link to='/blurImages' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CalendarTodayOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Blur Images </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"orgcalendar\" ? \"active\" : \"\"}>\r\n                        <Link to='/orgcalendar' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <CalendarTodayOutlinedIcon />\r\n                                <div className=\"sideIcon\" > Calendar </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={splitLocation[1] === \"logout\" ? \"active\" : \"\"}  onClick={handleLogOut}>\r\n                        <Link to='/browse' className=\"link\">\r\n                            <li className=\"sidebarListItem \">\r\n                                <ExitToAppOutlinedIcon/>\r\n                                <div className=\"sideIcon\" > Logout </div>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"sidebarMenu\">\r\n                    <div className=\"sidebarList\">\r\n                        <Logo/>\r\n                        <div className=\"MuListPadding MuListRoot\">\r\n                            {Org()}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\OrgCalender\\OrgCalendar.js",["390"],"import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\nimport \"../Calendar/styles/Calendar.css\"\r\nimport {\r\n    Scheduler,\r\n    Appointments,\r\n    AppointmentForm,\r\n    AppointmentTooltip,\r\n    WeekView,\r\n    MonthView,\r\n    EditRecurrenceMenu,\r\n    AllDayPanel,\r\n    ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport axios from \"axios\";\r\nimport OrgSidebar from \"../DemoSidebar/OrgSidebar\";\r\n\r\nexport default class OrgCalendar extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            currentDate: new Date().toDateString(),\r\n            email: localStorage.getItem('curr_user_email'),\r\n            eventAdded: false,\r\n            addedAppointment: {},\r\n            appointmentChanges: {},\r\n            editingAppointment: undefined,\r\n            serverDomain : 'https://givealotcharities.herokuapp.com'\r\n        };\r\n\r\n        this.commitChanges = this.commitChanges.bind(this);\r\n        this.changeAddedAppointment = this.changeAddedAppointment.bind(this);\r\n        this.changeAppointmentChanges = this.changeAppointmentChanges.bind(this);\r\n        this.changeEditingAppointment = this.changeEditingAppointment.bind(this);\r\n    }\r\n\r\n    changeAddedAppointment(addedAppointment) {\r\n        this.setState({ addedAppointment });\r\n    }\r\n\r\n    changeAppointmentChanges(appointmentChanges) {\r\n        this.setState({ appointmentChanges });\r\n    }\r\n\r\n    changeEditingAppointment(editingAppointment) {\r\n        this.setState({ editingAppointment });\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n\r\n        this.setState((state) => {\r\n            let { data } = state;\r\n            console.log(data)\r\n\r\n            if (added) {\r\n                const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n                data = [...data, { id: startingAddedId, ...added }];\r\n                let startTime = data[data.length-1].startDate.toString().split(\" \")[4];\r\n                let endTime = data[data.length-1].endDate.toString().split(\" \")[4];\r\n                let title = data[data.length-1].title;\r\n                let description = data[data.length-1].notes;\r\n                let startDateYear = data[data.length-1].startDate.toString().split(\" \")[3];\r\n                let startDateMonth = data[data.length-1].startDate.toString().split(\" \")[1];\r\n                let startDateDay = data[data.length-1].startDate.toString().split(\" \")[2];\r\n                let eventStartDate = startDateYear +'-' + startDateMonth + '-' + startDateDay;\r\n\r\n                let endDateYear = data[data.length-1].endDate.toString().split(\" \")[3];\r\n                let endDateMonth = data[data.length-1].endDate.toString().split(\" \")[1];\r\n                let endDateDay = data[data.length-1].endDate.toString().split(\" \")[2];\r\n                let eventEndDate = endDateYear +'-' + endDateMonth + '-' + endDateDay;\r\n\r\n                const eventDayAndTime = {\r\n                    eventTitle: title,\r\n                    eventDescription: description,\r\n                    eventStartTime: startTime,\r\n                    eventEndTime: endTime,\r\n                    eventStartDate: eventStartDate,\r\n                    eventEndDate: eventEndDate,\r\n                    userEmail : this.state.email\r\n                }\r\n\r\n                let config = {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        'Access-Control-Allow-Origin': '*',\r\n                    }\r\n                }\r\n                axios.post(this.state.serverDomain + '/event/calender/add', eventDayAndTime ,config)\r\n                    .then(response =>{\r\n                    })\r\n                    .catch(error =>{\r\n                        console.log(error)\r\n                    })\r\n            }\r\n            if (changed) {\r\n                data = data.map(appointment => (\r\n                    changed[appointment.id] ?\r\n                        { ...appointment, ...changed[appointment.id] } : appointment));\r\n\r\n                let testing = changed.undefined\r\n\r\n                if(testing.title !== undefined){\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let eventId = data[data.length-1].eventId\r\n                    const titleUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTitle\" : testing.title\r\n                    }\r\n\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/title', titleUpdate ,config)\r\n                        .then(response =>{\r\n\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.startDate !== undefined){\r\n\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n\r\n                    let startDateMonth = testing.startDate.toString().split(\" \")[1];\r\n                    let startDateYear = testing.startDate.toString().split(\" \")[3];\r\n                    let startDateDay = testing.startDate.toString().split(\" \")[2];\r\n                    let eventStartDate = startDateYear +'-' + startDateMonth + '-' + startDateDay;\r\n\r\n                    let eventId = data[data.length-1].eventId\r\n                    const startDateUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDate\" : eventStartDate\r\n                    }\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/date/start', startDateUpdate ,config)\r\n                    .then(response =>{\r\n                    })\r\n                    .catch(error =>{\r\n                        console.log(error)\r\n                    })\r\n                }\r\n\r\n                if(testing.endDate !== undefined){\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let endDateMonth = testing.endDate.toString().split(\" \")[1];\r\n                    let endDateYear = testing.endDate.toString().split(\" \")[3];\r\n                    let endDateDay = testing.endDate.toString().split(\" \")[2];\r\n                    let eventEndDate = endDateYear +'-' + endDateMonth + '-' + endDateDay;\r\n\r\n                    let eventId = data[data.length-1].eventId\r\n                    const endDateUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDate\" : eventEndDate\r\n                    }\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/date/end', endDateUpdate ,config)\r\n                        .then(response =>{\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.startDate !== undefined){\r\n                    let startTime =testing.startDate.toString().split(\" \")[4];\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let eventId = data[data.length-1].eventId\r\n                    const startTimeUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTime\" : startTime\r\n                    }\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/time/start', startTimeUpdate ,config)\r\n                        .then(response =>{\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.endDate !== undefined){\r\n                    let endTime =testing.endDate.toString().split(\" \")[4];\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let eventId = data[data.length-1].eventId\r\n                    const endTimeUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newTime\" : endTime\r\n                    }\r\n                    console.log(endTimeUpdate)\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/time/end', endTimeUpdate ,config)\r\n                        .then(response =>{\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n\r\n                if(testing.notes !== undefined){\r\n                    let config = {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            'Access-Control-Allow-Origin': '*',\r\n                        }\r\n                    }\r\n                    let eventId = data[data.length-1].eventId\r\n                    const descriptionUpdate = {\r\n                        \"userEmail\" : this.state.email,\r\n                        \"eventId\" : eventId,\r\n                        \"newDescription\" : testing.notes\r\n                    }\r\n                    console.log(descriptionUpdate)\r\n                    axios.post(this.state.serverDomain + '/event/calender/edit/description', descriptionUpdate ,config)\r\n                        .then(response =>{\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n                }\r\n            }\r\n            if (deleted !== undefined) {\r\n                data = data.filter(appointment => appointment.id !== deleted);\r\n            }\r\n            return { data };\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.getEvents();\r\n    }\r\n\r\n    getEvents(){\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        axios.get(this.state.serverDomain +'/event/get/calender/'+this.state.email,  config)\r\n            .then(response =>{\r\n                this.setState({data: response.data.object})\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentDate, data, addedAppointment, appointmentChanges, editingAppointment,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"trythis\">\r\n                <div>\r\n                    <OrgSidebar />\r\n                </div>\r\n            <div className=\"calendar\">\r\n                    <Paper>\r\n                        <Scheduler\r\n                            data={data}\r\n                            height={660}\r\n                            remoteFiltering={true}\r\n                        >\r\n                            <ViewState\r\n                                currentDate={currentDate}\r\n                            />\r\n                            <EditingState\r\n                                onCommitChanges={this.commitChanges}\r\n                                addedAppointment={addedAppointment}\r\n                                onAddedAppointmentChange={this.changeAddedAppointment}\r\n                                appointmentChanges={appointmentChanges}\r\n                                onAppointmentChangesChange={this.changeAppointmentChanges}\r\n                                editingAppointment={editingAppointment}\r\n                                onEditingAppointmentChange={this.changeEditingAppointment}\r\n                            />\r\n                            <MonthView />\r\n                            <AllDayPanel />\r\n                            <EditRecurrenceMenu />\r\n                            <ConfirmationDialog />\r\n                            <Appointments />\r\n                            <AppointmentTooltip\r\n                                showOpenButton\r\n                                showDeleteButton\r\n                            />\r\n                            <AppointmentForm />\r\n                        </Scheduler>\r\n                    </Paper>\r\n            </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Tshilidzi-PC\\Documents\\GitHub\\Givee\\Give-a-Lot\\frontend\\givealot\\src\\views\\dashboard\\sidebar\\Components\\AdminReports\\AdminReports.js",[],{"ruleId":"391","severity":1,"message":"392","line":1,"column":15,"nodeType":"393","messageId":"394","endLine":1,"endColumn":23},{"ruleId":"391","severity":1,"message":"392","line":1,"column":15,"nodeType":"393","messageId":"394","endLine":1,"endColumn":23},{"ruleId":"391","severity":1,"message":"395","line":29,"column":26,"nodeType":"393","messageId":"394","endLine":29,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":98,"column":6,"nodeType":"398","endLine":98,"endColumn":8,"suggestions":"399"},{"ruleId":"396","severity":1,"message":"400","line":182,"column":10,"nodeType":"398","endLine":182,"endColumn":12,"suggestions":"401"},{"ruleId":"402","severity":1,"message":"403","line":247,"column":59,"nodeType":"404","endLine":247,"endColumn":65},{"ruleId":"402","severity":1,"message":"403","line":263,"column":59,"nodeType":"404","endLine":263,"endColumn":65},{"ruleId":"391","severity":1,"message":"405","line":12,"column":8,"nodeType":"393","messageId":"394","endLine":12,"endColumn":20},{"ruleId":"391","severity":1,"message":"406","line":28,"column":12,"nodeType":"393","messageId":"394","endLine":28,"endColumn":22},{"ruleId":"391","severity":1,"message":"407","line":28,"column":24,"nodeType":"393","messageId":"394","endLine":28,"endColumn":37},{"ruleId":"391","severity":1,"message":"408","line":30,"column":27,"nodeType":"393","messageId":"394","endLine":30,"endColumn":43},{"ruleId":"391","severity":1,"message":"409","line":2,"column":15,"nodeType":"393","messageId":"394","endLine":2,"endColumn":25},{"ruleId":"391","severity":1,"message":"392","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":35},{"ruleId":"410","severity":1,"message":"411","line":62,"column":54,"nodeType":"412","messageId":"413","endLine":62,"endColumn":55},{"ruleId":"391","severity":1,"message":"414","line":101,"column":17,"nodeType":"393","messageId":"394","endLine":101,"endColumn":29},{"ruleId":"391","severity":1,"message":"415","line":1,"column":9,"nodeType":"393","messageId":"394","endLine":1,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":1,"column":21,"nodeType":"393","messageId":"394","endLine":1,"endColumn":29},{"ruleId":"391","severity":1,"message":"416","line":2,"column":9,"nodeType":"393","messageId":"394","endLine":2,"endColumn":24},{"ruleId":"391","severity":1,"message":"417","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"418","line":12,"column":8,"nodeType":"393","messageId":"394","endLine":12,"endColumn":12},{"ruleId":"391","severity":1,"message":"395","line":22,"column":26,"nodeType":"393","messageId":"394","endLine":22,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":312,"column":7,"nodeType":"398","endLine":312,"endColumn":9,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":350,"column":33,"nodeType":"422","messageId":"423","endLine":350,"endColumn":53},{"ruleId":"391","severity":1,"message":"395","line":82,"column":26,"nodeType":"393","messageId":"394","endLine":82,"endColumn":41},{"ruleId":"391","severity":1,"message":"424","line":86,"column":10,"nodeType":"393","messageId":"394","endLine":86,"endColumn":30},{"ruleId":"391","severity":1,"message":"425","line":86,"column":32,"nodeType":"393","messageId":"394","endLine":86,"endColumn":56},{"ruleId":"391","severity":1,"message":"426","line":93,"column":9,"nodeType":"393","messageId":"394","endLine":93,"endColumn":17},{"ruleId":"391","severity":1,"message":"427","line":94,"column":9,"nodeType":"393","messageId":"394","endLine":94,"endColumn":28},{"ruleId":"396","severity":1,"message":"428","line":218,"column":10,"nodeType":"398","endLine":218,"endColumn":12,"suggestions":"429"},{"ruleId":"402","severity":1,"message":"403","line":290,"column":24,"nodeType":"404","endLine":290,"endColumn":110},{"ruleId":"402","severity":1,"message":"403","line":394,"column":32,"nodeType":"404","endLine":394,"endColumn":141},{"ruleId":"402","severity":1,"message":"403","line":398,"column":32,"nodeType":"404","endLine":398,"endColumn":115},{"ruleId":"402","severity":1,"message":"403","line":419,"column":24,"nodeType":"404","endLine":419,"endColumn":85},{"ruleId":"391","severity":1,"message":"430","line":6,"column":21,"nodeType":"393","messageId":"394","endLine":6,"endColumn":35},{"ruleId":"391","severity":1,"message":"431","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"432","line":8,"column":84,"nodeType":"393","messageId":"394","endLine":8,"endColumn":103},{"ruleId":"402","severity":1,"message":"403","line":129,"column":17,"nodeType":"404","endLine":129,"endColumn":136},{"ruleId":"391","severity":1,"message":"433","line":42,"column":13,"nodeType":"393","messageId":"394","endLine":42,"endColumn":21},{"ruleId":"391","severity":1,"message":"434","line":52,"column":17,"nodeType":"393","messageId":"394","endLine":52,"endColumn":27},{"ruleId":"435","severity":1,"message":"436","line":80,"column":47,"nodeType":"437","messageId":"438","endLine":80,"endColumn":48,"suggestions":"439"},{"ruleId":"435","severity":1,"message":"436","line":80,"column":63,"nodeType":"437","messageId":"438","endLine":80,"endColumn":64,"suggestions":"440"},{"ruleId":"391","severity":1,"message":"415","line":6,"column":16,"nodeType":"393","messageId":"394","endLine":6,"endColumn":26},{"ruleId":"391","severity":1,"message":"441","line":9,"column":9,"nodeType":"393","messageId":"394","endLine":9,"endColumn":19},{"ruleId":"391","severity":1,"message":"416","line":11,"column":9,"nodeType":"393","messageId":"394","endLine":11,"endColumn":24},{"ruleId":"391","severity":1,"message":"395","line":15,"column":26,"nodeType":"393","messageId":"394","endLine":15,"endColumn":41},{"ruleId":"391","severity":1,"message":"425","line":17,"column":32,"nodeType":"393","messageId":"394","endLine":17,"endColumn":56},{"ruleId":"391","severity":1,"message":"442","line":18,"column":28,"nodeType":"393","messageId":"394","endLine":18,"endColumn":45},{"ruleId":"396","severity":1,"message":"443","line":113,"column":10,"nodeType":"398","endLine":113,"endColumn":12,"suggestions":"444"},{"ruleId":"391","severity":1,"message":"445","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":24},{"ruleId":"402","severity":1,"message":"403","line":892,"column":45,"nodeType":"404","endLine":892,"endColumn":161},{"ruleId":"402","severity":1,"message":"403","line":1123,"column":45,"nodeType":"404","endLine":1123,"endColumn":75},{"ruleId":"446","severity":1,"message":"447","line":54,"column":5,"nodeType":"448","messageId":"449","endLine":57,"endColumn":6},{"ruleId":"450","severity":1,"message":"451","line":125,"column":21,"nodeType":"452","messageId":"453","endLine":125,"endColumn":38,"fix":"454"},{"ruleId":"450","severity":1,"message":"451","line":130,"column":21,"nodeType":"452","messageId":"453","endLine":130,"endColumn":38,"fix":"455"},{"ruleId":"450","severity":1,"message":"456","line":142,"column":21,"nodeType":"452","messageId":"453","endLine":142,"endColumn":40,"fix":"457"},{"ruleId":"450","severity":1,"message":"456","line":147,"column":21,"nodeType":"452","messageId":"453","endLine":147,"endColumn":40,"fix":"458"},{"ruleId":"450","severity":1,"message":"459","line":165,"column":21,"nodeType":"452","messageId":"453","endLine":165,"endColumn":38,"fix":"460"},{"ruleId":"450","severity":1,"message":"459","line":171,"column":21,"nodeType":"452","messageId":"453","endLine":171,"endColumn":38,"fix":"461"},{"ruleId":"391","severity":1,"message":"462","line":5,"column":22,"nodeType":"393","messageId":"394","endLine":5,"endColumn":32},{"ruleId":"446","severity":1,"message":"447","line":91,"column":5,"nodeType":"448","messageId":"449","endLine":94,"endColumn":6},{"ruleId":"450","severity":1,"message":"463","line":237,"column":21,"nodeType":"452","messageId":"453","endLine":237,"endColumn":37,"fix":"464"},{"ruleId":"450","severity":1,"message":"463","line":242,"column":21,"nodeType":"452","messageId":"453","endLine":242,"endColumn":37,"fix":"465"},{"ruleId":"450","severity":1,"message":"466","line":251,"column":21,"nodeType":"452","messageId":"453","endLine":251,"endColumn":40,"fix":"467"},{"ruleId":"450","severity":1,"message":"466","line":256,"column":21,"nodeType":"452","messageId":"453","endLine":256,"endColumn":40,"fix":"468"},{"ruleId":"450","severity":1,"message":"469","line":265,"column":21,"nodeType":"452","messageId":"453","endLine":265,"endColumn":41,"fix":"470"},{"ruleId":"450","severity":1,"message":"469","line":270,"column":21,"nodeType":"452","messageId":"453","endLine":270,"endColumn":41,"fix":"471"},{"ruleId":"450","severity":1,"message":"472","line":278,"column":21,"nodeType":"452","messageId":"453","endLine":278,"endColumn":41,"fix":"473"},{"ruleId":"450","severity":1,"message":"472","line":283,"column":21,"nodeType":"452","messageId":"453","endLine":283,"endColumn":41,"fix":"474"},{"ruleId":"391","severity":1,"message":"475","line":1,"column":28,"nodeType":"393","messageId":"394","endLine":1,"endColumn":37},{"ruleId":"391","severity":1,"message":"441","line":6,"column":9,"nodeType":"393","messageId":"394","endLine":6,"endColumn":19},{"ruleId":"391","severity":1,"message":"395","line":12,"column":26,"nodeType":"393","messageId":"394","endLine":12,"endColumn":41},{"ruleId":"391","severity":1,"message":"442","line":13,"column":28,"nodeType":"393","messageId":"394","endLine":13,"endColumn":45},{"ruleId":"402","severity":1,"message":"403","line":77,"column":25,"nodeType":"404","endLine":77,"endColumn":89},{"ruleId":"391","severity":1,"message":"476","line":2,"column":26,"nodeType":"393","messageId":"394","endLine":2,"endColumn":34},{"ruleId":"391","severity":1,"message":"477","line":23,"column":9,"nodeType":"393","messageId":"394","endLine":23,"endColumn":16},{"ruleId":"391","severity":1,"message":"395","line":26,"column":26,"nodeType":"393","messageId":"394","endLine":26,"endColumn":41},{"ruleId":"391","severity":1,"message":"442","line":27,"column":28,"nodeType":"393","messageId":"394","endLine":27,"endColumn":45},{"ruleId":"391","severity":1,"message":"478","line":29,"column":12,"nodeType":"393","messageId":"394","endLine":29,"endColumn":24},{"ruleId":"391","severity":1,"message":"395","line":29,"column":26,"nodeType":"393","messageId":"394","endLine":29,"endColumn":41},{"ruleId":"479","severity":1,"message":"480","line":43,"column":13,"nodeType":"404","endLine":43,"endColumn":118},{"ruleId":"391","severity":1,"message":"478","line":27,"column":12,"nodeType":"393","messageId":"394","endLine":27,"endColumn":24},{"ruleId":"391","severity":1,"message":"395","line":27,"column":26,"nodeType":"393","messageId":"394","endLine":27,"endColumn":41},{"ruleId":"391","severity":1,"message":"477","line":28,"column":9,"nodeType":"393","messageId":"394","endLine":28,"endColumn":16},{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","replacedBy":"484"},{"ruleId":"391","severity":1,"message":"485","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":20},{"ruleId":"486","severity":1,"message":"487","line":26,"column":17,"nodeType":"404","endLine":26,"endColumn":69},{"ruleId":"391","severity":1,"message":"488","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":29},{"ruleId":"489","severity":1,"message":"490","line":14,"column":37,"nodeType":"404","endLine":14,"endColumn":49},{"ruleId":"489","severity":1,"message":"490","line":15,"column":37,"nodeType":"404","endLine":15,"endColumn":49},{"ruleId":"489","severity":1,"message":"490","line":22,"column":37,"nodeType":"404","endLine":22,"endColumn":49},{"ruleId":"489","severity":1,"message":"490","line":23,"column":37,"nodeType":"404","endLine":23,"endColumn":49},{"ruleId":"489","severity":1,"message":"490","line":30,"column":37,"nodeType":"404","endLine":30,"endColumn":49},{"ruleId":"489","severity":1,"message":"490","line":31,"column":37,"nodeType":"404","endLine":31,"endColumn":49},{"ruleId":"391","severity":1,"message":"395","line":14,"column":26,"nodeType":"393","messageId":"394","endLine":14,"endColumn":41},{"ruleId":"391","severity":1,"message":"491","line":1,"column":9,"nodeType":"393","messageId":"394","endLine":1,"endColumn":12},{"ruleId":"391","severity":1,"message":"492","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":12},{"ruleId":"391","severity":1,"message":"493","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"494","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":20},{"ruleId":"391","severity":1,"message":"395","line":15,"column":26,"nodeType":"393","messageId":"394","endLine":15,"endColumn":41},{"ruleId":"391","severity":1,"message":"495","line":1,"column":14,"nodeType":"393","messageId":"394","endLine":1,"endColumn":18},{"ruleId":"391","severity":1,"message":"476","line":4,"column":9,"nodeType":"393","messageId":"394","endLine":4,"endColumn":17},{"ruleId":"402","severity":1,"message":"403","line":17,"column":17,"nodeType":"404","endLine":17,"endColumn":83},{"ruleId":"450","severity":1,"message":"496","line":34,"column":9,"nodeType":"452","messageId":"453","endLine":34,"endColumn":25,"fix":"497"},{"ruleId":"391","severity":1,"message":"498","line":14,"column":7,"nodeType":"393","messageId":"394","endLine":14,"endColumn":12},{"ruleId":"391","severity":1,"message":"477","line":23,"column":9,"nodeType":"393","messageId":"394","endLine":23,"endColumn":16},{"ruleId":"391","severity":1,"message":"499","line":10,"column":5,"nodeType":"393","messageId":"394","endLine":10,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setServerDomain' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'serverDomain'. Either include it or remove the dependency array.","ArrayExpression",["500"],"React Hook useEffect has missing dependencies: 'serverDomain' and 'user_id'. Either include them or remove the dependency array.",["501"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'home_desktop' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'setCurrentUserId' is assigned a value but never used.","'useHistory' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'selectedFile' is assigned a value but never used.","'useContext' is defined but never used.","'FrontEndContext' is defined but never used.","'OrganisationRegistration_css' is defined but never used.","'logo' is defined but never used.",["502"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'curr_organisation_id' is assigned a value but never used.","'set_curr_organisation_id' is assigned a value but never used.","'image_id' is assigned a value but never used.","'showReportFormTrack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'serverDomain'. Either include them or remove the dependency array.",["503"],"'ApiUrlProvider' is defined but never used.","'SearchIcon' is defined but never used.","'DescriptionOutlined' is defined but never used.","'isErrors' is assigned a value but never used.","'imageError' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["504","505"],["506","507"],"'ApiContext' is defined but never used.","'setFrontEndDomain' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'curr_organisation_id' and 'serverDomain'. Either include them or remove the dependency array.",["508"],"'CircularProgress' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-whitespace-before-property","Unexpected whitespace before property onToastDate.","MemberExpression","unexpectedWhitespace",{"range":"509","text":"510"},{"range":"511","text":"510"},"Unexpected whitespace before property onToastPaypal.",{"range":"512","text":"510"},{"range":"513","text":"510"},"Unexpected whitespace before property onToastCode.",{"range":"514","text":"510"},{"range":"515","text":"510"},"'makeStyles' is defined but never used.","Unexpected whitespace before property onToastCom.",{"range":"516","text":"510"},{"range":"517","text":"510"},"Unexpected whitespace before property onToastSocial.",{"range":"518","text":"510"},{"range":"519","text":"510"},"Unexpected whitespace before property onToastSocial1.",{"range":"520","text":"510"},{"range":"521","text":"510"},"Unexpected whitespace before property onToastSocial2.",{"range":"522","text":"510"},{"range":"523","text":"510"},"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'history' is assigned a value but never used.","'serverDomain' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-native-reassign",["524"],"no-negated-in-lhs",["525"],"'loaderStyles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'browse_general_footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Box' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'closeResults' is defined but never used.","'Link' is defined but never used.","Unexpected whitespace before property getReports.",{"range":"526","text":"510"},"'roles' is assigned a value but never used.","'WeekView' is defined but never used.",{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"527","fix":"531"},{"desc":"532","fix":"533"},{"messageId":"534","fix":"535","desc":"536"},{"messageId":"537","fix":"538","desc":"539"},{"messageId":"534","fix":"540","desc":"536"},{"messageId":"537","fix":"541","desc":"539"},{"desc":"542","fix":"543"},[3356,3358],".",[3543,3545],[3991,3993],[4180,4182],[4879,4881],[5096,5098],[7181,7183],[7367,7369],[7706,7708],[7894,7896],[8238,8240],[8427,8429],[8739,8741],[8928,8930],"no-global-assign","no-unsafe-negation",[1177,1179],"Update the dependencies array to be: [serverDomain]",{"range":"544","text":"545"},"Update the dependencies array to be: [serverDomain, user_id]",{"range":"546","text":"547"},{"range":"548","text":"545"},"Update the dependencies array to be: [id, serverDomain]",{"range":"549","text":"550"},"removeEscape",{"range":"551","text":"552"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"553","text":"554"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"555","text":"552"},{"range":"556","text":"554"},"Update the dependencies array to be: [curr_organisation_id, serverDomain]",{"range":"557","text":"558"},[3152,3154],"[serverDomain]",[6493,6495],"[serverDomain, user_id]",[14366,14368],[7536,7538],"[id, serverDomain]",[2645,2646],"",[2645,2645],"\\",[2661,2662],[2661,2661],[4066,4068],"[curr_organisation_id, serverDomain]"]